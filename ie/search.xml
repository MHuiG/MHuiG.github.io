<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>理解卷积</title>
      <link href="/ie/posts/xa6297acc.html"/>
      <url>/ie/posts/xa6297acc.html</url>
      
        <content type="html"><![CDATA[<p>本文的目的是深入的理解卷积,通过一些示例,卷积将会成为一个非常简单的想法.<br><a id="more"></a><br><a name="sGxZZ"></a></p><h1 id="抛球的经验"><a href="#抛球的经验" class="headerlink" title="抛球的经验"></a>抛球的经验</h1><p>想象一下，我们将一个球从某个高度掉落到地面上，球在该地面只能在一个方向上运动,如果您将球放下然后从其着陆点上方再次放下,球可能会前进的距离$c$是多少?<br>让我们分解一下。在第一次下落之后，它将以概率$f(x)$降落距起点$a$个单位，其中$f$是概率分布。<br>现在，在第一次下落之后，我们将球捡起并从其首次着陆点上方的另一个高度下落。球从新起点滚动$b$单位的概率为$g(b)$,其中$g$如果从不同高度掉落，则可能是不同的概率分布。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300815.6821573.png#align=left&display=inline&height=211&name=image.png&originHeight=422&originWidth=656&size=28603&status=done&style=none&width=328"><br>如果我们确定了第一个的结果，我们就知道了球的移动距离$a$，对于球的总距离为$c$，第二个球的移动距离也固定为$b$，其中$a+b=c$。因此发生这种情况的可能性就是$f(a)\cdot g(b)$。</p><p>让我们考虑一个具体的离散示例。 我们希望总距离$c$为$3$。如果它第一次滚动$a=2$，则第二次它必须滚动$b=1$,才能达到我们的总距离$a+b=3$。 这个概率是$f(2)\cdot g(1)$。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300815.8932931.png#align=left&display=inline&height=198&name=image.png&originHeight=214&originWidth=351&size=11062&status=done&style=none&width=324"><br>但是，这不是我们达到$3$的总距离的唯一方法。球第一次可以滚动$1$个单位，第二次可以滚动$2$个单位。 或第一次为$0$，第二次为$3$。 只要将$a$和$b$加和等于$3$，它就可以取任意值。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300816.1510792.png#align=left&display=inline&height=138&name=image.png&originHeight=240&originWidth=731&size=21851&status=done&style=none&width=419"><br>这个概率分别是$f(1)\cdot g(2)$和$f(0)\cdot g(3)$。</p><p>为了找出球到达总距离$c$的总可能性，我们不能仅考虑一种到达$c$的可能方式。 相反，我们考虑将$c$划分为两个球$a$和$b$的所有可能方法，并对每种方法的概率求和。<br>$$…f(0)\cdot g(3)+f(1)\cdot g(2)+f(2)\cdot g(1)…$$<br>我们已经知道，对于每种情况，$a+b=c$的概率就是$f(a)\cdot g(b)$。 因此，对$a+b=c$的每个解求和，我们可以将总似然表示为：<br>$$\sum_{a+b=c}f(a) \cdot g(b)$$<br>事实证明，我们正在做卷积! 特别地，定义在$c$处的$f$和$g$的卷积定义为：<br>$$(f\ast g)(c) = \sum_{a+b=c} f(a) \cdot g(b)$$<br>如果我们用$b = c−a$代替，我们得到：<br>$$(f\ast g)(c) = \sum_a f(a) \cdot g(c-a)$$<br>这是卷积的标准定义。<br>为了更具体一点，我们可以考虑球可能着陆的位置。 在第一次下降之后，它将以概率$f(a)$降落在中间位置$a$。 如果它降落在$a$处，则它有概率$g(c-a)$降落在位置$c$处。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300816.459257.png#align=left&display=inline&height=203&name=image.png&originHeight=406&originWidth=537&size=45920&status=done&style=none&width=269"><br>为了得到卷积，我们考虑所有中间位置。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300816.7659905.png#align=left&display=inline&height=222&name=image.png&originHeight=443&originWidth=765&size=90469&status=done&style=none&width=382.5"><br><a name="Q9KWU"></a></p><h1 id="可视化卷积"><a href="#可视化卷积" class="headerlink" title="可视化卷积"></a>可视化卷积</h1><p>有一个很好的技巧，可以帮助人们更轻松地思考卷积。</p><p>首先，观察。 假设一个球从其起点降落一定距离$x$的概率为$f(x)$。 然后，此后，它从着陆点开始的距离为$x$的概率为$f(-x)$。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300817.0737925.png#align=left&display=inline&height=183&name=image.png&originHeight=365&originWidth=792&size=57530&status=done&style=none&width=396"><br>果我们知道球在第二次下降后落在位置$c$上，那么前一个位置是$a$的概率是多少？<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300817.381621.png#align=left&display=inline&height=215&name=image.png&originHeight=430&originWidth=749&size=55369&status=done&style=none&width=374.5"></p><p>因此，先前位置为$a$的概率为$g(-(a-c))=g(c-a)$。</p><p>现在，考虑每个中间位置有助于球最终降落在$c$的概率。 我们知道第一滴将球放到中间位置$a$的概率是$f(a)$。 我们还知道，如果它降落在$c$上，它进入$a$的概率为$g(c-a)$。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300817.9015799.png#align=left&display=inline&height=288&name=image.png&originHeight=575&originWidth=727&size=72104&status=done&style=none&width=363.5"></p><p>对所有$a$求和，我们得到了卷积。</p><p>这种方法的优点是，它使我们可以在单个图片中可视化卷积在值$c$处的评估。 通过移动下半部分，我们可以评估其他$c$值的卷积。 这使我们能够从整体上理解卷积。</p><p>例如，我们可以看到分布对齐时达到峰值。</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300818.2092106.png#align=left&display=inline&height=335&name=image.png&originHeight=669&originWidth=619&size=75398&status=done&style=none&width=310"><br>且随着分布之间的交点变小而缩小。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300818.5186062.png#align=left&display=inline&height=290&name=image.png&originHeight=580&originWidth=718&size=58319&status=done&style=none&width=359"><br>过在动画中使用此技巧，实际上可以从视觉上理解卷积。</p><p>下面，我们可以看到两个框函数的卷积：</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300818.8397734.gif#align=left&display=inline&height=147&name=Wiki-BoxConvAnim.gif&originHeight=147&originWidth=468&size=84640&status=done&style=none&width=468"></p><p>有了这种观点，很多事情就会变得更加直观。</p><p>让我们考虑一个非概率示例。 卷积有时在音频处理中使用。 例如，一个函数可能会使用其中有两个尖峰但在其他所有地方为零的函数来创建回波。 当我们的双尖峰功能滑动时，一个尖峰首先击中一个时间点，将该信号添加到输出声音中，然后又出现另一个尖峰，并添加第二个延迟副本。</p><p><a name="I9I9I"></a></p><h1 id="高维卷积"><a href="#高维卷积" class="headerlink" title="高维卷积"></a>高维卷积</h1><p>卷积是一个非常笼统的想法。我们还可以将它们用于更大的尺寸。<br>让我们再次考虑一个落球的例子。现在，随着位置的下降，它的位置不仅在一维，而在二维。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300819.1500244.png#align=left&display=inline&height=239&name=image.png&originHeight=478&originWidth=703&size=83203&status=done&style=none&width=351.5"><br>卷积与以前相同：<br>$$(f\ast g)(c) = \sum_{a+b=c} f(a) \cdot g(b)$$<br>除了，现在$a$，$b$和$c$是向量。更明确地说，<br>$$(f\ast g)(c_1, c_2) = \sum_{\begin{array}{c}a_1+b_1=c_1\\a_2+b_2=c_2\end{array}} f(a_1,a_2) \cdot g(b_1,b_2)$$</p><p>或在标准定义中：<br>$$(f\ast g)(c_1, c_2) = \sum_{a_1, a_2} f(a_1, a_2) \cdot g(c_1-a_1,~ c_2-a_2)$$<br>就像一维卷积一样，我们可以将二维卷积视为将一个函数滑动到另一个函数之上，相乘和相加。<br>一种常见的应用是图像处理。我们可以将图像视为二维函数。许多重要的图像转换都是卷积，您可以在其中将图像函数与一个非常小的局部函数（称为“卷积核”）进行卷积。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300819.457678.png#align=left&display=inline&height=152&name=image.png&originHeight=304&originWidth=758&size=57072&status=done&style=none&width=379"><br>卷积核滑动到图像的每个位置，并计算一个新像素作为其浮动像素的加权和。<br>例如，通过平均3x3像素矩阵，我们可以使图像模糊。 为此，我们的内核在框中的每个像素上取值$\frac{1}{9}$，<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300819.8681216.png#align=left&display=inline&height=208&name=image.png&originHeight=415&originWidth=811&size=313286&status=done&style=none&width=405.5"><br>我们还可以通过在两个相邻像素上取值$-1$和$1$，在其他所有位置取零来检测边缘。 也就是说，我们减去两个相邻像素。 当并排像素相似时，这大约等于零。 然而，在边缘上，相邻像素在垂直于边缘的方向上有很大不同。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300820.2254002.png#align=left&display=inline&height=202&name=image.png&originHeight=404&originWidth=781&size=170806&status=done&style=none&width=390.5"><br><a name="vgCzR"></a></p><h1 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h1><p>那么，卷积与卷积神经网络有何关系？</p><p>考虑一个具有输入${x_n}$和输出${y_n}$的一维卷积层，就像这样：<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300820.5321362.png#align=left&display=inline&height=122&name=image.png&originHeight=243&originWidth=781&size=53682&status=done&style=none&width=390.5"><br>正如我们观察到的，我们可以用输入来描述输出：<br>$$y_n = A(x_{n}, x_{n+1}, …)$$<br>通常，A将是多个神经元。 但是假设它只是一个神经元。<br>回想一下，神经网络中的典型神经元描述为：<br>$$\sigma(w_0 x_0 + w_1 x_1 + w_2 x_2 … + b)$$<br>其中$x_0，x_1…$是输入。 权重$w_0，w_1……$描述了神经元如何连接到其输入。 负权重表示输入抑制神经元的激活，而正权重则鼓励神经元激活。 权重是神经元的心脏，控制神经元的行为。说多个神经元是相同的，这与说权重相同是一回事。<br>卷积将为我们处理的是神经元的这种连线，描述了所有权重以及哪些权重相同。<br>通常，我们一次而不是单独描述一个层中的所有神经元。 诀窍是要有一个权重矩阵$W$：<br>$$y = \sigma(Wx + b)$$<br>例如，我们得到：<br>$$y_0 = \sigma(W_{0,0} x_0 + W_{0,1} x_1 + W_{0,2} x_2 …)$$<br>$$y_1 = \sigma(W_{1,0} x_0 + W_{1,1} x_1 + W_{1,2} x_2 …)$$<br>矩阵的每一行都描述了将神经元连接到其输入的权重。<br>但是，返回到卷积层，因为同一神经元有多个副本，所以许多权重出现在多个位置。<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300820.8398156.png#align=left&display=inline&height=118&name=image.png&originHeight=236&originWidth=773&size=56789&status=done&style=none&width=386.5"><br>对应于等式：<br>$$y_0 = \sigma(W_0 x_0 + W_1 x_1 -b)$$<br>$$y_1 = \sigma(W_0 x_1 + W_1 x_2 -b)$$<br>因此，通常，权重矩阵会将每个输入连接到具有不同权重的每个神经元：<br>$$<br>W = \begin{bmatrix}<br>W_{0,0} &amp; W_{0,1} &amp; W_{0,2} &amp; W_{0,3} &amp; …\\<br>W_{1,0} &amp; W_{1,1} &amp; W_{1,2} &amp; W_{1,3} &amp; …\\<br>W_{2,0} &amp; W_{2,1} &amp; W_{2,2} &amp; W_{2,3} &amp; …\\<br>W_{3,0} &amp; W_{3,1} &amp; W_{3,2} &amp; W_{3,3} &amp; …\\<br>… &amp; … &amp; … &amp; … &amp; …\\<br>\end{bmatrix}<br>$$<br>像上面的卷积层的矩阵看起来很不一样。 相同的权重出现在多个位置中。 而且由于神经元没有连接到许多可能的输入，因此存在很多零。<br>$$<br>W = \begin{bmatrix}<br>w_0 &amp; w_1 &amp; 0 &amp; 0 &amp; …\\<br>0 &amp; w_0 &amp; w_1 &amp; 0 &amp; …\\<br>0 &amp; 0 &amp; w_0 &amp; w_1 &amp; …\\<br>0 &amp; 0 &amp; 0 &amp; w_0 &amp; …\\<br>… &amp; … &amp; … &amp; … &amp; …\\<br>\end{bmatrix}<br>$$<br>与上述矩阵相乘与与$[… 0，w_1，w_0,0 …]$卷积相同。 滑动到不同位置的功能对应于在那些位置具有神经元。<br>二维卷积层呢？<br><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300821.1952348.png#align=left&display=inline&height=163&name=image.png&originHeight=326&originWidth=504&size=103555&status=done&style=none&width=252"><br>二维卷积层的布线对应于二维卷积。<br>考虑上面的示例，通过使用卷积来检测图像边缘，方法是在周围滑动一个内核并将其应用于每个面片。 就像这样，卷积层会将神经元应用于图像的每个patch。<br></p><p><a name="qSLyP"></a></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>我们在此博客文章中介绍了许多数学机制，但是获得的结果可能并不明显。 卷积显然是概率论和计算机图形学中的有用工具，但是从卷积的角度说卷积神经网络有什么好处呢？</p><p>第一个优点是我们拥有一些非常强大的语言来描述网络的布线。 到目前为止，我们所处理的示例还不够复杂，以至于无法清楚地看到这种好处，但是通过卷积可以使我们摆脱大量令人不快的簿记工作。</p><p>其次，卷积具有明显的实施优势。 许多库提供高效的卷积例程。 此外，尽管卷积天真地看起来是$O(n2)$运算，但使用一些相当深的数学见解，就有可能创建$O(nlog(n))$实现。 我们将在以后的文章中对此进行更详细的讨论。</p><p>实际上，在GPU上使用高效并行卷积实现对于计算机视觉的最新进展至关重要。</p>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
          <category> 概率 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
            <tag> 概率 </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript反调试</title>
      <link href="/ie/posts/bfe2ff2a.html"/>
      <url>/ie/posts/bfe2ff2a.html</url>
      
        <content type="html"><![CDATA[<p>总结一下关于JavaScript反调试技巧方面的内容。本文的目的是收集与JavaScript中的反调试有关的小窍门（其中一些已经被恶意软件或商业产品使用）。<br><a id="more"></a></p><p>对于JavaScript来说，你只需要花一点时间进行调试和分析，你就能够了解到JavaScript代码段的功能逻辑。而我们所要讨论的内容，可以给那些想要分析你JavaScript代码的人增加一定的难度。不过我们的技术跟代码混淆无关，我们主要针对的是如何给代码主动调试增加困难。<br>本文所要介绍的技术方法大致如下：</p><ul><li><ol><li>检测未知的执行环境（我们的代码只想在浏览器中被执行）；</li></ol></li><li><ol start="2"><li>检测调试工具（例如DevTools）；</li></ol></li><li><ol start="3"><li>代码完整性控制；</li></ol></li><li><ol start="4"><li>流完整性控制；</li></ol></li><li><ol start="5"><li>反模拟；</li></ol></li></ul><p>简而言之，如果我们检测到了“不正常”的情况，程序的运行流程将会改变，并跳转到伪造的代码块，并“隐藏”真正的功能代码。</p><p><a name="7Gd5U"></a></p><h1 id="函数重定义"><a href="#函数重定义" class="headerlink" title="函数重定义"></a><strong>函数重定义</strong></h1><p>这是一种最基本也是最常用的代码反调试技术了。在JavaScript中，我们可以对用于收集信息的函数进行重定义。比如说，<strong>console.log()</strong>函数可以用来收集函数和变量等信息，并将其显示在控制台中。如果我们重新定义了这个函数，我们就可以修改它的行为，并隐藏特定信息或显示伪造的信息。<br>我们可以直接在DevTools中运行这个函数来了解其功能：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"HelloWorld"</span>);</span><br><span class="line"><span class="keyword">var</span> fake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="built_in">window</span>[<span class="string">'console'</span>][<span class="string">'log'</span>]= fake;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Youcan't see me!"</span>);</span><br></pre></td></tr></table></figure><p>运行后我们将会看到：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM127:<span class="number">1</span> HelloWorld</span><br></pre></td></tr></table></figure><p>你会发现第二条信息并没有显示，因为我们重新定义了这个函数，即“禁用”了它原本的功能。但是我们也可以让它显示伪造的信息。比如说这样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"Normalfunction"</span>);</span><br><span class="line"><span class="comment">//First we save a reference to the original console.log function</span></span><br><span class="line"><span class="keyword">var</span> original = <span class="built_in">window</span>[<span class="string">'console'</span>][<span class="string">'log'</span>];</span><br><span class="line"><span class="comment">//Next we create our fake function</span></span><br><span class="line"><span class="comment">//Basicly we check the argument and if match we call original function with otherparam.</span></span><br><span class="line"><span class="comment">// If there is no match pass the argument to the original function</span></span><br><span class="line"><span class="keyword">var</span> fake = <span class="function"><span class="keyword">function</span>(<span class="params">argument</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (argument === <span class="string">"Ka0labs"</span>) &#123;</span><br><span class="line">    original(<span class="string">"Spoofed!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    original(argument);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// We redefine now console.log as our fake function</span></span><br><span class="line"><span class="built_in">window</span>[<span class="string">'console'</span>][<span class="string">'log'</span>]= fake;</span><br><span class="line"><span class="comment">//Then we call console.log with any argument</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Thisis unaltered"</span>);</span><br><span class="line"><span class="comment">//Now we should see other text in console different to "Ka0labs"</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Ka0labs"</span>);</span><br><span class="line"><span class="comment">//Aaaand everything still OK</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Byebye!"</span>);</span><br></pre></td></tr></table></figure><p>如果一切正常的话：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VM84:<span class="number">1</span> Normalfunction</span><br><span class="line">VM84:<span class="number">11</span> Thisis unaltered</span><br><span class="line">VM84:<span class="number">9</span> Spoofed!</span><br><span class="line">VM84:<span class="number">11</span> Byebye!</span><br></pre></td></tr></table></figure><p>实际上，为了控制代码的执行方式，我们还能够以更加聪明的方式来修改函数的功能。比如说，我们可以基于上述代码来构建一个代码段，并重定义<strong>eval</strong>函数。我们可以把JavaScript代码传递给<strong>eval</strong>函数，接下来代码将会被计算并执行。如果我们重定义了这个函数，我们就可以运行不同的代码了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Just a normal eval</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"console.log('1337')"</span>);</span><br><span class="line"><span class="comment">//Now we repat the process...</span></span><br><span class="line"><span class="keyword">var</span> original = <span class="built_in">eval</span>;</span><br><span class="line"><span class="keyword">var</span> fake = <span class="function"><span class="keyword">function</span>(<span class="params">argument</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// If the code to be evaluated contains1337...</span></span><br><span class="line">  <span class="keyword">if</span> (argument.indexOf(<span class="string">"1337"</span>) !==<span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="comment">// ... we just execute a different code</span></span><br><span class="line">    original(<span class="string">"for (i = 0; i &lt; 10;i++) &#123; console.log(i);&#125;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    original(argument);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">eval</span>= fake;</span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"console.log('Weshould see this...')"</span>);</span><br><span class="line"><span class="comment">//Now we should see the execution of a for loop instead of what is expected</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"console.log('Too1337 for you!')"</span>);</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">VM171:<span class="number">1</span> <span class="number">1337</span></span><br><span class="line">VM172:<span class="number">1</span> Weshould see <span class="keyword">this</span>...</span><br><span class="line">VM173:<span class="number">1</span> <span class="number">0</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">1</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">2</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">3</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">4</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">5</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">6</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">7</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">8</span></span><br><span class="line">VM173:<span class="number">1</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><p>通过这种方式修改程序流是一个很酷的技巧，但是正如我们在一开始所说的那样，它是最基本的技巧，很容易被发现并被击败。这是因为在JavaScript中，每个函数都有一个方法<strong>toString</strong>（或Firefox中的toSource）返回其自己的代码。因此，仅需要检查所需函数的代码是否已更改。当然，我们可以重新定义方法toString / toSource，但是我们陷入了同样的情况：<strong>function.toString.toString()</strong>。<br><a name="ZdA3M"></a></p><h1 id="断点"><a href="#断点" class="headerlink" title="断点"></a><strong>断点</strong></h1><p>为了帮助我们了解代码的功能，JavaScript调试工具（例如DevTools）都可以通过设置断点的方式阻止脚本代码执行，而断点也是代码调试中最基本的了。<br>如果你研究过调试器或者x86架构，你可能会比较熟悉0xCC指令。在JavaScript中，我们有一个名叫debugger的类似指令。当我们在代码中声明了debugger函数后，脚本代码将会在debugger指令这里停止运行。比如说：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"Seeme!"</span>);</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Seeme!"</span>);</span><br></pre></td></tr></table></figure><p>很多商业产品会在代码中定义一个无限循环的debugger指令，不过某些浏览器会屏蔽这种代码，而有些则不会。这种方法的主要目的就是让那些想要调试你代码的人感到厌烦，因为无限循环意味着代码会不断地弹出窗口来询问你是否要继续运行脚本代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">while</span> (<span class="literal">true</span>) &#123;<span class="built_in">eval</span>(<span class="string">"debugger"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="keyword">debugger</span>; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>() - a &gt; <span class="number">100</span>;&#125;, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><p><a name="PzsD6"></a></p><h1 id="时间差异"><a href="#时间差异" class="headerlink" title="时间差异"></a>时间差异</h1><p>这是一种从传统反逆向技术那里借鉴过来的基于时间的反调试技巧。当脚本在DevTools等工具环境下执行时，运行速度会非常慢（时间久），所以我们就可以根据运行时间来判断脚本当前是否正在被调试。比如说，我们可以通过测量代码中两个设置点之间的运行时间，然后用这个值作为参考，如果运行时间超过这个值，说明脚本当前在调试器中运行。<br>演示代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> startTime = performance.now(), check,diff;</span><br><span class="line"> <span class="keyword">for</span> (check = <span class="number">0</span>; check &lt; <span class="number">1000</span>; check++)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(check);</span><br><span class="line">  <span class="built_in">console</span>.clear();</span><br><span class="line"> &#125;</span><br><span class="line"> diff = performance.now() - startTime;</span><br><span class="line"> <span class="keyword">if</span> (diff &gt; <span class="number">200</span>)&#123;</span><br><span class="line">  alert(<span class="string">"Debugger detected!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;,<span class="number">500</span>);</span><br></pre></td></tr></table></figure><p><a name="hxm4i"></a></p><h1 id="DevTools检测（I）-Chrome-：getter"><a href="#DevTools检测（I）-Chrome-：getter" class="headerlink" title="DevTools检测（I）[Chrome]：getter"></a>DevTools检测（I）[Chrome]：getter</h1><p>这项技术利用的是div元素中的id属性，当div元素被发送至控制台（例如<strong>console.log(div)</strong>）时，浏览器会自动尝试获取其中的元素id。如果代码在调用了<strong>console.log</strong>之后又调用了<strong>getter</strong>方法，说明控制台当前正在运行。<br>简单的概念验证代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">let</span> loop = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(div);</span><br><span class="line">  <span class="built_in">console</span>.clear();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(div,<span class="string">"id"</span>, &#123;<span class="attr">get</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearInterval(loop);</span><br><span class="line">  alert(<span class="string">"Dev Tools detected!"</span>);</span><br><span class="line">&#125;&#125;);</span><br></pre></td></tr></table></figure><p><a name="Qhzcj"></a></p><h1 id="DevTools检测（II）-Chrome-：大小更改"><a href="#DevTools检测（II）-Chrome-：大小更改" class="headerlink" title="DevTools检测（II）[Chrome]：大小更改"></a>DevTools检测（II）[Chrome]：大小更改</h1><p>如果打开了DevTools（除非将其取消对接打开），则<strong>window.outerWidth / Height</strong>和<strong>window.innerWidth / Height</strong>之间的差异将发生变化，因此可以循环检测。<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9kZXZ0b29scy1kZXRlY3Q=" title="https://github.com/sindresorhus/devtools-detect">Devtools-detect<i class="fa fa-external-link"></i></span>使用此技巧：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> widthThreshold = <span class="built_in">window</span>.outerWidth - <span class="built_in">window</span>.innerWidth &gt; threshold;</span><br><span class="line"><span class="keyword">const</span> heightThreshold = <span class="built_in">window</span>.outerHeight - <span class="built_in">window</span>.innerHeight &gt; threshold;</span><br><span class="line"><span class="keyword">const</span> orientation = widthThreshold ? <span class="string">'vertical'</span> : <span class="string">'horizontal'</span>;</span><br></pre></td></tr></table></figure><p><a name="vvVVW"></a></p><h1 id="隐式流完整性控制"><a href="#隐式流完整性控制" class="headerlink" title="隐式流完整性控制"></a><strong>隐式流完整性控制</strong></h1><p>当我们尝试对JavaScript代码段进行模糊处理时，第一步就是开始重命名一些变量和函数，以阐明源代码。您只需将代码拆分为较小的代码块，然后开始在此处和此处重命名。在JavaScript中，我们可以检查函数名称是否已更改或保持相同的名称。或更准确地说，我们可以检查堆栈跟踪是否包含原始名称和原始顺序。<br>使用arguments.callee.caller，我们可以创建堆栈跟踪，以保存先前执行的函数。我们可以使用此信息来生成一个哈希，该哈希将成为用于生成用于解密JavaScript其他部分的密钥的种子。这样，我们就可以对流的完整性进行隐式控制，因为如果重命名功能或要执行的功能顺序稍有不同，则创建的哈希将完全不同。如果哈希不同，则生成的密钥也将不同。如果密钥不同，则无法解密代码。为了更好地理解它，请参见下一个示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCallStack</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> stack = <span class="string">"#"</span>, total = <span class="number">0</span>, fn =<span class="built_in">arguments</span>.callee;</span><br><span class="line">  <span class="keyword">while</span> ( (fn = fn.caller) ) &#123;</span><br><span class="line">    stack = stack + <span class="string">""</span> +fn.name;</span><br><span class="line">    total++</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stack</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(getCallStack());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  test1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test3</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  test2();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test4</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  test3();</span><br><span class="line">&#125;</span><br><span class="line">test4();</span><br></pre></td></tr></table></figure><p><br>执行此代码时，您将看到字符串<strong>#test1test2test3test4</strong>。如果我们修改（我邀请您这样做）任何函数的名称，返回的字符串也将不同。我们可以使用该字符串计算安全哈希，然后将其用作种子，以得出用于解密其他代码块的密钥。有趣的是，如果由于密钥无效（分析人员更改了函数名称）而无法解密下一个代码块，则可以捕获异常并将执行流重定向到伪路径。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM50:10 #test1test2test3test4</span><br></pre></td></tr></table></figure><p>请记住，此技巧需要与强大的混淆功能结合在一起才能使用。<br><a name="JMjtT"></a></p><h1 id="隐式代码完整性控制"><a href="#隐式代码完整性控制" class="headerlink" title="隐式代码完整性控制"></a><strong>隐式代码完整性控制</strong></h1><p>在“ 函数重新定义”部分的结尾，我们提到可以使用toString（）方法检索JavaScript中函数的代码。就像我们说过的那样，这对于检查函数是否已重新定义很有用，实际上，可以使用相同的想法来知道函数的代码是否被修改。</p><p>效果较差的方法是计算函数或代码块的哈希并将其与已知表进行比较。但是这种方法确实很愚蠢。一种更现实，更有效的方法可以重复使用我们之前在堆栈跟踪中使用的相同策略。我们可以计算代码块的哈希值，并将其用作解密其他代码块的密钥。</p><p>创建隐式完整性控件的最漂亮方法是在md5中使用冲突。基本上，我们可以创建在自己的函数中测试其自己的md5的函数。为了在功能内执行检查，我们需要进行碰撞处理（我们想创建类似的东西<strong>function(){ if (md5(arguments.callee.toString() === ‘<md5>‘) code_function;</md5></strong>}。</p><p>该技术背后的概念与用于生成图像文件的概念相同，在自己的图片中显示了md5校验和。这是一个经典示例：显示自己的md5校验和的gif。</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/mhuig.github.io@master/images/1585300815.0147882.gif#align=left&display=inline&height=203&name=md5.gif&originHeight=203&originWidth=855&size=85606&status=done&style=none&width=855"></p><p>(注:本站的图片处理策略更改了图片md5值,点击查看原图=&gt; <span class="exturl" data-url="aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01IdWlHL2ltZ2JlZEBtYXN0ZXIvZGF0YS9tZDUuZ2lm" title="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/md5.gif">显示自己的md5校验和的gif<i class="fa fa-external-link"></i></span>)</p><p>关于如何产生这种冲突，有大量的文章（甚至在PoC || GTFO中出现了一些示例），但是我阅读并可以复制的第一个文章是<span class="exturl" data-url="aHR0cHM6Ly9uYXRtY2h1Z2guYmxvZ3Nwb3QuY29tLmVzLzIwMTQvMTAvaG93LWktbWFkZS10d28tcGhwLWZpbGVzLXdpdGgtc2FtZS1tZDUuaHRtbA==" title="https://natmchugh.blogspot.com.es/2014/10/how-i-made-two-php-files-with-same-md5.html">使用PHP编写的<i class="fa fa-external-link"></i></span>。您可以非常快速地预先计算生成碰撞所需的块。实际上，<span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vY2d2d3pxL2M3MDkwMWRjNDZhZWI4YTNkNzBkYzcwMTc3NDI4YTMw" title="https://gist.github.com/cgvwzq/c70901dc46aeb8a3d70dc70177428a30">这<i class="fa fa-external-link"></i></span>是<span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9jZ3Z3enE=" title="https://twitter.com/cgvwzq">@cgvwzq<i class="fa fa-external-link"></i></span>创建的示例，通过这种方式检查了函数内容的完整性。</p><p>如前所述，我们需要对这种技术进行强力混淆。</p><p><a name="KbsgU"></a></p><h1 id="代理对象-old-已弃用"><a href="#代理对象-old-已弃用" class="headerlink" title="代理对象(old,已弃用)"></a><strong>代理对象(old,已弃用)</strong></h1><p>代理对象是目前JavaScript中最有用的一个工具，这种对象可以帮助我们了解代码中的其他对象，包括修改其行为以及触发特定环境下的对象活动。比如说，我们可以创建一个嗲哩对象并跟踪每一次<code>document.createElement</code>调用，然后记录下相关信息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> handler = &#123; <span class="comment">// Our hook to keep the track</span></span><br><span class="line">  apply: <span class="function"><span class="keyword">function</span> (<span class="params">target, thisArg, args</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Intercepted a call tocreateElement with args: "</span> + args);</span><br><span class="line">    <span class="keyword">return</span> target.apply(thisArg, args)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="built_in">document</span>.createElement= <span class="keyword">new</span> <span class="built_in">Proxy</span>(<span class="built_in">document</span>.createElement, handler) <span class="comment">// Create our proxy object withour hook ready to intercept</span></span><br><span class="line"><span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br></pre></td></tr></table></figure><p>接下来，我们可以在控制台中记录下相关参数和信息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM216:<span class="number">3</span> Intercepted a call tocreateElement <span class="keyword">with</span> args: div</span><br></pre></td></tr></table></figure><p>我们可以利用这些信息并通过拦截某些特定函数来调试代码，但是本文的主要目的是为了介绍反调试技术，那么我们如何检测“对方”是否使用了代理对象呢？其实这就是一场“猫抓老鼠”的游戏，比如说，我们可以使用相同的代码段，然后尝试调用toString方法并捕获异常：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Call a "virgin" createElement:</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="built_in">document</span>.createElement.toString();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"I saw your proxy!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>信息如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"function createElement() &#123; [native code] &#125;"</span></span><br></pre></td></tr></table></figure><p>但是当我们使用了代理之后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Then apply the hook</span></span><br><span class="line"><span class="keyword">const</span> handler = &#123;</span><br><span class="line">  apply: <span class="function"><span class="keyword">function</span> (<span class="params">target, thisArg, args</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Intercepted a call tocreateElement with args: "</span> + args);</span><br><span class="line">    <span class="keyword">return</span> target.apply(thisArg, args)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.createElement= <span class="keyword">new</span> <span class="built_in">Proxy</span>(<span class="built_in">document</span>.createElement, handler);</span><br><span class="line">  </span><br><span class="line"><span class="comment">//Callour not-so-virgin-after-that-party createElement</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="built_in">document</span>.createElement.toString();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"I saw your proxy!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没错，我们确实可以检测到代理：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM391:<span class="number">13</span> I saw your proxy!</span><br></pre></td></tr></table></figure><p>我们还可以添加toString方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> handler = &#123;</span><br><span class="line">  apply: <span class="function"><span class="keyword">function</span> (<span class="params">target, thisArg, args</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Intercepted a call tocreateElement with args: "</span> + args);</span><br><span class="line">    <span class="keyword">return</span> target.apply(thisArg, args)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.createElement= <span class="keyword">new</span> <span class="built_in">Proxy</span>(<span class="built_in">document</span>.createElement, handler);</span><br><span class="line"><span class="built_in">document</span>.createElement= <span class="built_in">Function</span>.prototype.toString.bind(<span class="built_in">document</span>.createElement); <span class="comment">//Add toString</span></span><br><span class="line"><span class="comment">//Callour not-so-virgin-after-that-party createElement</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="built_in">document</span>.createElement.toString();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"I saw your proxy!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们就没办法检测到了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"function createElement() &#123; [native code] &#125;"</span></span><br></pre></td></tr></table></figure><p><a name="E2OL6"></a></p><h1 id="代理对象"><a href="#代理对象" class="headerlink" title="代理对象"></a>代理对象</h1><p>异常把戏不能再使用了。幸运的是，我们仍然可以通过<strong>toString</strong>长度检测代理对象的使用。例如，<code>document.createElement</code>的大小为42（Chrome）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.createElement.toString().length</span><br><span class="line"><span class="number">42</span></span><br></pre></td></tr></table></figure><p>另一方面，当我们创建代理时，此值将更改：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> handler = &#123;</span><br><span class="line">    apply: <span class="function"><span class="keyword">function</span>(<span class="params">target, thisArg, args</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Intercepted call"</span>);</span><br><span class="line">        <span class="keyword">return</span> target.apply(thisArg, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.createElement = <span class="keyword">new</span> <span class="built_in">Proxy</span>(<span class="built_in">document</span>.createElement, handler);</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.createElement.toString().length</span><br><span class="line"><span class="number">29</span></span><br></pre></td></tr></table></figure><p>因此，我们可以执行以下操作：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.createElement.toString().length &lt; <span class="number">30</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"I saw your proxy"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Not a proxy"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此技巧不能在windoww对象中使用，但仍然有用。<br><a name="0LnQE"></a></p><h1 id="限制环境"><a href="#限制环境" class="headerlink" title="限制环境"></a>限制环境</h1><p>如引言中所述，我们想要做的一件事就是尝试检测代码是否在正确的环境中执行。<br>我们所谓的“正确的环境”是：</p><ul><li>该代码正在浏览器（不是仿真器，不是NodeJS等）中执行。</li><li>该代码正在指定给它的域/资源中执行（不是本地服务器）</li></ul><p>例如，我们可以用来证明代码是否在本地执行的简单检查是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Pretty stupid idea found in commercial software</span></span><br><span class="line"><span class="keyword">if</span> (location.hostname === <span class="string">"localhost"</span> || location.hostname === <span class="string">"127.0.0.1"</span> || location.hostname === <span class="string">""</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Don't run me here!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我们在本地html中运行此JavaScript代码段，则会看到以下消息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM28:<span class="number">3</span> Don<span class="string">'t run me here!</span></span><br></pre></td></tr></table></figure><p>按照这个想法，另一个检查选项是用于打开文档的处理程序（类似if (location.protocol == ‘file:’){…}），或者尝试通过HTTP请求进行测试，以确定是否有其他资源（图像，css等）可用。当然，所有这些方法都非常容易被绕过。<br>如果代码是在NodeJS中执行的（或者正如我们在本文中提到的：将流更改为伪造的路径），则可以避免执行代码。这很危险，但是我在野外看到使用NodeJS来<span class="exturl" data-url="aHR0cHM6Ly93d3cudGFybG9naWMuY29tL2Jsb2cvYXV0b21hdGl6YW5kby1kZXNhZmlvcy1qYXZhc2NyaXB0LW5vZGVqcy1weXRob24v" title="https://www.tarlogic.com/blog/automatizando-desafios-javascript-nodejs-python/">解决JavaScript挑战并绕过反暴力缓解措施<i class="fa fa-external-link"></i></span>。<br>我们可以尝试检测仅存在于浏览器上下文中的对象的存在：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Under NodeJS</span></span><br><span class="line">   <span class="keyword">try</span> &#123; </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">window</span>); </span><br><span class="line">   &#125; <span class="keyword">catch</span>(e)&#123; </span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"NodeJS detected!!!!"</span>); </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">NodeJS detected!!!!</span><br></pre></td></tr></table></figure><p>反之亦然：在NodeJS中，我们具有浏览器上下文中不存在的对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Under the browser</span></span><br><span class="line"><span class="built_in">console</span>.log(global)</span><br><span class="line">VM104:<span class="number">1</span> Uncaught <span class="built_in">ReferenceError</span>: global is not defined</span><br><span class="line">    at &lt;anonymous&gt;:<span class="number">1</span>:<span class="number">13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Under NodeJS</span></span><br><span class="line">  <span class="built_in">console</span>.log(global)</span><br><span class="line">&#123; <span class="attr">console</span>: </span><br><span class="line">   Console &#123;</span><br><span class="line">     log: [<span class="built_in">Function</span>: bound log],...</span><br><span class="line">     ...</span><br></pre></td></tr></table></figure><p>我们可以搜索仅存在于浏览器中的大量元数据。我们可以检索到的一些此类想法可以在<span class="exturl" data-url="aHR0cHM6Ly9wYW5vcHRpY2xpY2suZWZmLm9yZy8=" title="https://panopticlick.eff.org/">Panopticlick Project中<i class="fa fa-external-link"></i></span>看到。</p><p><a name="yjffw"></a></p><h1 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h1><p><span class="exturl" data-url="aHR0cHM6Ly94LWMzbGwuZ2l0aHViLmlvL3Bvc3RzL2phdmFzY3JpcHQtYW50aWRlYnVnZ2luZy8=" title="https://x-c3ll.github.io/posts/javascript-antidebugging/">javascript-antidebugging<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 反调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Npm更换源</title>
      <link href="/ie/posts/ba036091.html"/>
      <url>/ie/posts/ba036091.html</url>
      
        <content type="html"><![CDATA[<p>由于npm的源在国外，所以国内用户使用起来有很多不方便，比如拖慢下载速度。<br><a id="more"></a></p><p><a name="wdNYR"></a></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>有很多方法来配置npm registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm为例<br><a name="RcXMe"></a></p><h2 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install express</span><br></pre></td></tr></table></figure><p><a name="KY7JG"></a></p><h2 id="持久使用"><a href="#持久使用" class="headerlink" title="持久使用"></a>持久使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>配置后可通过下面方式来验证是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm info express</span><br></pre></td></tr></table></figure><p><a name="G4uHw"></a></p><h2 id="更换为淘宝npm源"><a href="#更换为淘宝npm源" class="headerlink" title="更换为淘宝npm源"></a>更换为淘宝npm源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>通过cnpm更新模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install expresstall express</span><br></pre></td></tr></table></figure><p><a name="zKEKD"></a></p><h2 id="使用官方镜像"><a href="#使用官方镜像" class="headerlink" title="使用官方镜像"></a>使用官方镜像</h2><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LBS 球面距离公式</title>
      <link href="/ie/posts/5e7ad437.html"/>
      <url>/ie/posts/5e7ad437.html</url>
      
        <content type="html"><![CDATA[<p>维基百科推荐使用$Haversine$公式，理由是$Great-circle distance$公式用到了大量余弦函数， 而两点间距离很短时（比如地球表面上相距几百米的两点），余弦函数会得出0.999…的结果， 会导致较大的舍入误差。而$Haversine$公式采用了正弦函数，即使距离很小，也能保持足够的有效数字。 以前采用三角函数表计算时的确会有这个问题，但经过实际验证，采用计算机来计算时，两个公式的区别不大。 稳妥起见，这里还是采用$Haversine$公式。</p><a id="more"></a><p><a name="6d7KV"></a></p><h2 id="Haversine公式"><a href="#Haversine公式" class="headerlink" title="Haversine公式"></a>Haversine公式</h2><p>$$haversin(\frac{d}{R}) = haversin(φ2 - φ1) + cos(φ1) cos(φ2) haversin(⊿λ)$$<br>其中<br>$$haversin(θ) = sin(\frac{θ}{2})^2 = \frac{1- cos(θ)}{2}$$</p><p>$R$为地球半径，可取平均值$ 6371.137km$<br>$φ_1$, $φ_2$ 表示两点的纬度；<br>$Δλ$ 表示两点经度的差值。</p><p><a name="y6pSL"></a></p><h2 id="距离计算函数"><a href="#距离计算函数" class="headerlink" title="距离计算函数"></a>距离计算函数</h2><p>下面就是计算球面间两点$(lat0, lng)-(lat1, lng1)$之间距离的函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, asin, cos, radians, fabs, sqrt</span><br><span class="line"> </span><br><span class="line">EARTH_RADIUS=<span class="number">6371</span>           <span class="comment"># 地球平均半径，6371km</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hav</span><span class="params">(theta)</span>:</span></span><br><span class="line">    s = sin(theta / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> s * s</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_distance_hav</span><span class="params">(lat0, lng0, lat1, lng1)</span>:</span></span><br><span class="line">    <span class="string">"用haversine公式计算球面两点间的距离。"</span></span><br><span class="line">    <span class="comment"># 经纬度转换成弧度</span></span><br><span class="line">    lat0 = radians(lat0)</span><br><span class="line">    lat1 = radians(lat1)</span><br><span class="line">    lng0 = radians(lng0)</span><br><span class="line">    lng1 = radians(lng1)</span><br><span class="line"> </span><br><span class="line">    dlng = fabs(lng0 - lng1)</span><br><span class="line">    dlat = fabs(lat0 - lat1)</span><br><span class="line">    h = hav(dlat) + cos(lat0) * cos(lat1) * hav(dlng)</span><br><span class="line">    distance = <span class="number">2</span> * EARTH_RADIUS * asin(sqrt(h))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> distance</span><br></pre></td></tr></table></figure><p><a name="Ls8Nu"></a></p><h2 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h2><p><span class="exturl" data-url="aHR0cDovL29yYWNsZS1hYmMud2lraWRvdC5jb20vemgtYmxvZzoyMA==" title="http://oracle-abc.wikidot.com/zh-blog:20">LBS 球面距离公式<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Math </tag>
            
            <tag> 距离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL-Neo4j</title>
      <link href="/ie/posts/9b624d43.html"/>
      <url>/ie/posts/9b624d43.html</url>
      
        <content type="html"><![CDATA[<p>NoSQL Neo4j PDF</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL05vU1FM" title="https://github.com/MHuiG/NoSQL">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/NoSQL/Neo4j.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> NoSQL </tag>
            
            <tag> Neo4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL-MongoDB</title>
      <link href="/ie/posts/ec477027.html"/>
      <url>/ie/posts/ec477027.html</url>
      
        <content type="html"><![CDATA[<p>NoSQL MongoDB PDF</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL05vU1FM" title="https://github.com/MHuiG/NoSQL">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/NoSQL/MongoDB.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> NoSQL </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL-HBase</title>
      <link href="/ie/posts/cdec63d.html"/>
      <url>/ie/posts/cdec63d.html</url>
      
        <content type="html"><![CDATA[<p>NoSQL HBase PDF</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL05vU1FM" title="https://github.com/MHuiG/NoSQL">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/NoSQL/HBase.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> NoSQL </tag>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL-Cassandra</title>
      <link href="/ie/posts/e3dcc811.html"/>
      <url>/ie/posts/e3dcc811.html</url>
      
        <content type="html"><![CDATA[<p>NoSQL Cassandra PDF</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL05vU1FM" title="https://github.com/MHuiG/NoSQL">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/NoSQL/Cassandra.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> NoSQL </tag>
            
            <tag> Cassandra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL</title>
      <link href="/ie/posts/f0940727.html"/>
      <url>/ie/posts/f0940727.html</url>
      
        <content type="html"><![CDATA[<p>NoSQL PDF</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL05vU1FM" title="https://github.com/MHuiG/NoSQL">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/NoSQL/NoSQL.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python如何调用C</title>
      <link href="/ie/posts/b6ffaac2.html"/>
      <url>/ie/posts/b6ffaac2.html</url>
      
        <content type="html"><![CDATA[<p>Python语言特点：简单，明确，优雅，高效率，同时Python语言的可扩展性和可嵌入性很强，又被成为“胶水语言”。但是Python语言有一个最大的缺点，便是运行速度慢，所以当你对速度有要求时，你可以用C语言来编写你的关键代码，或者当你希望某些算法不公开时，也可以把你的程序用C编写，然后在你的Python程序中使用它们。本文将介绍在Python程序中如何调用C…</p><a id="more"></a><h1 id="编写C语言代码"><a href="#编写C语言代码" class="headerlink" title="编写C语言代码"></a>编写C语言代码</h1><p>一个简单的c语言程序，实现了两个整数的加法运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="生成so库文件"><a href="#生成so库文件" class="headerlink" title="生成so库文件"></a>生成so库文件</h1><p>使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared main.c -o lib.so</span><br></pre></td></tr></table></figure><p>so库文件不能跨平台使用，如果你在Windows下面生成的，便只能够在Windows下面使用，使用命令以后，生成后缀为.so的库文件</p><h1 id="编写Python程序来调用C语言"><a href="#编写Python程序来调用C语言" class="headerlink" title="编写Python程序来调用C语言"></a>编写Python程序来调用C语言</h1><ul><li>把so库文件放入我们的Python项目中</li><li>使用ctypes库中的CDLL来加载库 lib_main = CDLL(‘so库文件路径’)</li><li>调用C sum_value = lib_main.sum(10, 20)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ctypes的库</span></span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载so库</span></span><br><span class="line">lib_main = CDLL(<span class="string">'./lib.so'</span>)  <span class="comment"># CDLL加载库</span></span><br><span class="line"></span><br><span class="line">sum_value = lib_main.sum(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">print(sum_value)</span><br></pre></td></tr></table></figure><p>最终得到结果30</p><p>ctypes库是Python提供的一个外部函数库，提供C语言兼容集中数据类型，可以允许调用C编译好的库，已下附上ctypes库官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2N0eXBlcy5odG1s" title="https://docs.python.org/3/library/ctypes.html">https://docs.python.org/3/library/ctypes.html<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装gcc</title>
      <link href="/ie/posts/e6f6b883.html"/>
      <url>/ie/posts/e6f6b883.html</url>
      
        <content type="html"><![CDATA[<p>最近测试一下windows上vs编译和gcc编译的区别，同时比较ubuntu上gcc编译的却别，主要在内存上，做了一个小测试，现在写下安装gcc的过程。</p><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>先去官网下载安装包，<span class="exturl" data-url="aHR0cDovL3d3dy5taW5ndy5vcmc=" title="http://www.mingw.org">http://www.mingw.org<i class="fa fa-external-link"></i></span>， 进入官网找到download：</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205123536.png"></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205123658.png"></p><p>单击就可以直接下载了。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>双击运行下载的exe，然后点install，然后就是下一步到底就行了，最后选择安装gcc-g++的就可以了。</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205123831.png"></p><p>注意下面这个要选中</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205124331.png"></p><p>其他需要的也可以自行选择，安装完之后，也可以通过安装目录下bin目录的</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205124637.png"></p><p>安装其他东西，可以自行去了解。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>安装完成后就是配置环境变量了</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205125040.png"></p><p>然后打开控制台，输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205125218.png"></p><p>我们可以写一个例子试一下，经典例子hello world出来吧！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello world!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205125433.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o test main.cpp</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200205125714.png"></p><h1 id="MinGW-w64"><a href="#MinGW-w64" class="headerlink" title="MinGW-w64"></a>MinGW-w64</h1><p>Window系统下的MinGW，总是编译为32位代码。因为MinGW只支持32位代码。</p><p>Window系统下的MinGW-w64（例如安装了TDM-GCC，选择MinGW-w64），默认是编译为64位代码，包括在32位的Windows系统下。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
          <category> gcc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> gcc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AES加解密</title>
      <link href="/ie/posts/357dc334.html"/>
      <url>/ie/posts/357dc334.html</url>
      
        <content type="html"><![CDATA[<p>AES加密解密实现</p><a id="more"></a><h1 id="Python语言实现"><a href="#Python语言实现" class="headerlink" title="Python语言实现"></a>Python语言实现</h1><p>直接安装Crypto是不好使的。因为历史原因导致的比较混乱，引用外部博友的解释内容如下：</p><p>pycrypto、pycrytodome和crypto是一个东西，crypto在python上面的名字是pycrypto，它是一个第三方库，但是已经停止更新三年了，所以不建议安装这个库；<br>这个时候pycryptodome就来了，它是pycrypto的延伸版本，用法和pycrypto是一模一样的；<br>所以，我现在告诉大家一种解决方法–直接安装：pip install pycryptodome<br>但是，在使用的时候导入模块是有问题的，这个时候只要修改一个文件夹的名称就可以完美解决这个问题，<br>Python\Python36\Lib\site-packages，找到这个路径，下面有一个文件夹叫做crypto,将小写c改成大写C就ok了。</p><p>为了安装方便，可以直接使用下面的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install crypto pycryptodome</span><br><span class="line">pip uninstall crypto pycryptodome</span><br><span class="line">pip install pycryptodome</span><br></pre></td></tr></table></figure><p>而如果你是linux环境，则直接安装pycryptodome即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pycryptodome</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pkcs7padding</span><span class="params">(text)</span>:</span></span><br><span class="line">    bs = AES.block_size  <span class="comment"># 16</span></span><br><span class="line">    length = len(text)</span><br><span class="line">    bytes_length = len(bytes(text, encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="comment"># tips：utf-8编码时，英文占1个byte，而中文占3个byte</span></span><br><span class="line">    padding_size = length <span class="keyword">if</span>(bytes_length == length) <span class="keyword">else</span> bytes_length</span><br><span class="line">    padding = bs - padding_size % bs</span><br><span class="line">    <span class="comment"># tips：chr(padding)看与其它语言的约定，有的会使用'\0'</span></span><br><span class="line">    padding_text = chr(padding) * padding</span><br><span class="line">    <span class="keyword">return</span> text + padding_text</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pkcs7unpadding</span><span class="params">(text)</span>:</span></span><br><span class="line">    length = len(text)</span><br><span class="line">    unpadding = ord(text[length<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> text[<span class="number">0</span>:length-unpadding]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(key, content)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES加密</span></span><br><span class="line"><span class="string">    key,iv使用同一个</span></span><br><span class="line"><span class="string">    模式cbc</span></span><br><span class="line"><span class="string">    填充pkcs7</span></span><br><span class="line"><span class="string">    :param key: 密钥</span></span><br><span class="line"><span class="string">    :param content: 加密内容</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    key_bytes = bytes(key, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    iv = key_bytes</span><br><span class="line">    cipher = AES.new(key_bytes, AES.MODE_CBC, iv)</span><br><span class="line">    <span class="comment"># 处理明文</span></span><br><span class="line">    content_padding = pkcs7padding(content)</span><br><span class="line">    <span class="comment"># 加密</span></span><br><span class="line">    encrypt_bytes = cipher.encrypt(bytes(content_padding, encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="comment"># 重新编码</span></span><br><span class="line">    result = str(base64.b64encode(encrypt_bytes), encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(key, content)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    AES解密</span></span><br><span class="line"><span class="string">     key,iv使用同一个</span></span><br><span class="line"><span class="string">    模式cbc</span></span><br><span class="line"><span class="string">    去填充pkcs7</span></span><br><span class="line"><span class="string">    :param key:</span></span><br><span class="line"><span class="string">    :param content:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    key_bytes = bytes(key, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    iv = key_bytes</span><br><span class="line">    cipher = AES.new(key_bytes, AES.MODE_CBC, iv)</span><br><span class="line">    <span class="comment"># base64解码</span></span><br><span class="line">    encrypt_bytes = base64.b64decode(content)</span><br><span class="line">    <span class="comment"># 解密</span></span><br><span class="line">    decrypt_bytes = cipher.decrypt(encrypt_bytes)</span><br><span class="line">    <span class="comment"># 重新编码</span></span><br><span class="line">    result = str(decrypt_bytes, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># 去除填充内容</span></span><br><span class="line">    result = pkcs7unpadding(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">aes_key = <span class="string">'1234567812345678'</span></span><br><span class="line"><span class="comment"># 加密</span></span><br><span class="line">source_en = <span class="string">'1111111111111111'</span></span><br><span class="line">encrypt_en = encrypt(aes_key, source_en)</span><br><span class="line">print(encrypt_en)</span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">decrypt_en = decrypt(aes_key, encrypt_en)</span><br><span class="line">print(decrypt_en)</span><br><span class="line">print(source_en == decrypt_en)</span><br></pre></td></tr></table></figure><h1 id="C语言实现"><a href="#C语言实现" class="headerlink" title="C语言实现"></a>C语言实现</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aes</span><span class="params">(<span class="keyword">char</span>*, <span class="keyword">char</span>*, <span class="keyword">char</span>*, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aes_detail</span><span class="params">(<span class="keyword">int</span>[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subBytes</span><span class="params">(<span class="keyword">int</span> [<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shiftRows</span><span class="params">(<span class="keyword">int</span> [<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mixColumns</span><span class="params">(<span class="keyword">int</span> [<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addRoundKey</span><span class="params">(<span class="keyword">int</span> [<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span>[<span class="number">4</span>][<span class="number">4</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aes_multiple</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyExpansion</span><span class="params">(<span class="keyword">int</span> key[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> w[<span class="number">11</span>][<span class="number">4</span>][<span class="number">4</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">c2i</span><span class="params">(<span class="keyword">char</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * S盒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> S_BOX[<span class="number">16</span>][<span class="number">16</span>] = &#123; <span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>,</span><br><span class="line">                               <span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>,</span><br><span class="line">                               <span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>,</span><br><span class="line">                               <span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>,</span><br><span class="line">                               <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>,</span><br><span class="line">                               <span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>,</span><br><span class="line">                               <span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>,</span><br><span class="line">                               <span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>,</span><br><span class="line">                               <span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>,</span><br><span class="line">                               <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>,</span><br><span class="line">                               <span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>,</span><br><span class="line">                               <span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>,</span><br><span class="line">                               <span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>,</span><br><span class="line">                               <span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>,</span><br><span class="line">                               <span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>,</span><br><span class="line">                               <span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 逆S盒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> INVERSE_S_BOX[<span class="number">16</span>][<span class="number">16</span>] = &#123; <span class="number">0x52</span>, <span class="number">0x09</span>, <span class="number">0x6a</span>, <span class="number">0xd5</span>, <span class="number">0x30</span>, <span class="number">0x36</span>, <span class="number">0xa5</span>, <span class="number">0x38</span>, <span class="number">0xbf</span>, <span class="number">0x40</span>, <span class="number">0xa3</span>, <span class="number">0x9e</span>, <span class="number">0x81</span>, <span class="number">0xf3</span>, <span class="number">0xd7</span>, <span class="number">0xfb</span>,</span><br><span class="line">                                <span class="number">0x7c</span>, <span class="number">0xe3</span>, <span class="number">0x39</span>, <span class="number">0x82</span>, <span class="number">0x9b</span>, <span class="number">0x2f</span>, <span class="number">0xff</span>, <span class="number">0x87</span>, <span class="number">0x34</span>, <span class="number">0x8e</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0xc4</span>, <span class="number">0xde</span>, <span class="number">0xe9</span>, <span class="number">0xcb</span>,</span><br><span class="line">                                <span class="number">0x54</span>, <span class="number">0x7b</span>, <span class="number">0x94</span>, <span class="number">0x32</span>, <span class="number">0xa6</span>, <span class="number">0xc2</span>, <span class="number">0x23</span>, <span class="number">0x3d</span>, <span class="number">0xee</span>, <span class="number">0x4c</span>, <span class="number">0x95</span>, <span class="number">0x0b</span>, <span class="number">0x42</span>, <span class="number">0xfa</span>, <span class="number">0xc3</span>, <span class="number">0x4e</span>,</span><br><span class="line">                                <span class="number">0x08</span>, <span class="number">0x2e</span>, <span class="number">0xa1</span>, <span class="number">0x66</span>, <span class="number">0x28</span>, <span class="number">0xd9</span>, <span class="number">0x24</span>, <span class="number">0xb2</span>, <span class="number">0x76</span>, <span class="number">0x5b</span>, <span class="number">0xa2</span>, <span class="number">0x49</span>, <span class="number">0x6d</span>, <span class="number">0x8b</span>, <span class="number">0xd1</span>, <span class="number">0x25</span>,</span><br><span class="line">                                <span class="number">0x72</span>, <span class="number">0xf8</span>, <span class="number">0xf6</span>, <span class="number">0x64</span>, <span class="number">0x86</span>, <span class="number">0x68</span>, <span class="number">0x98</span>, <span class="number">0x16</span>, <span class="number">0xd4</span>, <span class="number">0xa4</span>, <span class="number">0x5c</span>, <span class="number">0xcc</span>, <span class="number">0x5d</span>, <span class="number">0x65</span>, <span class="number">0xb6</span>, <span class="number">0x92</span>,</span><br><span class="line">                                <span class="number">0x6c</span>, <span class="number">0x70</span>, <span class="number">0x48</span>, <span class="number">0x50</span>, <span class="number">0xfd</span>, <span class="number">0xed</span>, <span class="number">0xb9</span>, <span class="number">0xda</span>, <span class="number">0x5e</span>, <span class="number">0x15</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, <span class="number">0xa7</span>, <span class="number">0x8d</span>, <span class="number">0x9d</span>, <span class="number">0x84</span>,</span><br><span class="line">                                <span class="number">0x90</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x00</span>, <span class="number">0x8c</span>, <span class="number">0xbc</span>, <span class="number">0xd3</span>, <span class="number">0x0a</span>, <span class="number">0xf7</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0x05</span>, <span class="number">0xb8</span>, <span class="number">0xb3</span>, <span class="number">0x45</span>, <span class="number">0x06</span>,</span><br><span class="line">                                <span class="number">0xd0</span>, <span class="number">0x2c</span>, <span class="number">0x1e</span>, <span class="number">0x8f</span>, <span class="number">0xca</span>, <span class="number">0x3f</span>, <span class="number">0x0f</span>, <span class="number">0x02</span>, <span class="number">0xc1</span>, <span class="number">0xaf</span>, <span class="number">0xbd</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x8a</span>, <span class="number">0x6b</span>,</span><br><span class="line">                                <span class="number">0x3a</span>, <span class="number">0x91</span>, <span class="number">0x11</span>, <span class="number">0x41</span>, <span class="number">0x4f</span>, <span class="number">0x67</span>, <span class="number">0xdc</span>, <span class="number">0xea</span>, <span class="number">0x97</span>, <span class="number">0xf2</span>, <span class="number">0xcf</span>, <span class="number">0xce</span>, <span class="number">0xf0</span>, <span class="number">0xb4</span>, <span class="number">0xe6</span>, <span class="number">0x73</span>,</span><br><span class="line">                                <span class="number">0x96</span>, <span class="number">0xac</span>, <span class="number">0x74</span>, <span class="number">0x22</span>, <span class="number">0xe7</span>, <span class="number">0xad</span>, <span class="number">0x35</span>, <span class="number">0x85</span>, <span class="number">0xe2</span>, <span class="number">0xf9</span>, <span class="number">0x37</span>, <span class="number">0xe8</span>, <span class="number">0x1c</span>, <span class="number">0x75</span>, <span class="number">0xdf</span>, <span class="number">0x6e</span>,</span><br><span class="line">                                <span class="number">0x47</span>, <span class="number">0xf1</span>, <span class="number">0x1a</span>, <span class="number">0x71</span>, <span class="number">0x1d</span>, <span class="number">0x29</span>, <span class="number">0xc5</span>, <span class="number">0x89</span>, <span class="number">0x6f</span>, <span class="number">0xb7</span>, <span class="number">0x62</span>, <span class="number">0x0e</span>, <span class="number">0xaa</span>, <span class="number">0x18</span>, <span class="number">0xbe</span>, <span class="number">0x1b</span>,</span><br><span class="line">                                <span class="number">0xfc</span>, <span class="number">0x56</span>, <span class="number">0x3e</span>, <span class="number">0x4b</span>, <span class="number">0xc6</span>, <span class="number">0xd2</span>, <span class="number">0x79</span>, <span class="number">0x20</span>, <span class="number">0x9a</span>, <span class="number">0xdb</span>, <span class="number">0xc0</span>, <span class="number">0xfe</span>, <span class="number">0x78</span>, <span class="number">0xcd</span>, <span class="number">0x5a</span>, <span class="number">0xf4</span>,</span><br><span class="line">                                <span class="number">0x1f</span>, <span class="number">0xdd</span>, <span class="number">0xa8</span>, <span class="number">0x33</span>, <span class="number">0x88</span>, <span class="number">0x07</span>, <span class="number">0xc7</span>, <span class="number">0x31</span>, <span class="number">0xb1</span>, <span class="number">0x12</span>, <span class="number">0x10</span>, <span class="number">0x59</span>, <span class="number">0x27</span>, <span class="number">0x80</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>,</span><br><span class="line">                                <span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x7f</span>, <span class="number">0xa9</span>, <span class="number">0x19</span>, <span class="number">0xb5</span>, <span class="number">0x4a</span>, <span class="number">0x0d</span>, <span class="number">0x2d</span>, <span class="number">0xe5</span>, <span class="number">0x7a</span>, <span class="number">0x9f</span>, <span class="number">0x93</span>, <span class="number">0xc9</span>, <span class="number">0x9c</span>, <span class="number">0xef</span>,</span><br><span class="line">                                <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0x3b</span>, <span class="number">0x4d</span>, <span class="number">0xae</span>, <span class="number">0x2a</span>, <span class="number">0xf5</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0xeb</span>, <span class="number">0xbb</span>, <span class="number">0x3c</span>, <span class="number">0x83</span>, <span class="number">0x53</span>, <span class="number">0x99</span>, <span class="number">0x61</span>,</span><br><span class="line">                                <span class="number">0x17</span>, <span class="number">0x2b</span>, <span class="number">0x04</span>, <span class="number">0x7e</span>, <span class="number">0xba</span>, <span class="number">0x77</span>, <span class="number">0xd6</span>, <span class="number">0x26</span>, <span class="number">0xe1</span>, <span class="number">0x69</span>, <span class="number">0x14</span>, <span class="number">0x63</span>, <span class="number">0x55</span>, <span class="number">0x21</span>, <span class="number">0x0c</span>, <span class="number">0x7d</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> RC[<span class="number">10</span>] = &#123;<span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> method = <span class="number">1</span>;<span class="comment">//1表示加密， 0表示解密</span></span><br><span class="line">    <span class="comment">//待加密/解密文件存放路径</span></span><br><span class="line">    <span class="keyword">char</span> * source_path = <span class="string">"0.py"</span>;</span><br><span class="line">    <span class="comment">// 加密/解密后文件存放路径</span></span><br><span class="line">    <span class="keyword">char</span> *des_path = <span class="string">"1.py"</span>;</span><br><span class="line">    <span class="comment">// 32位16进制密钥</span></span><br><span class="line">    <span class="keyword">char</span> * password = <span class="string">"dd67f79831571c947d9e85b76a7f6835"</span>;</span><br><span class="line">    aes(source_path, des_path, password, method);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"success!!!!!!!!!!"</span>);</span><br><span class="line"></span><br><span class="line">    method = <span class="number">0</span>;<span class="comment">//1表示加密， 0表示解密</span></span><br><span class="line">    <span class="comment">//待加密/解密文件存放路径</span></span><br><span class="line">    source_path = <span class="string">"1.py"</span>;</span><br><span class="line">    <span class="comment">// 加密/解密后文件存放路径</span></span><br><span class="line">    des_path = <span class="string">"2.py"</span>;</span><br><span class="line">    aes(source_path, des_path, password, method);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"success!!!!!!!!!!"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aes</span><span class="params">(<span class="keyword">char</span>* source_path, <span class="keyword">char</span>* des_path, <span class="keyword">char</span>* password, <span class="keyword">int</span> method)</span></span>&#123;</span><br><span class="line">    <span class="comment">//将密钥转换成4*4数组</span></span><br><span class="line">    <span class="keyword">int</span> p[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">4</span>; ++m) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">int</span> indx = <span class="number">4</span> * i + m;</span><br><span class="line">            p[i][m] = <span class="number">16</span> * c2i(password[indx]) + c2i(password[indx + <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    FILE *file = fopen(source_path, <span class="string">"r"</span>); <span class="comment">//获取文件的指针</span></span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_END); <span class="comment">//移动文件的指针到文件结尾</span></span><br><span class="line">    <span class="keyword">int</span> len = ftell(file); <span class="comment">//获取文件的长度</span></span><br><span class="line">    rewind(file); <span class="comment">//将文件指针移动回文件开始</span></span><br><span class="line">    <span class="comment">// 如果文件长度不是128位（16字节）的整数倍，则补齐</span></span><br><span class="line">    <span class="keyword">int</span> size = len;</span><br><span class="line">    <span class="keyword">if</span> (len % <span class="number">16</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        size = (len / <span class="number">16</span> + <span class="number">1</span>) * <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> content[size];</span><br><span class="line">    <span class="comment">//读取文件内容赋值给content</span></span><br><span class="line">    fread(content, <span class="number">1</span>, len, file);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = len; j &lt; size; ++j) &#123;</span><br><span class="line">        content[j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="comment">//存储结果</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> encry[size];</span><br><span class="line">    <span class="comment">//将文件转换成16字节的int型数组加密、解密</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size / <span class="number">16</span>; ++i) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> content_to_int[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; ++k) &#123;</span><br><span class="line">                content_to_int[j][k] = content[j * <span class="number">4</span> + k + <span class="number">16</span> * i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        aes_detail(content_to_int, p, method);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; ++k) &#123;</span><br><span class="line">                encry[j * <span class="number">4</span> + k + <span class="number">16</span> * i] = content_to_int[j][k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    FILE *file1 = fopen(des_path, <span class="string">"w"</span>);</span><br><span class="line">    fwrite(encry, size, <span class="number">1</span>, file1);</span><br><span class="line">    fflush(file1);</span><br><span class="line">    fclose(file1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aes_detail</span><span class="params">(<span class="keyword">int</span> content[<span class="number">4</span>][<span class="number">4</span>],  <span class="keyword">int</span> password[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> encode)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p[<span class="number">11</span>][<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    keyExpansion(password, p);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (encode) &#123;</span><br><span class="line">        addRoundKey(content, p[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; ++i) &#123;</span><br><span class="line">            subBytes(content, encode);</span><br><span class="line">            shiftRows(content, encode);</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">10</span>) &#123;</span><br><span class="line">                mixColumns(content, encode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            addRoundKey(content, p[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        addRoundKey(content, p[<span class="number">10</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">9</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            shiftRows(content, encode);</span><br><span class="line">            subBytes(content, encode);</span><br><span class="line">            addRoundKey(content, p[i]);</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">                mixColumns(content, encode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subBytes</span><span class="params">(<span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> encode)</span></span>&#123;</span><br><span class="line">    <span class="comment">// encode 为1 代表字节替代，为0代表逆向字节替代</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = a[i][j];</span><br><span class="line">            <span class="keyword">int</span> row = temp / <span class="number">16</span>;</span><br><span class="line">            <span class="keyword">int</span> column = temp % <span class="number">16</span>;</span><br><span class="line">            <span class="keyword">if</span> (encode)</span><br><span class="line">                a[i][j] = S_BOX[row][column];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                a[i][j] = INVERSE_S_BOX[row][column];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shiftRows</span><span class="params">(<span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> encode)</span></span>&#123;</span><br><span class="line">    <span class="comment">//encode 为1代表行移位，为0代表逆向行移位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (encode) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = a[i][<span class="number">0</span>];</span><br><span class="line">                a[i][<span class="number">0</span>] = a[i][<span class="number">1</span>];</span><br><span class="line">                a[i][<span class="number">1</span>] = a[i][<span class="number">2</span>];</span><br><span class="line">                a[i][<span class="number">2</span>] = a[i][<span class="number">3</span>];</span><br><span class="line">                a[i][<span class="number">3</span>] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = a[i][<span class="number">3</span>];</span><br><span class="line">                a[i][<span class="number">3</span>] = a[i][<span class="number">2</span>];</span><br><span class="line">                a[i][<span class="number">2</span>] = a[i][<span class="number">1</span>];</span><br><span class="line">                a[i][<span class="number">1</span>] = a[i][<span class="number">0</span>];</span><br><span class="line">                a[i][<span class="number">0</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mixColumns</span><span class="params">(<span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> encode)</span></span>&#123;</span><br><span class="line">    <span class="comment">//encode 为1代表列混淆，为0代表逆向列混淆</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp0 = a[<span class="number">0</span>][i];</span><br><span class="line">        <span class="keyword">int</span> temp1 = a[<span class="number">1</span>][i];</span><br><span class="line">        <span class="keyword">int</span> temp2 = a[<span class="number">2</span>][i];</span><br><span class="line">        <span class="keyword">int</span> temp3 = a[<span class="number">3</span>][i];</span><br><span class="line">        <span class="keyword">if</span> (encode) &#123;</span><br><span class="line">            a[<span class="number">0</span>][i] = aes_multiple(temp0, <span class="number">2</span>) ^ aes_multiple(temp1, <span class="number">3</span>) ^ temp2 ^ temp3;</span><br><span class="line">            a[<span class="number">1</span>][i] = temp0 ^ (aes_multiple(temp1, <span class="number">2</span>)) ^ (temp2 ^ aes_multiple(temp2, <span class="number">2</span>)) ^ temp3;</span><br><span class="line">            a[<span class="number">2</span>][i] = temp0 ^ temp1 ^ (aes_multiple(temp2, <span class="number">2</span>)) ^ (temp3 ^ aes_multiple(temp3, <span class="number">2</span>));</span><br><span class="line">            a[<span class="number">3</span>][i] = temp0 ^ (aes_multiple(temp0, <span class="number">2</span>)) ^ temp1 ^ temp2 ^ aes_multiple(temp3, <span class="number">2</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            a[<span class="number">0</span>][i] = aes_multiple(temp0, <span class="number">14</span>) ^ aes_multiple(temp1, <span class="number">11</span>) ^ aes_multiple(temp2, <span class="number">13</span>) ^ aes_multiple(temp3, <span class="number">9</span>);</span><br><span class="line">            a[<span class="number">1</span>][i] = aes_multiple(temp0, <span class="number">9</span>) ^ aes_multiple(temp1, <span class="number">14</span>) ^ aes_multiple(temp2, <span class="number">11</span>) ^ aes_multiple(temp3, <span class="number">13</span>);</span><br><span class="line">            a[<span class="number">2</span>][i] = aes_multiple(temp0, <span class="number">13</span>) ^ aes_multiple(temp1, <span class="number">9</span>) ^ aes_multiple(temp2, <span class="number">14</span>) ^ aes_multiple(temp3, <span class="number">11</span>);</span><br><span class="line">            a[<span class="number">3</span>][i] = aes_multiple(temp0, <span class="number">11</span>) ^ aes_multiple(temp1, <span class="number">13</span>) ^ aes_multiple(temp2, <span class="number">9</span>) ^ aes_multiple(temp3, <span class="number">14</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addRoundKey</span><span class="params">(<span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> k[<span class="number">4</span>][<span class="number">4</span>])</span></span>&#123;</span><br><span class="line">    <span class="comment">// 由于用w[11][4][4]表示W[44]导致行列转置，所以在进行异或操作的时候应该是a[i，j] 异或 k[j,i]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            a[i][j] = a[i][j] ^ k[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AES乘法计算</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aes_multiple</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> le)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> thr = le &amp; <span class="number">0x8</span>;</span><br><span class="line">    <span class="keyword">int</span> sec = le &amp; <span class="number">0x4</span>;</span><br><span class="line">    <span class="keyword">int</span> fir = le &amp; <span class="number">0x2</span>;</span><br><span class="line">    <span class="keyword">int</span> fir_mod = le % <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (thr)&#123;</span><br><span class="line">        <span class="keyword">int</span> b = a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">3</span> ; ++i) &#123;</span><br><span class="line">            b = b&lt;&lt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (b &gt;= <span class="number">256</span>)</span><br><span class="line">                b = b ^ <span class="number">0x11b</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b = b % <span class="number">256</span>;</span><br><span class="line">        result = result ^ b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sec)&#123;</span><br><span class="line">        <span class="keyword">int</span> b = a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">2</span> ; ++i) &#123;</span><br><span class="line">            b = b&lt;&lt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (b &gt;= <span class="number">256</span>)</span><br><span class="line">                b = b ^ <span class="number">0x11b</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b = b % <span class="number">256</span>;</span><br><span class="line">        result = result ^ b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fir)&#123;</span><br><span class="line">        <span class="keyword">int</span> b = a &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (b &gt;= <span class="number">256</span>)</span><br><span class="line">            b = b ^ <span class="number">0x11b</span>;</span><br><span class="line">        b = b % <span class="number">256</span>;</span><br><span class="line">        result = result ^ b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fir_mod)</span><br><span class="line">        result = result ^ a;</span><br><span class="line">    <span class="keyword">return</span>  result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyExpansion</span><span class="params">(<span class="keyword">int</span> key[<span class="number">4</span>][<span class="number">4</span>], <span class="keyword">int</span> w[<span class="number">11</span>][<span class="number">4</span>][<span class="number">4</span>])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            w[<span class="number">0</span>][i][j] = key[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>)&#123;</span><br><span class="line">                temp[<span class="number">0</span>] = w[i<span class="number">-1</span>][<span class="number">3</span>][<span class="number">1</span>];</span><br><span class="line">                temp[<span class="number">1</span>] = w[i<span class="number">-1</span>][<span class="number">3</span>][<span class="number">2</span>];</span><br><span class="line">                temp[<span class="number">2</span>] = w[i<span class="number">-1</span>][<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">                temp[<span class="number">3</span>] = w[i<span class="number">-1</span>][<span class="number">3</span>][<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; ++k) &#123;</span><br><span class="line">                    <span class="keyword">int</span> m = temp[k];</span><br><span class="line">                    <span class="keyword">int</span> row = m / <span class="number">16</span>;</span><br><span class="line">                    <span class="keyword">int</span> column = m % <span class="number">16</span>;</span><br><span class="line">                    temp[k] = S_BOX[row][column];</span><br><span class="line">                    <span class="keyword">if</span> (k == <span class="number">0</span>)&#123;</span><br><span class="line">                        temp[k] = temp[k] ^ RC[i<span class="number">-1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                temp[<span class="number">0</span>] = w[i][j<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">                temp[<span class="number">1</span>] = w[i][j<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">                temp[<span class="number">2</span>] = w[i][j<span class="number">-1</span>][<span class="number">2</span>];</span><br><span class="line">                temp[<span class="number">3</span>] = w[i][j<span class="number">-1</span>][<span class="number">3</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; <span class="number">4</span>; ++l) &#123;</span><br><span class="line"></span><br><span class="line">                w[i][j][l] = w[i<span class="number">-1</span>][j][l] ^ temp[l];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int isdigit(char ch) &#123;</span></span><br><span class="line"><span class="comment">    if (ch&gt;='0'&amp;&amp;ch&lt;='9') &#123;</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    &#125; else &#123;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">int isalpha(char ch) &#123;</span></span><br><span class="line"><span class="comment">    if ((ch&gt;='a'&amp;&amp;ch&lt;='z')||(ch&gt;='A'&amp;&amp;ch&lt;='Z')) &#123;</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    &#125; else &#123;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">int isupper(char ch) &#123;</span></span><br><span class="line"><span class="comment">    if (ch&gt;='A'&amp;&amp;ch&lt;='Z') &#123;</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    &#125; else &#123;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//将字符转换为数值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">c2i</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果是数字，则用数字的ASCII码减去48, 如果ch = '2' ,则 '2' - 48 = 2</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        <span class="keyword">return</span> ch - <span class="number">48</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是字母，但不是A~F,a~f则返回</span></span><br><span class="line">    <span class="keyword">if</span>( ch &lt; <span class="string">'A'</span> || (ch &gt; <span class="string">'F'</span> &amp;&amp; ch &lt; <span class="string">'a'</span>) || ch &gt; <span class="string">'z'</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是大写字母，则用数字的ASCII码减去55, 如果ch = 'A' ,则 'A' - 55 = 10</span></span><br><span class="line">    <span class="comment">// 如果是小写字母，则用数字的ASCII码减去87, 如果ch = 'a' ,则 'a' - 87 = 10</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isalpha</span>(ch))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isupper</span>(ch) ? ch - <span class="number">55</span> : ch - <span class="number">87</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AES </tag>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebSocket Maven配置模板</title>
      <link href="/ie/posts/4a71123b.html"/>
      <url>/ie/posts/4a71123b.html</url>
      
        <content type="html"><![CDATA[<p>maven配置模板</p><a id="more"></a><h1 id="WebSocketTemplate"><a href="#WebSocketTemplate" class="headerlink" title="WebSocketTemplate"></a>WebSocketTemplate</h1><p>源码 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL1dlYlNvY2tldFRlbXBsYXRl" title="https://github.com/MHuiG/WebSocketTemplate">GitHub<i class="fa fa-external-link"></i></span></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>WebSocketTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>cloudera<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repository.cloudera.com/artifactory/cloudera-repos/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- WebSocket --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-messaging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.miemiedev<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-paginator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- MySql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- JSP相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        junit--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">minimizeJar</span>&gt;</span>true<span class="tag">&lt;/<span class="name">minimizeJar</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模板 </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> 模板 </tag>
            
            <tag> WebSocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM Maven配置模板</title>
      <link href="/ie/posts/4a71133b.html"/>
      <url>/ie/posts/4a71133b.html</url>
      
        <content type="html"><![CDATA[<p>maven配置模板</p><a id="more"></a><h1 id="SSMTemplate"><a href="#SSMTemplate" class="headerlink" title="SSMTemplate"></a>SSMTemplate</h1><p>源码 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL1NTTVRlbXBsYXRl" title="https://github.com/MHuiG/SSMTemplate">GitHub<i class="fa fa-external-link"></i></span></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>WebSocketTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>cloudera<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repository.cloudera.com/artifactory/cloudera-repos/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.miemiedev<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-paginator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- MySql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- JSP相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        junit--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">minimizeJar</span>&gt;</span>true<span class="tag">&lt;/<span class="name">minimizeJar</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模板 </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> 模板 </tag>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink常用的算子</title>
      <link href="/ie/posts/714668f9.html"/>
      <url>/ie/posts/714668f9.html</url>
      
        <content type="html"><![CDATA[<p>Flink 数据处理模型</p><p>Flink 算子 Operator</p><a id="more"></a><h1 id="Flink-数据处理模型"><a href="#Flink-数据处理模型" class="headerlink" title="Flink 数据处理模型"></a>Flink 数据处理模型</h1><p>在 Flink 应用程序中，无论你的应用程序是批程序，还是流程序，都是下图这种模型，有数据源（source），有数据下游（sink）</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111143203.png"></p><h2 id="Source-数据源"><a href="#Source-数据源" class="headerlink" title="Source: 数据源"></a>Source: 数据源</h2><ul><li>基于本地集合、基于文件、基于网络套接字</li><li>自定义的 source</li><li>Apache kafka、RabbitMQ</li></ul><h2 id="Transformation-数据转换"><a href="#Transformation-数据转换" class="headerlink" title="Transformation: 数据转换"></a>Transformation: 数据转换</h2><ul><li>Map / FlatMap / Filter / KeyBy / Reduce / Fold / Aggregations / Window / WindowAll / Union / Window join / Split / Select / Project</li></ul><h2 id="Sink-接收器"><a href="#Sink-接收器" class="headerlink" title="Sink: 接收器"></a>Sink: 接收器</h2><ul><li>写入文件、打印出来、写入 Socket 、自定义的 Sink</li><li>自定义的 Sink</li><li>Apache kafka、RabbitMQ、MySQL、ElasticSearch、Apache Cassandra、HDFS</li></ul><h1 id="Flink-算子-Operator"><a href="#Flink-算子-Operator" class="headerlink" title="Flink 算子 Operator"></a>Flink 算子 Operator</h1><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>获取一个元素并生成一个元素</p><h2 id="FlatMap"><a href="#FlatMap" class="headerlink" title="FlatMap"></a>FlatMap</h2><p>获取一个元素并生成零个、一个或多个元素</p><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111144006.png"></p><h2 id="KeyBy"><a href="#KeyBy" class="headerlink" title="KeyBy"></a>KeyBy</h2><p>KeyBy 在逻辑上是基于 key 对流进行分区，相同的 Key 会被分到一个分区</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111143400.png"></p><h2 id="Aggregations"><a href="#Aggregations" class="headerlink" title="Aggregations"></a>Aggregations</h2><p>DataStream API 支持各种聚合， 这些函数可以应用于 KeyedStream 以获得 Aggregations 聚合</p><p>常用的方法有</p><ul><li>min、minBy、max、minBy、sum</li><li>max 和 maxBy 之间的区别在于 max 返回流中的最大值，但 maxBy 返回具有最大值的键， min 和 minBy 同理</li></ul><h2 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h2><p>Window 函数允许按时间或其他条件对现有 KeyedStream 进行分组</p><p>10 秒的时间窗口的和（聚合）</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socketStream.keyBy(<span class="number">0</span>).window(<span class="type">Time</span>.seconds(<span class="number">10</span>)).sum(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="Union"><a href="#Union" class="headerlink" title="Union"></a>Union</h2><p>Union 函数将两个或多个数据流结合在一起, 这样后面在使用的时候就只需使用一个数据流就行了</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inputStream.union(inputStream1, inputStream2, ...)</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> socketStream = env.socketTextStream(<span class="string">"localhost"</span>, <span class="number">9000</span>, '\n')</span><br><span class="line"><span class="keyword">val</span> textStream = env.readTextFile(<span class="string">"/word.txt"</span>)</span><br><span class="line">socketStream.union(textStream)</span><br></pre></td></tr></table></figure><h2 id="Window-Join"><a href="#Window-Join" class="headerlink" title="Window Join"></a>Window Join</h2><p>通过一些 key 将同一个 window 的两个数据流 join 起来</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stream.join(otherStream)</span><br><span class="line">    .where(&lt;<span class="type">KeySelector</span>&gt;)</span><br><span class="line">    .equalTo(&lt;<span class="type">KeySelector</span>&gt;)</span><br><span class="line">    .window(&lt;<span class="type">WindowAssigner</span>&gt;)</span><br><span class="line">    .apply(&lt;<span class="type">JoinFunction</span>&gt;)</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inputStream.join(inputStream1)</span><br><span class="line">           .where(<span class="number">0</span>).equalTo(<span class="number">1</span>)</span><br><span class="line">           .window(<span class="type">Time</span>.seconds(<span class="number">5</span>))     </span><br><span class="line">           .apply (<span class="keyword">new</span> <span class="type">JoinFunction</span> () &#123;...&#125;);</span><br></pre></td></tr></table></figure><h2 id="Split"><a href="#Split" class="headerlink" title="Split"></a>Split</h2><p>根据条件将流拆分为两个或多个流</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111143755.png"></p><h2 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h2><p>从拆分流中选择特定流，那么就得搭配使用 Select 算子</p><p>通常搭配Split算子一起使用</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111143857.png"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink Window</title>
      <link href="/ie/posts/38a07d35.html"/>
      <url>/ie/posts/38a07d35.html</url>
      
        <content type="html"><![CDATA[<p>什么是 Window？</p><p>Window 有什么作用？</p><p>Flink 中的三种Window</p><a id="more"></a><p>Flink Window Demo 源码<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0ZsaW5rV2luZG93" title="https://github.com/MHuiG/FlinkWindow">GitHub<i class="fa fa-external-link"></i></span></p><h1 id="什么是-Window？"><a href="#什么是-Window？" class="headerlink" title="什么是 Window？"></a>什么是 Window？</h1><p>统计经过某红绿灯的汽车数量之和？</p><p>假设在一个红绿灯处，统计通过此红绿灯的汽车数量</p><p>可以把汽车的经过看成一个流，无穷的流，不断有汽车经过此红绿灯，因此无法统计总共的汽车数量。但是，我们可以换一种思路，每隔 15 秒，我们都将与上一次的结果进行 sum 操作（滑动聚合）</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111090422.png"></p><p>这个结果似乎还是无法回答我们的问题，根本原因在于流是无界的，我们不能限制流，但可以在有一个有界的范围内处理无界的流数据。因此，我们需要换一个问题的提法：每分钟经过某红绿灯的汽车数量之和？</p><p>这个问题，就相当于一个定义了一个 Window（窗口），Window 的界限是 1 分钟，且每分钟内的数据互不干扰，因此也可以称为翻滚（不重合）窗口，如下图：</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111090523.png"></p><p>再考虑一种情况，每 30 秒统计一次过去 1 分钟的汽车数量之和</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111090701.png"></p><p>此时，Window 出现了重合。这样，1 个小时内会有 120 个 Window。</p><ul><li>Window 指定时间范围内的所有数据</li><li>滚动窗口 各个窗口之间的数据不重叠（不重复）</li><li>滑动窗口 各个窗口之间的数据重叠（重复）</li></ul><h1 id="Window-有什么作用？"><a href="#Window-有什么作用？" class="headerlink" title="Window 有什么作用？"></a>Window 有什么作用？</h1><p>通常来讲，Window 就是用来对一个无限的流设置一个有限的集合，在有界的数据集上进行操作的一种机制。Window 又可以分为基于时间（Time-based）的 Window 以及基于数量（Count-based）的 window。</p><h1 id="Flink-中的三种-Window"><a href="#Flink-中的三种-Window" class="headerlink" title="Flink 中的三种 Window"></a>Flink 中的三种 Window</h1><p>Flink 在 KeyedStream（DataStream 的继承类） 中提供了下面几种 Window：</p><ul><li>以时间驱动的 Time Window</li><li>以事件数量驱动的 Count Window</li><li>以会话间隔驱动的 Session Window</li></ul><h2 id="Time-Window"><a href="#Time-Window" class="headerlink" title="Time Window"></a>Time Window</h2><ul><li>正如命名那样，Time Window 根据时间来聚合流数据。</li><li>例如：一分钟的时间窗口就只会收集一分钟的数据，并在一分钟过后对窗口中的所有数据应用于下一个算子。</li><li>在 Flink 中使用 Time Window 非常简单，输入一个时间参数，这个时间参数可以利用 Time 这个类来控制，如果事前没指定 TimeCharacteristic 类型的话，则默认使用的是 ProcessingTime</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111090945.png"></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataStream.keyBy(<span class="number">1</span>)</span><br><span class="line">.timeWindow(<span class="type">Time</span>.minutes(<span class="number">1</span>)) <span class="comment">//time Window 每分钟统计一次数量和</span></span><br><span class="line">.sum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111091114.png"></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataStream.keyBy(<span class="number">1</span>)</span><br><span class="line">.timeWindow(<span class="type">Time</span>.minutes(<span class="number">1</span>), <span class="type">Time</span>.seconds(<span class="number">30</span>)) <span class="comment">//隔 30s 统计过去1m和</span></span><br><span class="line">.sum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="Count-Window"><a href="#Count-Window" class="headerlink" title="Count Window"></a>Count Window</h2><p>Apache Flink 还提供计数窗口功能，如果计数窗口的值设置的为 3 ，那么将会在窗口中收集 3 个事件，并在添加第 3 个事件时才会计算窗口中所有事件的值。</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111091727.png"></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataStream.keyBy(<span class="number">1</span>)</span><br><span class="line">.countWindow(<span class="number">3</span>) <span class="comment">//统计每 3 个元素的数量之和</span></span><br><span class="line">.sum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111091808.png"></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataStream.keyBy(<span class="number">1</span>) </span><br><span class="line">.countWindow(<span class="number">4</span>, <span class="number">3</span>) <span class="comment">//每隔 3 个元素统计过去 4 个元素的数量之和</span></span><br><span class="line">.sum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="Session-Window"><a href="#Session-Window" class="headerlink" title="Session Window"></a>Session Window</h2><p>Apache Flink 还提供了会话窗口，是什么意思呢？使用该窗口的时候你可以传入一个时间参数（表示某种数据维持的会话持续时长），如果超过这个时间，就代表着超出会话时长。</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200111091858.png"></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataStream.keyBy(<span class="number">1</span>)</span><br><span class="line">.window(<span class="type">ProcessingTimeSessionWindows</span>.withGap(<span class="type">Time</span>.seconds(<span class="number">5</span>)))<span class="comment">//表示如果 5s 内没出现数据则认为超出会话时长，然后计算这个窗口的和</span></span><br><span class="line">.sum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7重启之后无法联网重启network发现报错</title>
      <link href="/ie/posts/5cc46d49.html"/>
      <url>/ie/posts/5cc46d49.html</url>
      
        <content type="html"><![CDATA[<p>虚拟机里边的CentOS7重启之后无法联网，重启network发现报错。</p><a id="more"></a><p>解决方式：禁用NetworkManager</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop NetworkManager</span><br><span class="line"></span><br><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><p>然后重启网络服务，能正常联网了！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 错误集锦 </category>
          
          <category> CentOS7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS7 </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink 时间语义</title>
      <link href="/ie/posts/594433a.html"/>
      <url>/ie/posts/594433a.html</url>
      
        <content type="html"><![CDATA[<p>Flink 的三种时间语义<br>Flink Time使用场景</p><a id="more"></a><h1 id="Flink的三种时间语义"><a href="#Flink的三种时间语义" class="headerlink" title="Flink的三种时间语义"></a>Flink的三种时间语义</h1><ul><li>Processing Time：事件被处理时机器的系统时间</li><li>Event Time：事件自身的时间</li><li>Ingestion Time：事件进入 Flink 的时间</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110151414.png"></p><h2 id="Process-Time"><a href="#Process-Time" class="headerlink" title="Process Time"></a>Process Time</h2><p>事件处理时间 即事件被处理时机器的系统时间</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>最简单的 Time 概念</li><li>最好的性能和最低的延迟</li><li>分布式和异步环境下，不能提供确定性（不能保证结果数据的准确性）</li><li>容易受到事件到达系统的速度(如消息队列)、事件在系统内操作流动的速度和中断的影响</li></ul><h2 id="Event-Time"><a href="#Event-Time" class="headerlink" title="Event Time"></a>Event Time</h2><p>事件自身的时间，一般就是数据本身携带的时间</p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><ul><li>数据本身携带，时间取决于数据</li><li>事件到达Flink之前就已经确定</li><li>必须指定如何生成WaterMarks，用来表示Event Time进度的机制</li><li>无论事件什么时候到达或者其怎么排序，最后处理 Event Time 将产生完全一致和确定的结果</li></ul><h2 id="Ingestion-Time"><a href="#Ingestion-Time" class="headerlink" title="Ingestion Time"></a>Ingestion Time</h2><p>事件进入Flink的时间</p><p>在数据源操作处（进入 Flink source 时），每个事件将进入 Flink 时当时的时间作为时间戳</p><p>特点</p><ul><li>事件在进入数据源（Flink Source）时的时间作为时间戳（）</li><li>介于Event Time 和 Processing Time 之间</li></ul><h2 id="Time生成的位置"><a href="#Time生成的位置" class="headerlink" title="Time生成的位置"></a>Time生成的位置</h2><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110151645.png"></p><h1 id="Flink-Time使用场景"><a href="#Flink-Time使用场景" class="headerlink" title="Flink Time使用场景"></a>Flink Time使用场景</h1><h2 id="Time的使用场景"><a href="#Time的使用场景" class="headerlink" title="Time的使用场景"></a>Time的使用场景</h2><p>一般来说在生产环境中使用 Processing Time 和 Event Time 比较多，Ingestion Time 一般用的较少</p><h2 id="Processing-Time使用场景"><a href="#Processing-Time使用场景" class="headerlink" title="Processing Time使用场景"></a>Processing Time使用场景</h2><h3 id="Processing-Time使用场景-1"><a href="#Processing-Time使用场景-1" class="headerlink" title="Processing Time使用场景"></a>Processing Time使用场景</h3><ul><li>用户不关心事件时间，只关心这个时间窗口要有数据进来</li></ul><h3 id="Processing-Time-的几种应用场景举例"><a href="#Processing-Time-的几种应用场景举例" class="headerlink" title="Processing Time 的几种应用场景举例"></a>Processing Time 的几种应用场景举例</h3><ul><li>淘宝双十一晚会大屏幕的下单总金额</li></ul><h2 id="Event-Time使用场景"><a href="#Event-Time使用场景" class="headerlink" title="Event Time使用场景"></a>Event Time使用场景</h2><h3 id="Event-Time使用场景-1"><a href="#Event-Time使用场景-1" class="headerlink" title="Event Time使用场景"></a>Event Time使用场景</h3><ul><li>业务需求需要时间这个字段</li></ul><h3 id="Event-Time-的几种应用场景举例"><a href="#Event-Time-的几种应用场景举例" class="headerlink" title="Event Time 的几种应用场景举例"></a>Event Time 的几种应用场景举例</h3><ul><li>购物时先有下单事件、再有支付事件</li><li>机器异常检测出发的警告也需要具体的事件展示出来</li><li>商品广告及时精准推荐给用户依赖的就是用户在浏览器的时间段/频率/时长等信息</li></ul><h3 id="可能出现的情况影响事件到达不一定及时、乱序、延迟"><a href="#可能出现的情况影响事件到达不一定及时、乱序、延迟" class="headerlink" title="可能出现的情况影响事件到达不一定及时、乱序、延迟"></a>可能出现的情况影响事件到达不一定及时、乱序、延迟</h3><ul><li>网络抖动</li><li>服务可用性</li><li>消息队列的分区数据堆积</li></ul><h3 id="但是使用事件时间的话，就可能有这样的情况：数据源采集的数据往消息队列中发送时可能因为网络抖动、服务可用性、消息队列的分区数据堆积的影响而导致数据到达的不一定及时，可能会出现数据出现一定的乱序、延迟几分钟等，庆幸的是-Flink-支持通过-WaterMark-机制来处理这种延迟的数据"><a href="#但是使用事件时间的话，就可能有这样的情况：数据源采集的数据往消息队列中发送时可能因为网络抖动、服务可用性、消息队列的分区数据堆积的影响而导致数据到达的不一定及时，可能会出现数据出现一定的乱序、延迟几分钟等，庆幸的是-Flink-支持通过-WaterMark-机制来处理这种延迟的数据" class="headerlink" title="但是使用事件时间的话，就可能有这样的情况：数据源采集的数据往消息队列中发送时可能因为网络抖动、服务可用性、消息队列的分区数据堆积的影响而导致数据到达的不一定及时，可能会出现数据出现一定的乱序、延迟几分钟等，庆幸的是 Flink 支持通过 WaterMark 机制来处理这种延迟的数据"></a>但是使用事件时间的话，就可能有这样的情况：数据源采集的数据往消息队列中发送时可能因为网络抖动、服务可用性、消息队列的分区数据堆积的影响而导致数据到达的不一定及时，可能会出现数据出现一定的乱序、延迟几分钟等，庆幸的是 Flink 支持通过 WaterMark 机制来处理这种延迟的数据</h3><h3 id="如何设置-Time-策略？"><a href="#如何设置-Time-策略？" class="headerlink" title="如何设置 Time 策略？"></a>如何设置 Time 策略？</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> env = <span class="type">StreamExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">env.setStreamTimeCharacteristic(<span class="type">TimeCharacteristic</span>.<span class="type">ProcessingTime</span>)</span><br><span class="line">env.setStreamTimeCharacteristic(<span class="type">TimeCharacteristic</span>.<span class="type">EventTime</span>)</span><br><span class="line">env.setStreamTimeCharacteristic(<span class="type">TimeCharacteristic</span>.<span class="type">IngestionTime</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows环境下netcat的安装及使用</title>
      <link href="/ie/posts/d70eaced.html"/>
      <url>/ie/posts/d70eaced.html</url>
      
        <content type="html"><![CDATA[<p>windows环境下netcat的安装及使用</p><a id="more"></a><h1 id="下载netcat"><a href="#下载netcat" class="headerlink" title="下载netcat"></a>下载netcat</h1><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9ldGVybmFsbHlib3JlZC5vcmcvbWlzYy9uZXRjYXQv" title="https://eternallybored.org/misc/netcat/">https://eternallybored.org/misc/netcat/<i class="fa fa-external-link"></i></span></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110100054.png"></p><h1 id="解压文件夹"><a href="#解压文件夹" class="headerlink" title="解压文件夹"></a>解压文件夹</h1><h1 id="将文件夹中的所有内容复制到C-Windows-System32的文件夹下"><a href="#将文件夹中的所有内容复制到C-Windows-System32的文件夹下" class="headerlink" title="将文件夹中的所有内容复制到C:\Windows\System32的文件夹下"></a>将文件夹中的所有内容复制到C:\Windows\System32的文件夹下</h1><h1 id="打开命令界面：Windows-R-cmd-输入nc-命令即可"><a href="#打开命令界面：Windows-R-cmd-输入nc-命令即可" class="headerlink" title="打开命令界面：Windows+R  cmd 输入nc 命令即可."></a>打开命令界面：Windows+R cmd 输入nc 命令即可.</h1>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
          <category> netcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> netcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink实时处理Socket数据</title>
      <link href="/ie/posts/fc610c2d.html"/>
      <url>/ie/posts/fc610c2d.html</url>
      
        <content type="html"><![CDATA[<p>Apache Flink是一个面向分布式数据流处理和批量数据处理的开源计算平台，提供支持流处理和批处理两种类型应用的功能<br>Flink实时处理Socket数据</p><a id="more"></a><p>Flink Socket 源码<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0ZsaW5rU29ja2V0" title="https://github.com/MHuiG/FlinkSocket">GitHub<i class="fa fa-external-link"></i></span></p><h1 id="通过-Maven-Archetype-创建项目"><a href="#通过-Maven-Archetype-创建项目" class="headerlink" title="通过 Maven Archetype 创建项目"></a>通过 Maven Archetype 创建项目</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">-DarchetypeGroupId=org.apache.flink \</span><br><span class="line">-DarchetypeArtifactId=flink-quickstart-scala \</span><br><span class="line">-DarchetypeVersion=1.9.0</span><br></pre></td></tr></table></figure><p>通过以上Maven 命令进行项目创建的过程中，命令会交互式地提示用户对项目的 groupId、artifactId、version、package 等信息进行定义，且部分选项有默认值，直接回车即可。如图如果创建项目成功之后，客户端会有相应提示。</p><p>这里我们分别指定 groupId、artifactId 的信息分别如下，其余参数使用默认值</p><ul><li>groupId：com.qst</li><li>artifactId：flink-socket</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110093926.png"></p><h2 id="检查项目"><a href="#检查项目" class="headerlink" title="检查项目"></a>检查项目</h2><p>对于使用 Maven 创建的项目，我们可以看到的项目结构如下所示</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094028.png"></p><p>以上项目结构可以看出，该项目是一个 Scala 代码的项目，分别是 BatchJob.java 和StreamingJob.java 两个文件，分别赌赢 Flink 批量接口 DataSet 的实例代码和流式接口的实例代码。</p><h2 id="将项目导入IDE"><a href="#将项目导入IDE" class="headerlink" title="将项目导入IDE"></a>将项目导入IDE</h2><p>项目经过上述步骤创建后，Flink 官网推荐使用 Intellij IDEA 进行后续项目开发。</p><h2 id="编译项目"><a href="#编译项目" class="headerlink" title="编译项目"></a>编译项目</h2><p>项目经过上述步骤创建后，可以使用 Maven Command 命令 mvn clean package 对项目进行编译，编译完成后会在项目同级目录下生成 target/<artifactid>-<version>.jar 文件，此jar文件就可以通过 Web 客户端提交到集群上运行。</version></artifactid></p><h1 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h1><p>这里我们使用官网推荐的 IntelliJ IDEA 作为应用的开发的 IDE。</p><h2 id="下载-IntelliJ-IDEA"><a href="#下载-IntelliJ-IDEA" class="headerlink" title="下载 IntelliJ IDEA"></a>下载 IntelliJ IDEA</h2><p>用户可以通过 IntelliJ IDEA 官方地址下载安装程序，根据操作系统选择相应的程序包进行安装。</p><h2 id="安装-Scala-Plugins"><a href="#安装-Scala-Plugins" class="headerlink" title="安装 Scala Plugins"></a>安装 Scala Plugins</h2><p>安装完 IntelliJ IDEA 默认是不支持 Scala 开发环境的，需要安装 Scala 插件进行支持。一下说明在 IDEA 中进行 Scala 插件的安装。<br> 打开 IDEA IDE 后，在 IntelliJ IDEA 菜单栏中选择 Preferences选项，然后选择 Plugins 子选项，最后在页面中选择 Marketplace，在搜索框中输入 Scala 进行搜索<br> 在检索出来的选项列表中选择和安装 Scala插件</p><p> 点击安装后重启IDE，Scala 编程环境即可生效</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094408.png"></p><h2 id="导入-Flink-项目"><a href="#导入-Flink-项目" class="headerlink" title="导入 Flink 项目"></a>导入 Flink 项目</h2><p> 启动 IntelliJ IDEA，选择 Import Project，在文件选项框中选择创建好的项目，点击确定。<br> 导入项目中选择 Import project from external mode 中的 Maven 后续选项使用默认值即可。</p><h1 id="Flink-Socket-应用程序"><a href="#Flink-Socket-应用程序" class="headerlink" title="Flink Socket 应用程序"></a>Flink Socket 应用程序</h1><h2 id="编写-Flink-Socket-应用程序代码"><a href="#编写-Flink-Socket-应用程序代码" class="headerlink" title="编写 Flink Socket 应用程序代码"></a>编写 Flink Socket 应用程序代码</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.scala._</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">StreamingJob</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="comment">//设置环境变量</span></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">StreamExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//指定数据源，读取socket</span></span><br><span class="line">    <span class="keyword">val</span> socketStream = env.socketTextStream(<span class="string">"localhost"</span>, <span class="number">9000</span>, '\n')</span><br><span class="line">    <span class="comment">//对数据集指定转换操作逻辑</span></span><br><span class="line">    <span class="keyword">val</span> count = socketStream</span><br><span class="line">      .flatMap(_.toLowerCase.split(<span class="string">"\\W+"</span>))</span><br><span class="line">      .filter(_.nonEmpty)</span><br><span class="line">      .map((_, <span class="number">1</span>))</span><br><span class="line">      .keyBy(<span class="number">0</span>)</span><br><span class="line">      .sum(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">//将计算结果打印到控制台</span></span><br><span class="line">    count.print()</span><br><span class="line">    <span class="comment">//指定任务名称并触发流式任务</span></span><br><span class="line">    env.execute(<span class="string">"Socket Stream"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在-IDE-中测试代码"><a href="#在-IDE-中测试代码" class="headerlink" title="在 IDE 中测试代码"></a>在 IDE 中测试代码</h2><p>在代码文件中右键运行程序</p><p>此时会报如下错误</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094512.png"></p><p>这时我们需要在 IDEA 的 Run/Debug Configuration 中将 “Include dependencies with “Provided” scope ”选项勾选，这时我们就可以在本地 IDE 运行了</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094634.png"></p><h2 id="在本地测试代码"><a href="#在本地测试代码" class="headerlink" title="在本地测试代码"></a>在本地测试代码</h2><p>首先在命令行我们现在终端开启监听端口9000，在命令行中执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l 9000</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094800.png"></p><p>然后在 IDE 中 右键运行 StreamingJob 类的 main 方法，运行结果如下</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094846.png"></p><h2 id="在-Web-客户端中运行-Job"><a href="#在-Web-客户端中运行-Job" class="headerlink" title="在 Web 客户端中运行 Job"></a>在 Web 客户端中运行 Job</h2><p>首先在项目所在目录执行 mvn clean package 进行打包，在项目的 target 目录下生成一个 flink-socket-1.0-SNAPSHOT.jar 文件<br>在命令行我们现在终端开启监听端口9000，在命令行中执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l 9000</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110094800.png"></p><p>在浏览器中打开 Flink Web 监控页面，在左侧选择 Submit New Job 选项，点击 右上角的 Add New 选择我们编译好的 flink-socket-1.0-SNAPSHOT.jar 文件，点击 Submit 按钮提交Job</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110095011.png"></p><p>选择 Task Managers 选择列表中的对应 Job 点击 Stdout选项查看执行结果</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110095032.png"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink 编程模型</title>
      <link href="/ie/posts/4920f048.html"/>
      <url>/ie/posts/4920f048.html</url>
      
        <content type="html"><![CDATA[<p>Apache Flink是一个面向分布式数据流处理和批量数据处理的开源计算平台，提供支持流处理和批处理两种类型应用的功能</p><a id="more"></a><h1 id="Flink-环境准备"><a href="#Flink-环境准备" class="headerlink" title="Flink 环境准备"></a>Flink 环境准备</h1><ul><li>Flink编写程序需要依赖Java——JDK</li><li>项目使用Maven管理依赖——Maven</li><li>开发工具使用IDEA——IntelliJ IDEA</li></ul><h2 id="JDK-8"><a href="#JDK-8" class="headerlink" title="JDK 8"></a>JDK 8</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS90ZWNobmV0d29yay9qYXZhL2phdmFzZS9kb3dubG9hZHMvamRrOC1kb3dubG9hZHMtMjEzMzE1MS5odG1s" title="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html<i class="fa fa-external-link"></i></span></p><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p><span class="exturl" data-url="aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvZG93bmxvYWQuY2dp" title="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi<i class="fa fa-external-link"></i></span></p><h2 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=" title="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows<i class="fa fa-external-link"></i></span></p><h2 id="下载Flink"><a href="#下载Flink" class="headerlink" title="下载Flink"></a>下载Flink</h2><p><span class="exturl" data-url="aHR0cHM6Ly9mbGluay5hcGFjaGUub3JnL2Rvd25sb2Fkcy5odG1s" title="https://flink.apache.org/downloads.html">https://flink.apache.org/downloads.html<i class="fa fa-external-link"></i></span></p><h2 id="安装Scala-Plugins"><a href="#安装Scala-Plugins" class="headerlink" title="安装Scala Plugins"></a>安装Scala Plugins</h2><p>点击 File -&gt; Settings 菜单 , 或Ctrl + Alt + S 快捷键 . 打开设置面板 . 并切换到Plugins插件视图<br>搜索 Scala 点击 Install</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110092254.png"></p><h1 id="Flink-项目模版"><a href="#Flink-项目模版" class="headerlink" title="Flink 项目模版"></a>Flink 项目模版</h1><h2 id="基于Java的项目模版"><a href="#基于Java的项目模版" class="headerlink" title="基于Java的项目模版"></a>基于Java的项目模版</h2><p>Flink WordCount Java 源码<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0ZsaW5rV29yZENvdW50SmF2YQ==" title="https://github.com/MHuiG/FlinkWordCountJava">GitHub<i class="fa fa-external-link"></i></span></p><h3 id="在命令行使用maven创建Flink项目"><a href="#在命令行使用maven创建Flink项目" class="headerlink" title="在命令行使用maven创建Flink项目"></a>在命令行使用maven创建Flink项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">-DarchetypeGroupId=org.apache.flink \</span><br><span class="line">-DarchetypeArtifactId=flink-quickstart-java \</span><br><span class="line">-DarchetypeVersion=1.8.3</span><br></pre></td></tr></table></figure><h3 id="根据提示输入groupId、artifactId"><a href="#根据提示输入groupId、artifactId" class="headerlink" title="根据提示输入groupId、artifactId"></a>根据提示输入groupId、artifactId</h3><ul><li>groupId：com.qst（所在公司、学校、组织官网网址的反写）</li><li>artifactId：wordcount-java（项目名称）</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110092502.png"></p><h3 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h3><ul><li>使用mvn命令创建项目后我们会得到一个如下结构的项目目录</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110092620.png"></p><h3 id="编译项目"><a href="#编译项目" class="headerlink" title="编译项目"></a>编译项目</h3><ul><li>在项目所在目录执行“mvn clean package”命令对项目进行编译</li><li>这时maven会下载Flink项目需要的依赖包并编译项目</li><li>编译完成后产生一个 target/<artifact-id>-<version>.jar</version></artifact-id></li></ul><h2 id="基于-Scala-的项目模版"><a href="#基于-Scala-的项目模版" class="headerlink" title="基于 Scala 的项目模版"></a>基于 Scala 的项目模版</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">-DarchetypeGroupId=org.apache.flink \</span><br><span class="line">-DarchetypeArtifactId=flink-quickstart-scala \</span><br><span class="line">-DarchetypeVersion=1.8.3</span><br></pre></td></tr></table></figure><h1 id="Flink-WordCount"><a href="#Flink-WordCount" class="headerlink" title="Flink WordCount"></a>Flink WordCount</h1><p>Flink WordCount scala 源码<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0ZsaW5rV29yZENvdW50" title="https://github.com/MHuiG/FlinkWordCount">GitHub<i class="fa fa-external-link"></i></span></p><h2 id="创建WrodCount项目"><a href="#创建WrodCount项目" class="headerlink" title="创建WrodCount项目"></a>创建WrodCount项目</h2><h3 id="在命令行使用maven创建Flink项目-1"><a href="#在命令行使用maven创建Flink项目-1" class="headerlink" title="在命令行使用maven创建Flink项目"></a>在命令行使用maven创建Flink项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">-DarchetypeGroupId=org.apache.flink \</span><br><span class="line">-DarchetypeArtifactId=flink-quickstart-scala \</span><br><span class="line">-DarchetypeVersion=1.8.3</span><br></pre></td></tr></table></figure><h3 id="根据提示在输入groupId、artifactId"><a href="#根据提示在输入groupId、artifactId" class="headerlink" title="根据提示在输入groupId、artifactId"></a>根据提示在输入groupId、artifactId</h3><ul><li>groupId：com.qst（所在公司、学校、组织官网网址的反写）</li><li>artifactId：wordcount-scala（项目名称）</li><li>其它选项使用默认值</li></ul><h2 id="将项目导入IDEA"><a href="#将项目导入IDEA" class="headerlink" title="将项目导入IDEA"></a>将项目导入IDEA</h2><ul><li>在IDEA中将 flink-wordcount 项目导入</li><li>选择 Import Project 找到 wordcount-scala 所在目录将项目导入IDEA</li></ul><h2 id="开发WordCount程序"><a href="#开发WordCount程序" class="headerlink" title="开发WordCount程序"></a>开发WordCount程序</h2><h3 id="第一步：设定执行环境"><a href="#第一步：设定执行环境" class="headerlink" title="第一步：设定执行环境"></a>第一步：设定执行环境</h3><ul><li>运行Flink程序的第一步就是获得相应的执行环境，执行环境决定了程序在什么环境执行（本地/集群）</li><li>不同的运行环境也决定了程序的类型</li></ul><ul><li>批处理 ExecutionEnvironment</li><li>流处理 StreamExecutionEnvironment<h3 id="第二步：指定数据源-读取数据"><a href="#第二步：指定数据源-读取数据" class="headerlink" title="第二步：指定数据源 读取数据"></a>第二步：指定数据源 读取数据</h3></li></ul><ul><li>定义执行环境后需要获得需要处理的数据，将外部数据转换成 DateStream 或 DataSet<br>如下方法读取所示使用 readTextFile() 方法读取文件中的数据并转换成 DataStream 数据集<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> source = env.readTextFile(<span class="string">"/word.txt"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="第三步：对数据集执行转换操作"><a href="#第三步：对数据集执行转换操作" class="headerlink" title="第三步：对数据集执行转换操作"></a>第三步：对数据集执行转换操作</h3><ul><li>Flink 中的 Transformation 操作通过不同的 Operator 来实现对数据的操作</li><li>Operator 内部通过 Function 接口完成数据处理</li><li>在 DataStream API 和 DataSet API 中提供了大量的转换操作<br>flatMap、map、filter、keyBy</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source.flatMap(line =&gt; line.toLowerCase.split(<span class="string">"\\W+"</span>))  <span class="comment">//将文本转换成数组</span></span><br><span class="line">.filter(_.length &gt; <span class="number">0</span>)  <span class="comment">//过滤空字符串</span></span><br><span class="line">.map(word =&gt; (word, <span class="number">1</span>)) <span class="comment">//转换成 key-value 接口</span></span><br><span class="line">.keyBy(<span class="number">0</span>) <span class="comment">//按照指定字段（key）对数据进行分区</span></span><br><span class="line">.sum(<span class="number">1</span>) <span class="comment">//执行求和运算</span></span><br></pre></td></tr></table></figure><h3 id="第四步：输出结果"><a href="#第四步：输出结果" class="headerlink" title="第四步：输出结果"></a>第四步：输出结果</h3><p>经过转换后形成了最终结果，通常需要将结果数据输出到外部系统中</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">source.flatMap(line =&gt; line.toLowerCase.split(<span class="string">"\\W+"</span>))  <span class="comment">//将文本转换成数组</span></span><br><span class="line">.filter(_.length &gt; <span class="number">0</span>)  <span class="comment">//过滤空字符串</span></span><br><span class="line">.map(word =&gt; (word, <span class="number">1</span>)) <span class="comment">//转换成 key-value 接口</span></span><br><span class="line">.keyBy(<span class="number">0</span>) <span class="comment">//按照指定字段（key）对数据进行分区</span></span><br><span class="line">.sum(<span class="number">1</span>) <span class="comment">//执行求和运算</span></span><br><span class="line">.print() <span class="comment">//输出到控制台</span></span><br><span class="line"><span class="comment">//.writeAsText("/word_out.txt") //写入外部文件</span></span><br></pre></td></tr></table></figure><h3 id="第五步：触发程序执行"><a href="#第五步：触发程序执行" class="headerlink" title="第五步：触发程序执行"></a>第五步：触发程序执行</h3><p>所有的计算逻辑完成之后，需要调用 StreamExecutionEnvironment 的 execute 方法来触发应用程序的执行</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env.execute(<span class="string">"Streaming Scala WordCount"</span>)</span><br></pre></td></tr></table></figure><h2 id="运行-amp-编译-WordCount-程序"><a href="#运行-amp-编译-WordCount-程序" class="headerlink" title="运行&amp;编译 WordCount 程序"></a>运行&amp;编译 WordCount 程序</h2><h3 id="编译-WordCount-应用程序"><a href="#编译-WordCount-应用程序" class="headerlink" title="编译 WordCount 应用程序"></a>编译 WordCount 应用程序</h3><ul><li>在程序根目录执行“mvn clean package”命令进行编译</li><li>这时maven会下载Flink项目需要的依赖包并编译项目</li><li>编译完成后产生一个 target/<artifact-id>-<version>.jar</version></artifact-id></li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110093244.png"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink 概述</title>
      <link href="/ie/posts/72cd4c87.html"/>
      <url>/ie/posts/72cd4c87.html</url>
      
        <content type="html"><![CDATA[<p>Apache Flink是一个面向分布式数据流处理和批量数据处理的开源计算平台，提供支持流处理和批处理两种类型应用的功能</p><a id="more"></a><h1 id="Flink是什么"><a href="#Flink是什么" class="headerlink" title="Flink是什么"></a>Flink是什么</h1><ul><li>Apache Flink是一个面向分布式数据流处理和批量数据处理的开源计算平台，提供支持流处理和批处理两种类型应用的功能</li><li>Apache Flink 的前身是柏林理工大学一个研究性项目， 在 2014 被 Apache 孵化器所接受，然后迅速地成为了Apache Software Foundation的顶级项目之一</li><li>代码主要由Java实现，部分代码是Scala</li><li>Flink主要处理的场景就是流数据，批处理只是流数据的一个极限特例</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110083438.png"></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="有界流（bounded-stream）-批量数据"><a href="#有界流（bounded-stream）-批量数据" class="headerlink" title="有界流（bounded stream） 批量数据"></a>有界流（bounded stream） 批量数据</h2><ul><li>有界流有定义流的开始，也有定义流的结束。有界流可以在摄取所有数据后再进行计算。有界流所有数据可以被排序，所以并不需要有序摄取。有界流处理通常被称为批处理。</li><li>有界流通常被称为有界数据集，数据的特点为有限不会改变的数据集合</li></ul><h3 id="常见的有界流"><a href="#常见的有界流" class="headerlink" title="常见的有界流"></a>常见的有界流</h3><ul><li>T+1的销售数据</li><li>11月的汽车销售数量</li><li>2018年全国电影票房</li></ul><h2 id="无界流（unbounded-stream）-实时数据"><a href="#无界流（unbounded-stream）-实时数据" class="headerlink" title="无界流（unbounded stream） 实时数据"></a>无界流（unbounded stream） 实时数据</h2><ul><li>有定义流的开始，但没有定义流的结束。它们会无休止地产生数据。无界流的数据必须持续处理，即数据被摄取后需要立刻处理。我们不能等到所有数据都到达再处理，因为输入是无限的，在任何时候输入都不会完成。处理无界数据通常要求以特定顺序摄取数据，例如事件发生的顺序，以便能够推断结果的完整性。</li><li>无界流通常被称为无穷数据集，数据的特点为无穷集成的数据集合</li></ul><h3 id="常见的无界流"><a href="#常见的无界流" class="headerlink" title="常见的无界流"></a>常见的无界流</h3><ul><li>用户与客户断的实时交互数据</li><li>应用时产生的日志</li><li>金融市场的实时交易记录</li></ul><h2 id="有界流和无界流"><a href="#有界流和无界流" class="headerlink" title="有界流和无界流"></a>有界流和无界流</h2><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110083719.png"></p><h1 id="数据运算模型"><a href="#数据运算模型" class="headerlink" title="数据运算模型"></a>数据运算模型</h1><h2 id="流式计算"><a href="#流式计算" class="headerlink" title="流式计算"></a>流式计算</h2><ul><li>只要数据一直在产生，计算就持续的进行</li><li>处理无界数据集<h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2></li><li>在预定义的时间内运行计算，当计算完成时释放计算机资源</li><li>处理有界数据集</li></ul><h1 id="Flink组件栈"><a href="#Flink组件栈" class="headerlink" title="Flink组件栈"></a>Flink组件栈</h1><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110083912.png"></p><h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><h3 id="本地-Local"><a href="#本地-Local" class="headerlink" title="本地 Local"></a>本地 Local</h3><ul><li>一个Java虚拟机 Single JVM（IDE中直接运行）<h3 id="集群-Cluster"><a href="#集群-Cluster" class="headerlink" title="集群 Cluster"></a>集群 Cluster</h3></li><li>Standalone（start-cluster.sh）</li><li>YARN</li><li>MESOS</li><li>K8s<h3 id="云-Cloud"><a href="#云-Cloud" class="headerlink" title="云 Cloud"></a>云 Cloud</h3></li><li>GCE google</li><li>AWS/EC2 amazon</li><li>MapR</li><li>Aliyun</li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110084046.png"></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110084547.png"></p><h3 id="Program-Code"><a href="#Program-Code" class="headerlink" title="Program Code"></a>Program Code</h3><ul><li>Flink应用程序代码<h3 id="Job-Client"><a href="#Job-Client" class="headerlink" title="Job Client"></a>Job Client</h3></li><li>任务执行起点，负责接受用户的程序代码、创建数据流、提交数据流给Job Manager、返回结果<h3 id="Job-Manager"><a href="#Job-Manager" class="headerlink" title="Job Manager"></a>Job Manager</h3></li><li>作业管理器协调管理程序<h3 id="Task-Manager"><a href="#Task-Manager" class="headerlink" title="Task Manager"></a>Task Manager</h3></li><li>从Job Manager接受需要部署的Task</li></ul><h2 id="Runtime"><a href="#Runtime" class="headerlink" title="Runtime"></a>Runtime</h2><p>Runtime层提供了支持Flink计算的全部核心实现，比如：支持分布式Stream处理、JobGraph到ExecutionGraph的映射、调度等等，为上层API层提供基础服务</p><h2 id="API-amp-Libaries"><a href="#API-amp-Libaries" class="headerlink" title="API&amp;Libaries"></a>API&amp;Libaries</h2><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110085106.png"></p><h3 id="核心APIs"><a href="#核心APIs" class="headerlink" title="核心APIs"></a>核心APIs</h3><ul><li>DataSet API：批处理，处理有界的数据集</li><li>DataStream API：流式处理，处理有界或无界的数据集<h3 id="Table-API"><a href="#Table-API" class="headerlink" title="Table API"></a>Table API</h3></li><li>以表为中心声明的DSL</li><li>select、project、join、group-by、aggregate操作</li><li>支持与DataStream/DataSet混合使用<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3></li><li>Flink提供的最高级抽象</li><li>支持与DataStream/DataSet混合使用<h3 id="面向批处理的Lib"><a href="#面向批处理的Lib" class="headerlink" title="面向批处理的Lib"></a>面向批处理的Lib</h3></li><li>FlinkML 机器学习</li><li>Gelly 图处理<h3 id="面向流处理的类库"><a href="#面向流处理的类库" class="headerlink" title="面向流处理的类库"></a>面向流处理的类库</h3></li><li>CEP 复杂事件处理</li><li>SQL-Like Table的关系操作<h1 id="Flink的基本编程模型"><a href="#Flink的基本编程模型" class="headerlink" title="Flink的基本编程模型"></a>Flink的基本编程模型</h1></li></ul><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110085647.png"></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110085811.png"></p><h2 id="Source-数据输入"><a href="#Source-数据输入" class="headerlink" title="Source 数据输入"></a>Source 数据输入</h2><ul><li>基于文件</li><li>基于本地集合</li><li>基于网络套接字</li><li>自定义：Apache Kafka、RabbitMQ<h2 id="Transformation-数据转换"><a href="#Transformation-数据转换" class="headerlink" title="Transformation 数据转换"></a>Transformation 数据转换</h2></li><li>Map、FlatMap、Filter、Reduce、Window<h2 id="Sink-数据输出"><a href="#Sink-数据输出" class="headerlink" title="Sink 数据输出"></a>Sink 数据输出</h2></li><li>写文件</li><li>打印</li><li>socket</li><li>自定义：Apache Kafka、HDFS、MySQL</li></ul><h1 id="大数据框架对比（流式-实时数据处理）"><a href="#大数据框架对比（流式-实时数据处理）" class="headerlink" title="大数据框架对比（流式/实时数据处理）"></a>大数据框架对比（流式/实时数据处理）</h1><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110090004.png"></p><h1 id="大数据Lamdba框架"><a href="#大数据Lamdba框架" class="headerlink" title="大数据Lamdba框架"></a>大数据Lamdba框架</h1><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20200110090134.png"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Flink </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除注释自动化</title>
      <link href="/ie/posts/53d0a404.html"/>
      <url>/ie/posts/53d0a404.html</url>
      
        <content type="html"><![CDATA[<p>实现批量删除 python java C CPP JS CSS html xml php sql 注释</p><a id="more"></a><p>源码见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL1JlbW92ZUNvbW1vbg==" title="https://github.com/MHuiG/RemoveCommon">GitHub<i class="fa fa-external-link"></i></span></p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>Python中的注释有单行注释和多行注释：</p><ul><li>井号（#）</li></ul><p>Python中单行注释以 # 开头，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个注释</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>)</span><br><span class="line">多行注释用三个单引号 <span class="string">''' 或者三个双引号 """ 将注释括起来，例如:</span></span><br></pre></td></tr></table></figure><ul><li>单引号（’’’）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3 </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号 </span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure><ul><li>双引号（”””）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3 </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号 </span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure></li></ul><h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><ul><li><p>单行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注释内容</span></span><br></pre></td></tr></table></figure></li><li><p>多行注释</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">... 注释内容....</span></span><br><span class="line"><span class="comment">... 注释内容....</span></span><br><span class="line"><span class="comment">... 注释内容....</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>文档注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 这个类演示了文档注释</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Ayan Amhed</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 1.2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SquareNum</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * This method returns the square of num.</span></span><br><span class="line"><span class="comment">   * This is a multiline description. You can use</span></span><br><span class="line"><span class="comment">   * as many lines as you like.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> num The value to be squared.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> num squared.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">square</span><span class="params">(<span class="keyword">double</span> num)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> num * num;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * This method inputs a number from the user.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> The value input as a double.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@exception</span> IOException On input error.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> IOException</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getNumber</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(System.in);</span><br><span class="line">      BufferedReader inData = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">      String str;</span><br><span class="line">      str = inData.readLine();</span><br><span class="line">      <span class="keyword">return</span> (<span class="keyword">new</span> Double(str)).doubleValue();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * This method demonstrates square().</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> args Unused.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Nothing.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@exception</span> IOException On input error.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> IOException</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      SquareNum ob = <span class="keyword">new</span> SquareNum();</span><br><span class="line">      <span class="keyword">double</span> val;</span><br><span class="line">      System.out.println(<span class="string">"Enter value to be squared: "</span>);</span><br><span class="line">      val = ob.getNumber();</span><br><span class="line">      val = ob.square(val);</span><br><span class="line">      System.out.println(<span class="string">"Squared value is "</span> + val);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><ul><li><p>以//开始、以换行符结束的单行注释</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="number">3.1415926536</span>;       <span class="comment">// pi是—个常量</span></span><br></pre></td></tr></table></figure></li><li><p>以/<em>开始、以</em>/结束的块注释</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">open</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">int</span> mode, … <span class="comment">/* int permissions */</span> )</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><ul><li>标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是一段注释。--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段普通的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><ul><li><p>// 单行注释</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br></pre></td></tr></table></figure></li><li><p>井号（#） 单行注释</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单行注释</span></span><br></pre></td></tr></table></figure></li><li><p>/* */多行注释块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释块</span></span><br><span class="line"><span class="comment">它横跨了</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 删除注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>适用于Linux的windows子系统</title>
      <link href="/ie/posts/f70539ce.html"/>
      <url>/ie/posts/f70539ce.html</url>
      
        <content type="html"><![CDATA[<p>适用于Linux的windows子系统方法案例</p><a id="more"></a><h1 id="开启wsl"><a href="#开启wsl" class="headerlink" title="开启wsl"></a>开启wsl</h1><p>首先：为了win10能运行适用于Linux的windows子系统，我们需要开启wsl<br>第一种方法：</p><p>开启wsl，开启步骤：按win + x进入Windows Power Shell，输入下面的命令开启，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure><p>开启后重启系统。</p><p>第二种</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hjNTY4My9hcnRpY2xlL2RldGFpbHMvNzUyMTIyNjgv" title="https://blog.csdn.net/xc5683/article/details/75212268/">方法步骤<i class="fa fa-external-link"></i></span></p><h1 id="安装kali"><a href="#安装kali" class="headerlink" title="安装kali"></a>安装kali</h1><p>进入应用商店，搜索kali，直接安装</p><h1 id="安装VIM"><a href="#安装VIM" class="headerlink" title="安装VIM"></a>安装VIM</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><h1 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#清华大学</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">#浙大</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install apt-transport-https</span><br></pre></td></tr></table></figure><h1 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h1><p>在Linux子系统默认命令端输入，查看ip地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>配置SSH服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --purge openssh-server   ## 先删ssh</span><br><span class="line">sudo apt-get install openssh-server          ## 在安装ssh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /etc/ssh/ssh_config                  ## 删配置文件</span><br><span class="line">sudo service ssh --full-restart</span><br></pre></td></tr></table></figure><p>修改sshd_config文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>将#PasswordAuthentication no的注释去掉，并且将NO修改为YES，kali中默认是yes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure><p>将PermitRootLogin without-password修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure><p>使用xshell登录</p><p>上面命令执行完之后，在xshell中输入用户名和ip就可以通过xshell登录自己电脑的Linux。</p><p>配置永久解决方案</p><p>通过上面的方法，我们可以通过xshell登录自己电脑的Linux。但是断开之后重新开机，我们又需要重新配置SSH。因此，我们需要配置以下命令下，一劳永逸。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh --full-restart   ## 将该命令保存为service.sh，存在home目录下</span><br></pre></td></tr></table></figure><p>配置好之后，下次开机，只需要在Linux子系统的默认终端运行sh service.sh命令后，关掉终端改用xshell登录即可。</p><h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vnc4server tightvncserver</span><br><span class="line">sudo apt-get install xrdp</span><br><span class="line">sudo sed -i &apos;s/port=3389/port=3390/g&apos; /etc/xrdp/xrdp.ini</span><br><span class="line">//apt-get install kali-defaults kali-root-login desktop-base kde-full</span><br><span class="line">sudo apt-get install xorg</span><br><span class="line">sudo apt-get install xfce4</span><br><span class="line">//apt-get install kali-defaults kali-root-login desktop-base xfce4 xfce4-places-plugin xfce4-goodies</span><br><span class="line">sudo echo xfce4-session &gt;~/.xsession</span><br><span class="line">sudo service xrdp restart</span><br></pre></td></tr></table></figure><h1 id="安装工具包"><a href="#安装工具包" class="headerlink" title="安装工具包"></a>安装工具包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install kali-linux-full</span><br></pre></td></tr></table></figure><h1 id="win下关闭kali"><a href="#win下关闭kali" class="headerlink" title="win下关闭kali"></a>win下关闭kali</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop LxssManager</span><br></pre></td></tr></table></figure><h1 id="ubuntu下神奇的多线程apt-get"><a href="#ubuntu下神奇的多线程apt-get" class="headerlink" title="ubuntu下神奇的多线程apt-get"></a>ubuntu下神奇的多线程apt-get</h1><h2 id="安装axel"><a href="#安装axel" class="headerlink" title="安装axel"></a>安装axel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install axel</span><br></pre></td></tr></table></figure><h2 id="下载脚本apt-fast-sh"><a href="#下载脚本apt-fast-sh" class="headerlink" title="下载脚本apt-fast.sh"></a>下载脚本apt-fast.sh</h2><p>下载地址 <span class="exturl" data-url="aHR0cDovL3d3dy5tYXR0cGFybmVsbC5jb20vbGludXgvYXB0LWZhc3QvYXB0LWZhc3Quc2g=" title="http://www.mattparnell.com/linux/apt-fast/apt-fast.sh">http://www.mattparnell.com/linux/apt-fast/apt-fast.sh<i class="fa fa-external-link"></i></span></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/bin/sh</span></span><br><span class="line"><span class="comment"># apt-fast v0.03 by Matt Parnell http://www.mattparnell.com, this thing is fully open-source</span></span><br><span class="line"><span class="comment"># if you do anything cool with it, let me know so I can publish or host it for you</span></span><br><span class="line"><span class="comment"># contact me at admin@mattparnell.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Special thanks</span></span><br><span class="line"><span class="comment"># Travis/travisn000 - support for complex apt-get commands</span></span><br><span class="line"><span class="comment"># Allan Hoffmeister - aria2c support</span></span><br><span class="line"><span class="comment"># Abhishek Sharma - aria2c with proxy support</span></span><br><span class="line"><span class="comment"># Richard Klien - Autocompletion, Download Size Checking (made for on ubuntu, untested on other distros)</span></span><br><span class="line"><span class="comment"># Patrick Kramer Ruiz - suggestions - see Suggestions.txt</span></span><br><span class="line"><span class="comment"># Sergio Silva - test to see if axel is installed, root detection/sudo autorun</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use this just like apt-get for faster package downloading.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for proper priveliges</span></span><br><span class="line">[ <span class="string">"`whoami`"</span> = root ] || exec sudo <span class="string">"$0"</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Test if the axel is installed</span></span><br><span class="line">if [ ! -x /usr/bin/axel ]</span><br><span class="line">then echo <span class="string">"axel is not installed, perform this?(y/n)"</span></span><br><span class="line">    read ops</span><br><span class="line">    case $ops in</span><br><span class="line">         y) if apt-get install axel -y --force-yes</span><br><span class="line">               then echo <span class="string">"axel installed"</span></span><br><span class="line">            <span class="keyword">else</span> echo <span class="string">"unable to install the axel. you are using sudo?"</span> ; exit</span><br><span class="line">            fi ;;</span><br><span class="line">         n) echo <span class="string">"not possible usage apt-fast"</span> ; exit ;;</span><br><span class="line">    esac</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># If the user entered arguments contain upgrade, install, or dist-upgrade</span></span><br><span class="line">if echo <span class="string">"<span class="variable">$@</span>"</span> | grep -q <span class="string">"upgrade\|install\|dist-upgrade"</span>; then</span><br><span class="line">  echo <span class="string">"Working..."</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Go into the directory apt-get normally puts downloaded packages</span></span><br><span class="line">  cd /var/cache/apt/archives/;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Have apt-get print the information, including the URI's to the packages</span></span><br><span class="line">  <span class="comment"># Strip out the URI's, and download the packages with Axel for speediness</span></span><br><span class="line">  <span class="comment"># I found this regex elsewhere, showing how to manually strip package URI's you may need...thanks to whoever wrote it</span></span><br><span class="line">  apt-get -y --print-uris <span class="variable">$@</span> | egrep -o -e <span class="string">"(ht|f)tp://[^\']+"</span> &gt; apt-fast.list &amp;&amp; cat apt-fast.list | xargs -l1 axel -a</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Perform the user's requested action via apt-get</span></span><br><span class="line">  apt-get <span class="variable">$@</span>;</span><br><span class="line"></span><br><span class="line">  echo -e <span class="string">"\nDone! Verify that all packages were installed successfully. If errors are found, run apt-get clean as root and try again using apt-get directly.\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   apt-get <span class="variable">$@</span>;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="安装apt-fast"><a href="#安装apt-fast" class="headerlink" title="安装apt-fast"></a>安装apt-fast</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /root/apt-fast.sh /usr/bin/apt-fast</span><br><span class="line">sudo chmod +x /usr/bin/apt-fast</span><br></pre></td></tr></table></figure><p>现在你已经可以使用apt-fast替代apt-get了<br>试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-fast update</span><br><span class="line">apt-fast upgrade</span><br><span class="line">apt-fast install XXXXX</span><br></pre></td></tr></table></figure><h2 id="魔改axel设置脚本"><a href="#魔改axel设置脚本" class="headerlink" title="魔改axel设置脚本"></a>魔改axel设置脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/axelrc</span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_connections = 4</span><br></pre></td></tr></table></figure><p>默认的4线程<br>直接修改这个值<br>例如：十线程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_connections = 10</span><br></pre></td></tr></table></figure><h1 id="Linux下的vim配置文件"><a href="#Linux下的vim配置文件" class="headerlink" title="Linux下的vim配置文件"></a>Linux下的vim配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.vimrc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line">&quot; Vim config file.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; Global Settings: &#123;&#123;&#123;</span><br><span class="line">syntax on                           &quot; highlight syntax</span><br><span class="line">filetype plugin indent on           &quot; auto detect file type</span><br><span class="line"></span><br><span class="line">set nocompatible                    &quot; out of Vi compatible mode</span><br><span class="line">&quot;set number                          &quot; show line number</span><br><span class="line">set numberwidth=3                   &quot; minimal culumns for line numbers</span><br><span class="line">set textwidth=0                     &quot; do not wrap words (insert)</span><br><span class="line">set nowrap                          &quot; do not wrap words (view)</span><br><span class="line">set showcmd                         &quot; show (partial) command in status line</span><br><span class="line">set ruler                           &quot; line and column number of the cursor position</span><br><span class="line">set wildmenu                        &quot; enhanced command completion</span><br><span class="line">set wildmode=list:longest,full      &quot; command completion mode</span><br><span class="line">set laststatus=2                    &quot; always show the status line</span><br><span class="line">set mouse=                         &quot; use mouse in all mode</span><br><span class="line">set foldenable                      &quot; fold lines</span><br><span class="line">set foldmethod=marker               &quot; fold as marker</span><br><span class="line">set noerrorbells                    &quot; do not use error bell</span><br><span class="line">set novisualbell                    &quot; do not use visual bell</span><br><span class="line">set t_vb=                           &quot; do not use terminal bell</span><br><span class="line"></span><br><span class="line">set wildignore=.svn,.git,*.swp,*.bak,*~,*.o,*.a</span><br><span class="line">set autowrite                       &quot; auto save before commands like :next and :make</span><br><span class="line">set cursorline</span><br><span class="line">set hidden                          &quot; enable multiple modified buffers</span><br><span class="line">set history=1000                     &quot; record recent used command history</span><br><span class="line">set autoread                        &quot; auto read file that has been changed on disk</span><br><span class="line">set backspace=indent,eol,start      &quot; backspace can delete everything</span><br><span class="line">set completeopt=menuone,longest     &quot; complete options (insert)</span><br><span class="line">set pumheight=10                    &quot; complete popup height</span><br><span class="line">set scrolloff=5                     &quot; minimal number of screen lines to keep beyond the cursor</span><br><span class="line">set autoindent                      &quot; automatically indent new line</span><br><span class="line">set cinoptions=:0,l1,g0,t0,(0,(s    &quot; C kind language indent options</span><br><span class="line">set clipboard+=unnamed              &quot; shared clipboard</span><br><span class="line">set noexpandtab                     &quot; do not use spaces instead of tabs</span><br><span class="line"></span><br><span class="line">set tabstop=4                       &quot; number of spaces in a tab</span><br><span class="line">set softtabstop=4                   &quot; insert and delete space of &lt;tab&gt;</span><br><span class="line">set shiftwidth=4                    &quot; number of spaces for indent</span><br><span class="line">set expandtab                       &quot; expand tabs into spaces</span><br><span class="line">set incsearch                       &quot; incremental search</span><br><span class="line">set hlsearch                        &quot; highlight search match</span><br><span class="line">set ignorecase                      &quot; do case insensitive matching</span><br><span class="line">set smartcase                       &quot; do not ignore if search pattern has CAPS</span><br><span class="line">set nobackup                        &quot; do not create backup file</span><br><span class="line">&quot;set noswapfile                      &quot; do not create swap file</span><br><span class="line">set backupcopy=yes                  &quot; overwrite the original file</span><br><span class="line"></span><br><span class="line">set encoding=utf-8</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set fileencoding=utf-8</span><br><span class="line">set fileencodings=gb2312,utf-8,gbk,gb18030</span><br><span class="line">set fileformat=unix</span><br><span class="line"></span><br><span class="line">set background=dark</span><br><span class="line">&quot;colorscheme SolarizedDark_modified</span><br><span class="line">&quot;colorscheme wombat_modified</span><br><span class="line">&quot; gui settings</span><br><span class="line">if has(&quot;gui_running&quot;)</span><br><span class="line">    set guioptions-=T &quot; no toolbar</span><br><span class="line">    set guioptions-=r &quot; no right-hand scrollbar</span><br><span class="line">    set guioptions-=R &quot; no right-hand vertically scrollbar</span><br><span class="line">    set guioptions-=l &quot; no left-hand scrollbar</span><br><span class="line">    set guioptions-=L &quot; no left-hand vertically scrollbar</span><br><span class="line">    autocmd GUIEnter * simalt ~x &quot; window width and height</span><br><span class="line">    language messages zh_CN.utf-8 &quot; use chinese messages if has</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; Restore the last quit position when open file.</span><br><span class="line">autocmd BufReadPost *</span><br><span class="line">    \ if line(&quot;&apos;\&quot;&quot;) &gt; 0 &amp;&amp; line(&quot;&apos;\&quot;&quot;) &lt;= line(&quot;$&quot;) |</span><br><span class="line">    \     exe &quot;normal g&apos;\&quot;&quot; |</span><br><span class="line">    \ endif</span><br><span class="line">&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&quot; Key Bindings: &#123;&#123;&#123;</span><br><span class="line">let mapleader = &quot;,&quot;</span><br><span class="line">let maplocalleader = &quot;\\&quot;</span><br><span class="line"></span><br><span class="line">&quot; map : -&gt; &lt;space&gt;</span><br><span class="line">map &lt;Space&gt; :</span><br><span class="line"></span><br><span class="line">&quot; move between windows</span><br><span class="line">nmap &lt;C-h&gt; &lt;C-w&gt;h</span><br><span class="line">nmap &lt;C-j&gt; &lt;C-w&gt;j</span><br><span class="line">nmap &lt;C-k&gt; &lt;C-w&gt;k</span><br><span class="line">nmap &lt;C-l&gt; &lt;C-w&gt;l</span><br><span class="line"></span><br><span class="line">&quot; Don&apos;t use Ex mode, use Q for formatting</span><br><span class="line">map Q gq</span><br><span class="line"></span><br><span class="line">&quot;make Y consistent with C and D</span><br><span class="line">nnoremap Y y$</span><br><span class="line"></span><br><span class="line">&quot; toggle highlight trailing whitespace</span><br><span class="line">nmap &lt;silent&gt; &lt;leader&gt;l :set nolist!&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; Ctrl-E to switch between 2 last buffers</span><br><span class="line">nmap &lt;C-E&gt; :b#&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; ,e to fast finding files. just type beginning of a name and hit TAB</span><br><span class="line">nmap &lt;leader&gt;e :e **/</span><br><span class="line"></span><br><span class="line">&quot; Make shift-insert work like in Xterm</span><br><span class="line">map &lt;S-Insert&gt; &lt;MiddleMouse&gt;</span><br><span class="line">map! &lt;S-Insert&gt; &lt;MiddleMouse&gt;</span><br><span class="line"></span><br><span class="line">&quot; ,n to get the next location (compilation errors, grep etc)</span><br><span class="line">nmap &lt;leader&gt;n :cn&lt;CR&gt;</span><br><span class="line">nmap &lt;leader&gt;p :cp&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; Ctrl-N to disable search match highlight</span><br><span class="line">nmap &lt;silent&gt; &lt;C-N&gt; :silent noh&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; center display after searching</span><br><span class="line">nnoremap n   nzz</span><br><span class="line">nnoremap N   Nzz</span><br><span class="line">nnoremap *   *zz</span><br><span class="line">nnoremap #   #zz</span><br><span class="line">nnoremap g*  g*zz</span><br><span class="line">nnoremap g#  g#z</span><br><span class="line">&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&quot; mru</span><br><span class="line">let MRU_Window_Height = 10</span><br><span class="line">nmap &lt;Leader&gt;r :MRU&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot; taglist</span><br><span class="line">let g:Tlist_WinWidth = 25</span><br><span class="line">let g:Tlist_Use_Right_Window = 0</span><br><span class="line">let g:Tlist_Auto_Update = 1</span><br><span class="line">let g:Tlist_Process_File_Always = 1</span><br><span class="line">let g:Tlist_Exit_OnlyWindow = 1</span><br><span class="line">let g:Tlist_Show_One_File = 1</span><br><span class="line">let g:Tlist_Enable_Fold_Column = 0</span><br><span class="line">let g:Tlist_Auto_Highlight_Tag = 1</span><br><span class="line">let g:Tlist_GainFocus_On_ToggleOpen = 1</span><br><span class="line">nmap &lt;Leader&gt;t :TlistToggle&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot; nerdtree</span><br><span class="line">let g:NERDTreeWinPos = &quot;right&quot;</span><br><span class="line">let g:NERDTreeWinSize = 30</span><br><span class="line">let g:NERDTreeShowLineNumbers = 1</span><br><span class="line">let g:NERDTreeQuitOnOpen = 1</span><br><span class="line">nmap &lt;Leader&gt;f :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">nmap &lt;Leader&gt;F :NERDTreeFind&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot;paste</span><br><span class="line">vmap &lt;C-c&gt; &quot;+y</span><br><span class="line">nmap &lt;C-v&gt; &quot;+p</span><br><span class="line">set pastetoggle=&lt;F12&gt;</span><br><span class="line"></span><br><span class="line">&quot;C，C++ Java Compile and run by F5</span><br><span class="line">map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;</span><br><span class="line">func! CompileRunGcc()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    if &amp;filetype == &apos;c&apos;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;cpp&apos;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;java&apos;</span><br><span class="line">        exec &quot;!javac %&quot;</span><br><span class="line">        exec &quot;!java %&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;sh&apos;</span><br><span class="line">        :!./%</span><br><span class="line">    endif</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">&quot;C,C++ debug</span><br><span class="line">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</span><br><span class="line">func! Rungdb()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    exec &quot;!g++ % -g -o %&lt;&quot;</span><br><span class="line">    exec &quot;!gdb ./%&lt;&quot;</span><br><span class="line">endfunc</span><br></pre></td></tr></table></figure><h1 id="PS1"><a href="#PS1" class="headerlink" title="PS1"></a>PS1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &apos;</span><br></pre></td></tr></table></figure><h1 id="bashrc"><a href="#bashrc" class="headerlink" title="bashrc"></a>bashrc</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"># ~/.bashrc: executed by bash(1) for non-login shells.</span><br><span class="line"># see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)</span><br><span class="line"># for examples</span><br><span class="line"></span><br><span class="line"># If not running interactively, don&apos;t do anything</span><br><span class="line">case $- in</span><br><span class="line">    *i*) ;;</span><br><span class="line">      *) return;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"># don&apos;t put duplicate lines or lines starting with space in the history.</span><br><span class="line"># See bash(1) for more options</span><br><span class="line">HISTCONTROL=ignoreboth</span><br><span class="line"></span><br><span class="line"># append to the history file, don&apos;t overwrite it</span><br><span class="line">shopt -s histappend</span><br><span class="line"></span><br><span class="line"># for setting history length see HISTSIZE and HISTFILESIZE in bash(1)</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">HISTFILESIZE=2000</span><br><span class="line"></span><br><span class="line"># check the window size after each command and, if necessary,</span><br><span class="line"># update the values of LINES and COLUMNS.</span><br><span class="line">shopt -s checkwinsize</span><br><span class="line"></span><br><span class="line"># If set, the pattern &quot;**&quot; used in a pathname expansion context will</span><br><span class="line"># match all files and zero or more directories and subdirectories.</span><br><span class="line">#shopt -s globstar</span><br><span class="line"></span><br><span class="line"># make less more friendly for non-text input files, see lesspipe(1)</span><br><span class="line">#[ -x /usr/bin/lesspipe ] &amp;&amp; eval &quot;$(SHELL=/bin/sh lesspipe)&quot;</span><br><span class="line"></span><br><span class="line"># set variable identifying the chroot you work in (used in the prompt below)</span><br><span class="line">if [ -z &quot;$&#123;debian_chroot:-&#125;&quot; ] &amp;&amp; [ -r /etc/debian_chroot ]; then</span><br><span class="line">    debian_chroot=$(cat /etc/debian_chroot)</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># set a fancy prompt (non-color, unless we know we &quot;want&quot; color)</span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">    xterm-color) color_prompt=yes;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"># uncomment for a colored prompt, if the terminal has the capability; turned</span><br><span class="line"># off by default to not distract the user: the focus in a terminal window</span><br><span class="line"># should be on the output of commands, not on the prompt</span><br><span class="line">force_color_prompt=yes</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$force_color_prompt&quot; ]; then</span><br><span class="line">    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then</span><br><span class="line"># We have color support; assume it&apos;s compliant with Ecma-48</span><br><span class="line"># (ISO/IEC-6429). (Lack of such support is extremely rare, and such</span><br><span class="line"># a case would tend to support setf rather than setaf.)</span><br><span class="line">color_prompt=yes</span><br><span class="line">    else</span><br><span class="line">color_prompt=</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;$color_prompt&quot; = yes ]; then</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &apos;</span><br><span class="line">else</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &apos;</span><br><span class="line">fi</span><br><span class="line">unset color_prompt force_color_prompt</span><br><span class="line"></span><br><span class="line"># If this is an xterm set the title to user@host:dir</span><br><span class="line">case &quot;$TERM&quot; in</span><br><span class="line">xterm*|rxvt*)</span><br><span class="line">    PS1=&quot;\[\e]0;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h: \w\a\]$PS1&quot;</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"># colored GCC warnings and errors</span><br><span class="line">export GCC_COLORS=&apos;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&apos;</span><br><span class="line"></span><br><span class="line"># enable color support of ls and also add handy aliases</span><br><span class="line">if [ -x /usr/bin/dircolors ]; then</span><br><span class="line">    test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot;</span><br><span class="line">    alias ls=&apos;ls --color=auto&apos;</span><br><span class="line">    alias dir=&apos;dir --color=auto&apos;</span><br><span class="line">    alias vdir=&apos;vdir --color=auto&apos;</span><br><span class="line"></span><br><span class="line">    alias grep=&apos;grep --color=auto&apos;</span><br><span class="line">    alias fgrep=&apos;fgrep --color=auto&apos;</span><br><span class="line">    alias egrep=&apos;egrep --color=auto&apos;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># some more ls aliases</span><br><span class="line">alias ll=&apos;ls -l&apos;</span><br><span class="line">alias la=&apos;ls -A&apos;</span><br><span class="line">alias l=&apos;ls -la&apos;</span><br><span class="line"></span><br><span class="line"># Alias definitions.</span><br><span class="line"># You may want to put all your additions into a separate file like</span><br><span class="line"># ~/.bash_aliases, instead of adding them here directly.</span><br><span class="line"># See /usr/share/doc/bash-doc/examples in the bash-doc package.</span><br><span class="line"></span><br><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">    . ~/.bash_aliases</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># enable programmable completion features (you don&apos;t need to enable</span><br><span class="line"># this, if it&apos;s already enabled in /etc/bash.bashrc and /etc/profile</span><br><span class="line"># sources /etc/bash.bashrc).</span><br><span class="line">if ! shopt -oq posix; then</span><br><span class="line">  if [ -f /usr/share/bash-completion/bash_completion ]; then</span><br><span class="line">    . /usr/share/bash-completion/bash_completion</span><br><span class="line">  elif [ -f /etc/bash_completion ]; then</span><br><span class="line">    . /etc/bash_completion</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特征向量和特征值的几何本质</title>
      <link href="/ie/posts/f0765214.html"/>
      <url>/ie/posts/f0765214.html</url>
      
        <content type="html"><![CDATA[<p>子矩阵的特征值编码了原矩阵特征向量的隐藏信息。</p><p>$$ |v_i,_j|^2=\frac{\prod_{k=1}^{n-1}(λ_i(A)-λ_k(M_j))}{\prod_{k=1,k\not=i}^{n-1}(λ_i(A)-λ_k(A))}$$</p><a id="more"></a><p>$A$为$n$阶矩阵，若数$λ$和$n$维非$0$列向量$x$满足$Ax=λx$，那么数$λ$称为$A$的特征值，$x$称为$A$的对应于特征值$λ$的特征向量。</p><p>它的物理意义是：</p><p>$$一个矩阵A乘以一个向量x，$$</p><p>$$就相当于做了一个线性变换λx。$$</p><p>$$方向仍然保持不变，$$</p><p>$$只是拉伸或者压缩一定倍数λ。$$</p><p>特征向量和特征值的几何本质，其实就是：</p><p>$$空间矢量的旋转和缩放。$$</p><p><img alt="线性变换" data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191117100041.png"></p><p>线性变换 A 对于特征空间只起到“扩张(或者压缩)”的作用（扩张后还是同样的特征空间）</p><h1 id="求解特征向量"><a href="#求解特征向量" class="headerlink" title="求解特征向量"></a>求解特征向量</h1><p>按照传统解法：</p><p>计算特征多项式→求解特征值→求解齐次线性方程组，得出特征向量。</p><p>$$Ax=λx \Rightarrow Ax=λEx \Rightarrow (λE-A)x=0$$</p><p>全新的方法：</p><p>$$ |v_i,_j|^2=\frac{\prod_{k=1}^{n-1}(λ_i(A)-λ_k(M_j))}{\prod_{k=1,k\not=i}^{n-1}(λ_i(A)-λ_k(A))}$$</p><p>其中:</p><p>$v_i,_j$为特征值$λ_i$对应特征向量的第$j$个元素;</p><p>$λ_i(A)$ 为矩阵$A$的第$i$个特征向量;</p><p>$M_j$ 为矩阵$A$的第$j$个余子式,$λ_k(M_j)$是该主子式的第$k$个特征值.</p><p>通过删除原始矩阵的行和列，创建子矩阵。</p><p>子矩阵和原始矩阵的特征值组合在一起，就可以计算原始矩阵的特征向量。</p><p>简而言之，已知特征值，一个方程式就可以求得特征向量。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><span class="exturl" data-url="aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE5MDguMDM3OTU=" title="https://arxiv.org/abs/1908.03795">Eigenvectors from Eigenvalues<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE5MDcuMDI1MzQ=" title="https://arxiv.org/abs/1907.02534">Eigenvalues: the Rosetta Stone for Neutrino Oscillations in Matter<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
          <category> 线性代数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
            <tag> 线性代数 </tag>
            
            <tag> 特征向量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xrdp连接远程桌面</title>
      <link href="/ie/posts/ca7a6c92.html"/>
      <url>/ie/posts/ca7a6c92.html</url>
      
        <content type="html"><![CDATA[<p>在和远程服务器交互的过程中，除了最基础的ssh链接以外，更多人喜欢图形界面的操作，当然ssh+x11可以实现部分图形的使用，但是依然需要敲命令行，虽然看起来很酷（zhuang）炫 （bi）但是图形界面依然是很多人的习惯。所以介绍下xrdp访问远程CentOS的处理步骤</p><a id="more"></a><ol><li>安装epel库，否则无法安装xrdp</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><ol start="2"><li>安装 xrdp</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install xrdp</span><br></pre></td></tr></table></figure><ol start="3"><li>安装tigervnc-server</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install tigervnc-server</span><br></pre></td></tr></table></figure><ol start="4"><li>设置xrdp服务，开机自动启动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start xrdp</span><br><span class="line">systemctl enable xrdp</span><br></pre></td></tr></table></figure><ol start="5"><li>查看xrdp是否启动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status xrdp.service</span><br><span class="line">ss -antup|grep xrdp</span><br></pre></td></tr></table></figure><ol start="6"><li><p>启动window rdp连接</p></li><li><p>附录</p></li></ol><p>centos系统xrdp登录失败</p><p>.bashrc里面修改过PATH环境变量，添加过anaconda/bin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>最后添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> xrdp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux设置虚拟内存</title>
      <link href="/ie/posts/d53724bc.html"/>
      <url>/ie/posts/d53724bc.html</url>
      
        <content type="html"><![CDATA[<p>虚拟内存配置</p><a id="more"></a><h1 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><p>-m是显示单位为MB，-g单位GB</p><h1 id="创建一个文件"><a href="#创建一个文件" class="headerlink" title="创建一个文件"></a>创建一个文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /root/swapfile</span><br></pre></td></tr></table></figure><p>使用dd命令，来创建大小为2G的文件swapfile:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/root/swapfile bs=1M count=2048</span><br></pre></td></tr></table></figure><p>命令执行完需要等待一段时间</p><p>if表示input_file输入文件</p><p>of表示output_file输出文件</p><p>bs表示block_size块大小</p><p>count表示计数。</p><p>这里，我采用了数据块大小为1M，数据块数目为2048，这样分配的空间就是2G大小。</p><h1 id="格式化交换文件"><a href="#格式化交换文件" class="headerlink" title="格式化交换文件"></a>格式化交换文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /root/swapfile</span><br></pre></td></tr></table></figure><h1 id="启用交换文件"><a href="#启用交换文件" class="headerlink" title="启用交换文件"></a>启用交换文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /root/swapfile</span><br></pre></td></tr></table></figure><h1 id="开机自动加载虚拟内存"><a href="#开机自动加载虚拟内存" class="headerlink" title="开机自动加载虚拟内存"></a>开机自动加载虚拟内存</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure><p>在/etc/fstab文件中加入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/swapfile swap swap defaults 0 0</span><br></pre></td></tr></table></figure><h1 id="重启后生效"><a href="#重启后生效" class="headerlink" title="重启后生效"></a>重启后生效</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="删除交换分区和交换文件"><a href="#删除交换分区和交换文件" class="headerlink" title="删除交换分区和交换文件"></a>删除交换分区和交换文件</h1><p>如果要删除交换分区和交换文件，逆着上面的顺序操作:</p><p>先删除/etc/fstab文件中添加的交换文件行<br>停用交换文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff /root/swapfile</span><br></pre></td></tr></table></figure><p>删除交换文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -fr /root/swapfile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟内存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视知觉整合的认知和神经机制研究</title>
      <link href="/ie/posts/63637a24.html"/>
      <url>/ie/posts/63637a24.html</url>
      
        <content type="html"><![CDATA[<p>本文主要探讨知觉整合研究的新视角、轮廓线整合与纹理整合的神经机制以及知觉整合机制待解决的研究问题。</p><a id="more"></a><h1 id="知觉整合研究新视角"><a href="#知觉整合研究新视角" class="headerlink" title="知觉整合研究新视角"></a>知觉整合研究新视角</h1><h2 id="结构极简取向"><a href="#结构极简取向" class="headerlink" title="结构极简取向"></a>结构极简取向</h2><p>知觉整合理论研究中最有目共睹的研究成果是格式塔思想，其最核心的原则是结构最简化原则，该思想可根据结构极简原则推测出格式塔知觉组织的其他特定原则。</p><p>格式塔心理学家认为理解知觉组织原则的关键在于将视网膜图像中的所有结构识别为视觉系统所敏感的知觉结构。</p><p>所谓结构极简原则，是指视觉系统将所有可获得信息组合为最简化的表征方式。</p><p>Leeuwenberg提出了一套思想框架，视觉系统通过选择编码语言的最短表达式来描述刺激的可能组织，结构信息理论所负载的最短代码或者是最少信息即最短表达式。</p><h2 id="生态学取向"><a href="#生态学取向" class="headerlink" title="生态学取向"></a>生态学取向</h2><p>结构信息理论能够解释一些知觉组织现象，但是他不能回答的一个重要问题是，为什么视觉系统对某些特定的结构更为敏感。</p><p>为什么视觉系统对某些特定的结构敏感性有利于有机体发现外部世界的结构。</p><p>知觉整合生态学研究视角有一个普适性的基本原理：不论视觉系统通过哪种方式进行整合，确定哪些部分属于同一整体的判定，其结果更可能是对符合外部世界的真实状态的反应。</p><p>Kruer和Sigman等人发现自然场景图像共线、共圆以及平行排布的统计学规律。</p><p>相关研究发现自然场景中相邻边缘间最主要的排布方式是对齐分布。首尾相连的线段对出现的概率要远远高于边对边的线段对，而且他们在空间比例不变性维度上有质的差异。</p><h2 id="计算模型取向"><a href="#计算模型取向" class="headerlink" title="计算模型取向"></a>计算模型取向</h2><p>一般来说，计算模型至少包括两个相关的计算理论水平：宏观水平的整体框架以及微观水平的特定机制。</p><p>在宏观水平，计算理论的目标是在各种结构类型中找出最适合用于计算观察者所看到结构的整体框架，从而服务于知觉整合分析。</p><p>在微观层面，计算理论主要聚焦于具体的计算元素以及元素间的相互关系。与知觉整合相关的一个计算模型来自于环路循环连接网络：一个类似神经元元素组成的前馈和反馈连接的构型。</p><p>有研究者进一步推测，大脑的物理格式塔是基于分布在皮层中的动态电磁场。</p><p>所谓对称环路循环网络，是指网络中任意单位对之间的双向连接方向都有相同的权重。该网络总会收敛到均衡状态，使得信息约束满足各向同性至物理最小能量。</p><h2 id="神经机制研究取向"><a href="#神经机制研究取向" class="headerlink" title="神经机制研究取向"></a>神经机制研究取向</h2><p>知觉整合神经机制研究的目标是探究促使知觉整合发生的实际神经活动的本质。</p><p>以往关于初级视皮层简单神经元本质的研究说明功能和生理学研究相互依赖的最好例子。Hubel和Wiesel在对猫的研究中发现外侧膝状体和初级视皮层中的单个神经元对简单的刺激属性（如朝向、运动方向等）具有选择性反应，他们将此解释为“特征探测器”（如线条、边缘探测器）。</p><p>当研究者在经典感受野内呈现偏好朝向的随机运动点模式时，他们发现神经元反应与运动方向的倒U关系（最优朝向反应最强，随着与最优朝向顺时针或逆时针偏转越来越大时，神经元反应越来越小）。</p><p>结果表明神经元不仅仅对其感受野内的基本刺激属性有反应，单个神经元活动会受到周围神经元的影响，提示着神经元还表征格式塔的相关属性。</p><h1 id="轮廓线整合的神经机制"><a href="#轮廓线整合的神经机制" class="headerlink" title="轮廓线整合的神经机制"></a>轮廓线整合的神经机制</h1><p>研究者发现初级视皮层中的神经元不仅受到经典感受野内刺激的影响，还受到感受野外刺激的影响，单个神经元的活动会受到神经元之间相互作用的调节。虽然感受野外的线段本身不会诱发神经元的反应，但是当感受野外的线段与感受野内线段成共线关系时，神经元的反应会增强，而且感受野外线段数量越多，其发放强度越大。</p><p>Field等人根据其系列结果提出了“联合野”概念，他们的理论认为具有相似朝向选择性的神经元之间会具有选择性的相互作用，当这些神经元的排布方式违反这种规则时，这种促进和抑制的链接使得大脑完成对轮廓线信息的编码。</p><p>视觉系统在长期的进化发展过程中受到环境的交互影响，外界环境优化了视觉系统对环境中具有最高统计概率的刺激或刺激模式的反应机制。</p><p>研究者提出轮廓整合的神经实现基础是通过初级视皮层神经元间长距离兴奋性连接网络组成的“联合野”所实现的，然而最新的研究认为实现“联合野”还可能需要来自高级皮层自上而下对初级皮层的反馈作用。</p><h1 id="纹理整合的神经机制"><a href="#纹理整合的神经机制" class="headerlink" title="纹理整合的神经机制"></a>纹理整合的神经机制</h1><p>神经元感受野中的纹理朝向与外周非经典感受野内的纹理朝向成正交关系时，会使得具有朝向信息的纹理边界线被“朝向对抗”神经元探测到。</p><p>目前“朝向对抗”神经元还没有被证实。</p><p>研究提示，各层级视皮层的前馈和水平投射可以对感受野内进行中心-外周比较，从而使得早期视皮层实现对较小空间范围内的同向抑制，较高级视皮层实现对较大空间范围内的同向抑制；反馈连接则将较高级皮层的区域填充信号反馈传回到低级视皮层实现同向兴奋。</p><p>研究者在多分层的层级视觉框架中通过多个空间尺度的特征地图架构了纹理分隔计算模型，实现了对纹理分隔任务的加工。</p><p>关于图形背景分割两阶段理论：该理论提出的第一个阶段是边界探测，纹理定义的边界线首先由具有相似偏好神经元间的相互抑制机制所探测到，该理论得到了实验证据的支持，研究者发现初级和较高级视皮质表层的神经元在很短时间内对图形边界的反应更强。第二个阶段是区域填充，该模型的区域填充过程始于存在于视觉系统多个空间尺度中的特征探测器，然后这些神经元会将信号反馈回早期视皮层的神经元，区域填充的结果是初级视皮层以活动增强的方式表征图像区域。研究者提出通过NMDA受体以及存在反馈链接并投射到第1层和第5层深层和表层神经元的树突共同作用实现将调制信号限制在激活强度最大的神经元群体，即图像表征区域。通过两种机制的共同作用，视觉系统通过对图形增强背景抑制的编码模式实现对图形背景的分割，从而实现对图形的知觉以及准确完成行为任务。</p><h1 id="知觉整合机制待解决的研究问题"><a href="#知觉整合机制待解决的研究问题" class="headerlink" title="知觉整合机制待解决的研究问题"></a>知觉整合机制待解决的研究问题</h1><h2 id="视知觉整合的加工时程"><a href="#视知觉整合的加工时程" class="headerlink" title="视知觉整合的加工时程"></a>视知觉整合的加工时程</h2><h2 id="视知觉整合与注意"><a href="#视知觉整合与注意" class="headerlink" title="视知觉整合与注意"></a>视知觉整合与注意</h2><p>麻醉情况下的无意识状态不能进行轮廓整合</p><h2 id="自下而上与自上而下"><a href="#自下而上与自上而下" class="headerlink" title="自下而上与自上而下"></a>自下而上与自上而下</h2><p>初级视皮层是否表征轮廓信息受限于知觉学习状态，只有当轮廓任务被学习之后，初级视皮层才能表征轮廓信息。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视知觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视知觉整合</title>
      <link href="/ie/posts/4c2deb5e.html"/>
      <url>/ie/posts/4c2deb5e.html</url>
      
        <content type="html"><![CDATA[<p>为了满足生存和生活的需要，人类需随时对外界环境中的客体信息进行高效地识别并与之产生交互。然而，由于视觉系统的固有组织属性，视觉系统必须提供一个强有力的机制快速地从海量的碎片式信息中准确识别出目标客体，这是视觉系统面临的一大挑战。</p><a id="more"></a><p>视知觉整合（visual perceptual grouping）是指视觉系统将场景中属于同一客体或模式的离散元素组合并与其他客体或模式及背景区分的过程。</p><p>视知觉整合通常被认为是低级感觉加工和高级知觉加工（如客体、场景或事件加工等）间的功能桥梁。</p><h1 id="视知觉整合与知觉组织"><a href="#视知觉整合与知觉组织" class="headerlink" title="视知觉整合与知觉组织"></a>视知觉整合与知觉组织</h1><p>当视网膜上的信息经由外侧膝状体首次进入初级视觉皮层时，神经元群组会对落在其感受野内的局部信号进行表征，如客体的轮廓线、纹理，在大多数情况下，同一个客体的不同部分会由具有不同调谐属性的神经元来表征。这是由于初级视觉皮层单个神经元的感受野很小且仅编码特定特征，当客体的大小大于单个神经元的感受野范围时，同一个客体的不同部分会由不同神经元来表征。比如，同一个客体的轮廓线会以线段的方式在具有不同朝向调谐属性的神经元来表征。</p><p>理论上这会严重破坏视觉信息的完整性，但事实上人们始终能知觉到排列有序的不同客体和背景信息，而不是一堆没有组织结构的局部信息的集合。</p><p>在这个过程中，视觉系统所面临的第一个挑战是，人们如何将属于同一个客体的元素从嘈杂的背景中提取整合并与其他客体及背景信息区分开来，即大脑如何完成知觉整合过程。</p><p>知觉整合对客体识别及其与环境交互都很重要。视觉系统的内在结构属性使得外界信息始于碎片式表征，然而我们最终知觉到的是排布有序的外部世界。</p><p>研究表明灵长类动物在刺激出现后150ms内即可识别出自然场景中的客体，一种观点认为这是因为视觉系统具有一套强有力的机制能高效完成整合。</p><p>视觉系统面临的最首要的知觉组织问题是判断视网膜上的哪些色块或者亮度块集合属于同一个或同一群客体。</p><p>在视觉系统加工的过程中，视觉系统首先需要将输入的离散信号准确地组织为后续信息加工的整体单元，即知觉组织加工。知觉组织是后续客体识别、注意分配等高级加工的基础。</p><h1 id="研究历史"><a href="#研究历史" class="headerlink" title="研究历史"></a>研究历史</h1><p>1923年，韦德海默提出了知觉组织和知觉整合问题，试图阐述清楚知觉组织最根本的定律。最具有普世性的核心定律是所谓的极简定律，即大脑具有看见最简单形状的倾向。</p><p>20世纪五六十年代，视觉科学有了革命性的发展，尤其是单细胞电生理记录技术和计算模型的发展。Hubel和Wiesel等人发现初级视皮层的神经元对基本视觉特征（如特定方向的边缘）具有选择性反应。</p><p>Campbell等人使用线性系统方法对视觉加工过程进行建模并取得了很大进展。</p><p>当代知觉组织研究还发展出了新的间接测量方法，并从实验心理学中借鉴了标准的测量范式，在测量指标上，借鉴了心理物理学的阈值和无偏差反应指标等。</p><h1 id="当代视知觉整合研究进展"><a href="#当代视知觉整合研究进展" class="headerlink" title="当代视知觉整合研究进展"></a>当代视知觉整合研究进展</h1><h2 id="共同区域律"><a href="#共同区域律" class="headerlink" title="共同区域律"></a>共同区域律</h2><p>共同区域律是指观察者会倾向于将同一个边界范围内的元素知觉为整体。</p><p>具体来说，当离散元素处于同一个连续同质的颜色或纹理空间区域内，或处于同一个边界线内，这些离散元素会基于共同区域进行整合，从而被知觉为整体。</p><p>如果两个元素都处于同一个图像区域内，那么同偶然出现在一个空间区域内的元素相比，这两个元素属于同一个客体的概率更高。</p><h2 id="元素连通律"><a href="#元素连通律" class="headerlink" title="元素连通律"></a>元素连通律</h2><p>当两个元素间存在第三个元素将其联通时，观察者会倾向于将这两个元素知觉为整体，即所谓的元素连通律。</p><h2 id="同步律"><a href="#同步律" class="headerlink" title="同步律"></a>同步律</h2><p>亮度或运动方向的共同性会诱发整合。</p><p>研究还发现即便元素运动方向不相关，元素间也能根据他们在出现时间上的同步性进行整合。</p><p>同步律是新的整合原则，不能被已知的视觉机制所解释，并存在争议。</p><h1 id="当代知觉整合范式的研究进展"><a href="#当代知觉整合范式的研究进展" class="headerlink" title="当代知觉整合范式的研究进展"></a>当代知觉整合范式的研究进展</h1><p>早期知觉整合研究通过简单图片分别研究整合的关键因素，然而日常生活中的视觉场景并不是如此简单。</p><p>外部世界的典型视觉场景投影在视网膜形成二维图像，该图像由不同的亮度、颜色、形状、纹理等大量图形元素组成。其中边界线为客体的二维和三维形状提供了至关重要的信息。对于连通的没有受遮挡的客体来说，客体的边缘线在视网膜上投射为简单的闭合曲线，该曲线本身即足以形成完整的二维至三维形状知觉。</p><p>然而，视觉场景中经常存在遮挡，或存在客体与背景的亮度或颜色对比度低等情况，导致投射在视网膜上的轮廓线线段就已经变得碎片化了，而且因为视觉系统自身的固有结构属性，这种零碎的信息在大脑中呈碎片化表征。为完成识别，视觉系统需将轮廓线线段进行整合。此外，作为替代方案，区域整合也为也为客体识别提供了重要的线索，即视觉系统将轮廓线内部的刺激信息根据相似性原则进行整合。</p><p>不论是轮廓边界线还是区块纹理，信息首先进入初级视觉皮层都是碎片化式的表征，那么视觉系统面临的一个根本的重要任务是如何将这些信息重组成我们所感知到的排列有序的客体知觉。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视知觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银行家算法</title>
      <link href="/ie/posts/3bfd1783.html"/>
      <url>/ie/posts/3bfd1783.html</url>
      
        <content type="html"><![CDATA[<p>银行家算法（Banker’s Algorithm）是一个避免死锁（Deadlock）的著名算法，是由艾兹格·迪杰斯特拉在1965年为T.H.E系统设计的一种避免死锁产生的算法。它以银行借贷系统的分配策略为基础，判断并保证系统的安全运行。</p><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在银行中，客户申请贷款的数量是有限的，每个客户在第一次申请贷款时要声明完成该项目所需的最大资金量，在满足所有贷款要求时，客户应及时归还。银行家在客户申请的贷款数量不超过自己拥有的最大值时，都应尽量满足客户的需要。在这样的描述中，银行家就好比操作系统，资金就是资源，客户就相当于要申请资源的进程。</p><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     Allocation　　　Max　　　Available</span><br><span class="line">　　 ＡＢＣＤ　　  ＡＢＣＤ　　ＡＢＣＤ</span><br><span class="line">P1   ００１４　　  ０６５６　　１５２０　</span><br><span class="line">P2　 １４３２　　  １９４２　</span><br><span class="line">P3　 １３５４　  　１３５６</span><br><span class="line">P4 　１０００　　  １７５０</span><br></pre></td></tr></table></figure><p>我们会看到一个资源分配表，要判断是否为安全状态，首先先找出它的Need，Need即Max(最多需要多少资源)减去Allocation(原本已经分配出去的资源)，计算结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  NEED</span><br><span class="line">ＡＢＣＤ</span><br><span class="line">０６４２　</span><br><span class="line">０５１０</span><br><span class="line">０００２</span><br><span class="line">０７５０</span><br></pre></td></tr></table></figure><p>然后加一个全都为false的字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FINISH</span><br><span class="line">false</span><br><span class="line">false</span><br><span class="line">false</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p>接下来找出need比available小的(千万不能把它当成4位数 他是4个不同的数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  NEED　　  Available</span><br><span class="line">ＡＢＣＤ　　ＡＢＣＤ</span><br><span class="line">０６４２　　１５２０</span><br><span class="line">０５１０&lt;-</span><br><span class="line">０００２</span><br><span class="line">０７５０</span><br></pre></td></tr></table></figure><p>P2的需求小于能用的，所以配置给他再回收</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> NEED　　   Available</span><br><span class="line">ＡＢＣＤ　　ＡＢＣＤ</span><br><span class="line">０６４２　　１５２０</span><br><span class="line">００００　＋１４３２</span><br><span class="line">０００２－－－－－－－</span><br><span class="line">０７５０　　２９５２</span><br></pre></td></tr></table></figure><p>此时P2 FINISH的false要改成true(己完成)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FINISH</span><br><span class="line">false</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p>接下来继续往下找，发现P3的需求为0002，小于能用的2952，所以资源配置给他再回收</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">　NEED　　    Available</span><br><span class="line">ＡＢＣＤ　　Ａ　Ｂ　Ｃ　Ｄ</span><br><span class="line">０６４２　　２　９　５　２</span><br><span class="line">００００　＋１　３　５　４</span><br><span class="line">００００－－－－－－－－－－</span><br><span class="line">０７５０　　３　12　10　6</span><br></pre></td></tr></table></figure><p>依此类推，做完P4→P1，当全部的FINISH都变成true时，就是安全状态。</p><h1 id="安全和不安全的状态"><a href="#安全和不安全的状态" class="headerlink" title="安全和不安全的状态"></a>安全和不安全的状态</h1><p>如果所有过程有可能完成执行（终止），则一个状态（如上述范例）被认为是安全的。由于系统无法知道什么时候一个过程将终止，或者之后它需要多少资源，系统假定所有进程将最终试图获取其声明的最大资源并在不久之后终止。在大多数情况下，这是一个合理的假设，因为系统不是特别关注每个进程运行了多久（至少不是从避免死锁的角度）。此外，如果一个进程终止前没有获取其它能获取的最多的资源，它只是让系统更容易处理。</p><p>基于这一假设，该算法通过尝试寻找允许每个进程获得的最大资源并结束（把资源返还给系统）的进程请求的一个理想集合，来决定一个状态是否是安全的。不存在这个集合的状态都是不安全的。</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时备份服务器/网站数据到Github私人仓库</title>
      <link href="/ie/posts/32ffa341.html"/>
      <url>/ie/posts/32ffa341.html</url>
      
        <content type="html"><![CDATA[<p>现在Github被微软收购后，私人仓库已经开始免费了，然后就可以拿来折腾下了，让其充分发挥下作用，这里我们可以用来备份下网站或者服务器一些数据。</p><a id="more"></a><h1 id="配置Git-SSH密钥"><a href="#配置Git-SSH密钥" class="headerlink" title="配置Git SSH密钥"></a>配置Git SSH密钥</h1><p>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以必须要让github仓库认证你SSH key，在操作之前，需要先在服务器上生成SSH key。</p><p>我们先去根目录下使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>这里会要你命名密匙名称(这里建议使用默认名称)，然后连续按几次Enter，这时候会在/root/.ssh文件夹生成2个ssh密钥，然后我们查看公钥id_rsa.pub。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>查看后，再复制下公钥，然后打开Github官网，进入 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaC9uZXc=" title="https://github.com/settings/ssh/new">https://github.com/settings/ssh/new<i class="fa fa-external-link"></i></span> ，Title随便填，然后Key填入刚刚复制的密匙，最后点击Add SSH Key添加即可。</p><h1 id="建立私人仓库"><a href="#建立私人仓库" class="headerlink" title="建立私人仓库"></a>建立私人仓库</h1><p>我们需要先访问 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldw==" title="https://github.com/new">https://github.com/new<i class="fa fa-external-link"></i></span> ，新建一个仓库用来存放备份文件，名称自己随意，记得下面一定要勾选Private，也就是私人仓库。</p><h1 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h1><p>由于博主是用来备份网站，所以需要备份文件夹为网站根目录/alidata/，也就是把该文件夹定为本地仓库，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#进入需要备份的文件夹</span><br><span class="line">cd /alidata/</span><br><span class="line">#安装git</span><br><span class="line">yum install git</span><br><span class="line">#初始化你的github仓库</span><br><span class="line">git init</span><br><span class="line">#关联到远程github仓库</span><br><span class="line">git remote add origin git@github.com:MHuiG/BackupWebSite.git</span><br></pre></td></tr></table></figure><p>关联仓库的时候，后面可以用HTTPS链接也可以用SSH，这里强烈建议选择SSH，安全性很高。</p><h1 id="初次备份"><a href="#初次备份" class="headerlink" title="初次备份"></a>初次备份</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#进入备份的文件夹</span><br><span class="line">cd /alidata/</span><br><span class="line">#忽略大于50.00 MB文件</span><br><span class="line">find . -size +50M&gt;.gitignore</span><br><span class="line">sed -i &apos;s/.//&apos; .gitignore</span><br><span class="line">#把目录下所有文件更改状况提交到暂存区，包括增，删，改。</span><br><span class="line">git add -A</span><br><span class="line">#提交更改的说明，说明随意了，这里为BackupWebSite</span><br><span class="line">git commit -m &quot;BackupWebSite&quot;</span><br><span class="line">#开始推送到Github</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>推送的时候可能会提示The authenticity of host ‘github.com’ can’t be established.信息，直进yes即可。<br>然后可以看到仓库的备份文件了。</p><h1 id="设置定时备份"><a href="#设置定时备份" class="headerlink" title="设置定时备份"></a>设置定时备份</h1><p>在根目录先新建一个bash脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/gitback.sh</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#进入到网站根目录，记得修改为自己的站点</span></span><br><span class="line"><span class="built_in">cd</span> /alidata/</span><br><span class="line"><span class="comment">#将数据库导入到该目录，这里以mysql为例，passwd为数据库密码，all.sql为备份的数据库文件</span></span><br><span class="line">mysqldump -uroot -ppasswd --events --all-databases&gt;all.sql</span><br><span class="line"><span class="comment">#忽略大于50.00 MB文件</span></span><br><span class="line">find . -size +50M&gt;.gitignore</span><br><span class="line">sed -i <span class="string">'s/.//'</span> .gitignore</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"BackupWebSite"</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>然后编辑好了后，使用ctrl+x，y保存退出。再测试下脚本，使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ~/gitback.sh</span><br></pre></td></tr></table></figure><p>脚本没问题的话，再设置为每天05:15执行一次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#并将运行日志输出到根目录的siteback.log文件</span><br><span class="line">echo &quot;15 05 * * * bash ~/gitback.sh &gt; ~/siteback.log 2&gt;&amp;1 &amp;&quot; &gt; bt.cron</span><br><span class="line">crontab bt.cron</span><br><span class="line">rm -rf bt.cron</span><br></pre></td></tr></table></figure><p>最后使用命令查看添加成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="crontab定时任务中提示command-not-found解决方案"><a href="#crontab定时任务中提示command-not-found解决方案" class="headerlink" title="crontab定时任务中提示command not found解决方案"></a>crontab定时任务中提示command not found解决方案</h2><p>写了个脚本定时从MySQL中提取数据，但是crontab发邮件提示mysql command not found</p><p>很奇怪，因为直接执行此脚本不会报错，正常运行，但加入到crontab中就会报错，</p><p>经查，MySQL不在crontab执行的环境变量中</p><p>解决方案：</p><pre><code>找到MySQL的安装路径： which mysql   假设找到的是:/home/user1/mysql/bin/mysql建立软连接  cd /usr/bin &amp;&amp; ln -fs /home/user1/mysql/bin/mysql mysql</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU调度</title>
      <link href="/ie/posts/be57c430.html"/>
      <url>/ie/posts/be57c430.html</url>
      
        <content type="html"><![CDATA[<p>CPU调度</p><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="CPU－I-O区间周期"><a href="#CPU－I-O区间周期" class="headerlink" title="CPU－I/O区间周期"></a>CPU－I/O区间周期</h2><p>进程执行由CPU和I／O等待周期组成。进程在这两个状态之间切换。</p><h2 id="CPU调度程序"><a href="#CPU调度程序" class="headerlink" title="CPU调度程序"></a>CPU调度程序</h2><p>所谓CPU调度程序，其实就是：当CPU空闲时，操作系统如何从就绪队列中选择一个进程来执行的策略。</p><h2 id="抢占调度"><a href="#抢占调度" class="headerlink" title="抢占调度"></a>抢占调度</h2><ul><li><p>非抢占调度，一旦CPU分配给一个进程，那么该进程会一直使用CPU直到进程终止或切换到等待状态。</p></li><li><p>抢占调度，可能一个进程正在运行时，另一个新的进程也到来。而依据调度策略与当前各进程状态，新进程应该先执行。那么，新进程会抢占CPU进行执行，原进程切换到就绪状态。</p></li></ul><h2 id="分派程序"><a href="#分派程序" class="headerlink" title="分派程序"></a>分派程序</h2><p>分派程序是一个模块，用来将CPU的控制交给由短期调度程序选择的进程。 功能包括：</p><ul><li>切换上下文</li><li>切换到用户模式</li><li>跳转到用户程序的合适位置，以重新启动程序</li></ul><h2 id="调度准则"><a href="#调度准则" class="headerlink" title="调度准则"></a>调度准则</h2><ul><li>CPU使用率</li><li>吞吐量：一个时间单元内所完成进程的数量</li><li>周转时间：从进程提交到进程完成的时间段称为周转时间。</li><li>等待时间：为在就绪队列中等待所花费时间之和</li><li>响应时间：开始响应所需要的时间，响应时间指从进程提交到被运行第一段代码的时间</li></ul><h1 id="调度算法"><a href="#调度算法" class="headerlink" title="调度算法"></a>调度算法</h1><h2 id="1-先到先服务调度（FCFS）"><a href="#1-先到先服务调度（FCFS）" class="headerlink" title="1.先到先服务调度（FCFS）"></a>1.先到先服务调度（FCFS）</h2><p>非抢占。 补充概念：护航效果：所有其他进程等待一个大进程释放CPU的状态</p><h2 id="2-最短作业优先调度（SJF）"><a href="#2-最短作业优先调度（SJF）" class="headerlink" title="2.最短作业优先调度（SJF）"></a>2.最短作业优先调度（SJF）</h2><p>这一算法将每个进程与其下一个CPU区间段相关联。当CPU为空闲时，它会赋给具有最短CPU区间的进程。 如果两个进程具有同样长度，那可以使用FCFS调度来处理。</p><p>SJF调度算法的平均等待时间最小。</p><p>SJF的难点就是如何得知下一个CPU区间的长度。书上采用，预测下一个CPU区间为以前CPU区间的测量长度的指数平均。</p><p>T（n＋1）＝åt（n）＋（1-å）T（n）</p><p>抢占SJF调度：最短剩余时间优先调度 也存在非抢占SJF</p><h2 id="3-优先级调度"><a href="#3-优先级调度" class="headerlink" title="3.优先级调度"></a>3.优先级调度</h2><p>SJF可作为通用优先级调度算法的一个特例</p><p>（书上默认）优先级越高，数值越小 即 优先级1比优先级2的优先级要高 优先级调度可以是抢占的或者非抢占的。</p><p>主要问题：无穷阻塞或饥饿＝》它可能会导致某个低优先级进程无线等待CPU</p><p>解决：使用老化技术，以逐渐增加在系统中等待很长时间的进程的优先级</p><h2 id="4-轮转法调度（RR）"><a href="#4-轮转法调度（RR）" class="headerlink" title="4.轮转法调度（RR）"></a>4.轮转法调度（RR）</h2><p>定义一个较小时间单元，称为时间片。</p><p>将就绪队列保存为进程的FIFO队列。新进程增加到就绪队列的尾部。CPU调度程序就从就绪队列中选择第一个进程，设置定时器在一个时间片之后中断，再分排该进程。（1进程在时间片中运行完，进程自动释放CPU，下一个进程开始执行 2.进程未在时间片内执行完，定时器产生中断并产生操作系统中断，然后进行上下文切换，将进程加入到就绪队列的尾部，就绪队列中下一个进程开始执行）</p><p>该策略的平均等待时间通常较长 具体效率和时间片大小有关 适合分时（交互系统）</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133057.jpg"></p><h2 id="5-多级队列调度"><a href="#5-多级队列调度" class="headerlink" title="5.多级队列调度"></a>5.多级队列调度</h2><p>将就绪队列分成多个独立队列，每个队列有自己的调度算法，每个队列有自己的优先级</p><h2 id="6-多级反馈队列调度"><a href="#6-多级反馈队列调度" class="headerlink" title="6.多级反馈队列调度"></a>6.多级反馈队列调度</h2><p>在上面的基础上，允许等待时间过长的进程转移到更高优先级的队列</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 进程调度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程同步之信号量机制</title>
      <link href="/ie/posts/2ffcda9a.html"/>
      <url>/ie/posts/2ffcda9a.html</url>
      
        <content type="html"><![CDATA[<p>信号量（semaphore）的数据结构为一个值和一个指针，指针指向等待该信号量的下一个进程。信号量的值与相应资源的使用情况有关。</p><a id="more"></a><h1 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h1><p>信号量机制即利用pv操作来对信号量进行处理。</p><p>什么是信号量？信号量（semaphore）的数据结构为一个值和一个指针，指针指向等待该信号量的下一个进程。信号量的值与相应资源的使用情况有关。</p><p>当它的值大于0时，表示当前可用资源的数量；</p><p>当它的值小于0时，其绝对值表示等待使用该资源的进程个数。</p><p>注意，信号量的值仅能由PV操作来改变。</p><p>一般来说，信号量S$\ge$0时，S表示可用资源的数量。执行一次P操作意味着请求分配一个单位资源，因此S的值减1；当S&lt;0时，表示已经没有可用资源，请求者必须等待别的进程释放该类资源，它才能运行下去。而执行一个V操作意味着释放一个单位资源，因此S的值加1；若S£0，表示有某些进程正在等待该资源，因此要唤醒一个等待状态的进程，使之运行下去。</p><h1 id="经典伪代码"><a href="#经典伪代码" class="headerlink" title="经典伪代码"></a>经典伪代码</h1><p>p操作（wait）：申请一个单位资源，进程进入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wait(semaphore *S)&#123;</span><br><span class="line">  S-&gt;value--;</span><br><span class="line">  <span class="keyword">if</span>(S-&gt;value&lt;<span class="number">0</span>) block(S-&gt;<span class="built_in">list</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>v操作（signal）：释放一个单位资源，进程出来</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">signal(semaphore *S)&#123;</span><br><span class="line">S-&gt;value++;</span><br><span class="line">  <span class="keyword">if</span>(S-&gt;value&lt;=<span class="number">0</span>) wakeup(S-&gt;<span class="built_in">list</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="综合训练专题"><a href="#综合训练专题" class="headerlink" title="综合训练专题"></a>综合训练专题</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/OS/综合训练专题一进程同步.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 进程同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建Https证书</title>
      <link href="/ie/posts/5bb73de.html"/>
      <url>/ie/posts/5bb73de.html</url>
      
        <content type="html"><![CDATA[<p>生成nginx的证书与配置chrome安全告警的问题</p><a id="more"></a><h1 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h1><h1 id="生成根证书"><a href="#生成根证书" class="headerlink" title="生成根证书"></a>生成根证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days 1461 -newkey rsa:2048 -subj &quot;/C=CN/ST=MyProvince/L=MyCity/O=MyOrganization&quot; -keyout CA-private.key -out CA-certificate.crt -reqexts v3_req -extensions v3_ca</span><br></pre></td></tr></table></figure><h1 id="生成私钥"><a href="#生成私钥" class="headerlink" title="生成私钥"></a>生成私钥</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out private.key 2048</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key private.key -subj &quot;/C=CN/ST=MyProvince/L=MyCity/O=MyOrganization/CN=xxx.xxx.xxx.xxx&quot; -sha256 -out private.csr</span><br></pre></td></tr></table></figure><h1 id="解决-Chrome-安全警告"><a href="#解决-Chrome-安全警告" class="headerlink" title="解决 Chrome 安全警告"></a>解决 Chrome 安全警告</h1><p>按照上面的流程，需要注意的是，在默认情况下生成的证书一旦选择信任，在 Edge, Firefox 等浏览器都显示为安全，但是 Chrome 仍然会标记为不安全并警告拦截，这是因为 Chrome 需要证书支持扩展 Subject Alternative Name, 因此生成时需要特别指定 SAN 扩展并添加相关参数。<br>SAN Extension 所需配置文件关键属性：</p><p>req_distinguished_name: 一节的内容与上面 -subj 一样都是证书的附加信息<br>subjectAltName: 是最关键的属性，取值有两种情况，除前缀外值应与上一步 -subj 中指定的 CN 参数值相同：<br>如果是为某一域名签发证书，则其值可为 DNS:<span class="exturl" data-url="aHR0cDovL3d3dy5leGFtcGxlLmNvbQ==" title="http://www.example.com">www.example.com<i class="fa fa-external-link"></i></span> 或者使用通配符 DNS:*.example.com；<br>如果为 IP 地址颁发证书，则应该使用 IP:xxx.xxx.xxx.xxx 的形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[ req ]</span><br><span class="line">default_bits        = 2048</span><br><span class="line">distinguished_name  = req_distinguished_name</span><br><span class="line">req_extensions      = san</span><br><span class="line">extensions          = san</span><br><span class="line">[ req_distinguished_name ]</span><br><span class="line">countryName         = CN</span><br><span class="line">stateOrProvinceName = MyProvince</span><br><span class="line">localityName        = MyCity</span><br><span class="line">organizationName    = MyOrganization</span><br><span class="line">[SAN]</span><br><span class="line">authorityKeyIdentifier=keyid,issuer</span><br><span class="line">basicConstraints=CA:FALSE</span><br><span class="line">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span><br><span class="line">subjectAltName = IP:xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><h1 id="将上述内容放到一个文件中-命名为private-ext执行命令-生成证书"><a href="#将上述内容放到一个文件中-命名为private-ext执行命令-生成证书" class="headerlink" title="将上述内容放到一个文件中,命名为private.ext执行命令,生成证书"></a>将上述内容放到一个文件中,命名为private.ext执行命令,生成证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 1461 -in private.csr -CA CA-certificate.crt -CAkey CA-private.key -CAcreateserial -sha256 -out private.crt -extfile private.ext -extensions SAN</span><br></pre></td></tr></table></figure><p>nginx中配置如下:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line">    <span class="attribute">ssl</span>                  <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span>      /alidata/ssl/private.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  /alidata/ssl/private.key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用证书"><a href="#使用证书" class="headerlink" title="使用证书"></a>使用证书</h1><p>生成的具体域名证书和私钥可在 nginx 中使用，然后再客户端所在电脑导入根证书：</p><p>Windows 需要添加根证书至 受信任的根证书颁发机构<br>macOS 将其导入 钥匙串访问 并选择信任<br>另外 Windows 快捷安装根证书脚本如下(需要管理员权限)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -addstore -f -enterprise -user root &quot;.\CA-certificate.crt&quot;</span><br></pre></td></tr></table></figure><p>在window或者mac上安装private.crt文件后，nginx上页面或者接口就可以正常访问了。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置</title>
      <link href="/ie/posts/ad720447.html"/>
      <url>/ie/posts/ad720447.html</url>
      
        <content type="html"><![CDATA[<p>Nginx 基础配置 安全性配置</p><a id="more"></a><h1 id="Nginx配置error-page-404-500等自定义的错误页面"><a href="#Nginx配置error-page-404-500等自定义的错误页面" class="headerlink" title="Nginx配置error_page 404 500等自定义的错误页面"></a>Nginx配置error_page 404 500等自定义的错误页面</h1><ul><li><p>1.创建自己的404.html页面</p></li><li><p>2.更改nginx.conf在http定义区域加入：</p></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>3.更改nginx.conf(或单独网站配置文件)中在server 区域加入：</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">400</span> <span class="number">401</span> <span class="number">402</span> <span class="number">403</span> <span class="number">404</span> <span class="number">405</span> <span class="number">408</span> <span class="number">410</span> <span class="number">412</span> <span class="number">413</span> <span class="number">414</span> <span class="number">415</span> <span class="number">500</span> <span class="number">501</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> <span class="number">506</span> /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">        <span class="attribute">root</span> /alidata/www/phpwind/error;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>4.更改后重启nginx,测试nginx.conf正确性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure></li><li><p>5.502 等错误可以用同样的方法来配置。</p></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">error_page</span>  <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span> /alidata/www/phpwind/error;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Nginx隐藏版本号的安全性与方法"><a href="#Nginx隐藏版本号的安全性与方法" class="headerlink" title="Nginx隐藏版本号的安全性与方法"></a>Nginx隐藏版本号的安全性与方法</h1><p>隐藏原因：Nginx某些版本有漏洞，暴露出来容易被攻击者利用，隐藏起来更安全</p><h2 id="隐藏版本号"><a href="#隐藏版本号" class="headerlink" title="隐藏版本号"></a>隐藏版本号</h2><p>nginx.conf中去掉下面注释，或者添加这一行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是转发给php－fpm ，需要编辑fastcgi.conf，一般在nginx.conf 同层<br>找到：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastcgi_param</span> SERVER_SOFTWARE nginx/<span class="variable">$nginx_version</span>;</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastcgi_param</span> SERVER_SOFTWARE nginx;</span><br></pre></td></tr></table></figure><h2 id="编译源码返回自定义的server"><a href="#编译源码返回自定义的server" class="headerlink" title="编译源码返回自定义的server"></a>编译源码返回自定义的server</h2><p>修改src/http/ngx_http_header_filter_module.c 中的48行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> ngx_http_server_string[] = <span class="string">"Server: nginx"</span> CRLF;</span><br></pre></td></tr></table></figure><p>把其中的nginx改为我们自己想要的文字即可，笔者就改为了GFW.</p><p>修改src/core/nginx.h 定位到13-14行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nginx_version      2000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VERSION      <span class="meta-string">"2.0"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER          <span class="meta-string">"GFW/"</span> NGINX_VERSION</span></span><br></pre></td></tr></table></figure><p>Server返回的就是常量NGINX_VER</p><p>重新编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="控制缓冲区溢出攻击"><a href="#控制缓冲区溢出攻击" class="headerlink" title="控制缓冲区溢出攻击"></a>控制缓冲区溢出攻击</h1><p>编辑nginx.conf，为所有客户端设置缓冲区的大小限制。</p><p>编辑和设置所有客户端缓冲区的大小限制如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">## Start: Size Limits &amp; Buffer Overflows ##</span></span><br><span class="line">  <span class="attribute">client_body_buffer_size</span>  <span class="number">1K</span>;</span><br><span class="line">  <span class="attribute">client_header_buffer_size</span> <span class="number">1k</span>;</span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">1k</span>;</span><br><span class="line">  <span class="attribute">large_client_header_buffers</span> <span class="number">2</span> <span class="number">1k</span>;</span><br><span class="line"><span class="comment">## END: Size Limits &amp; Buffer Overflows ##</span></span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><p>1、client_body_buffer_size 1k-（默认8k或16k）这个指令可以指定连接请求实体的缓冲区大小。如果连接请求超过缓存区指定的值，那么这些请求实体的整体或部分将尝试写入一个临时文件。</p></li><li><p>2、client_header_buffer_size 1k-指令指定客户端请求头部的缓冲区大小。绝大多数情况下一个请求头不会大于1k，不过如果有来自于wap客户端的较大的cookie它可能会大于1k，Nginx将分配给它一个更大的缓冲区，这个值可以在large_client_header_buffers里面设置。</p></li><li><p>3、client_max_body_size 1k-指令指定允许客户端连接的最大请求实体大小，它出现在请求头部的Content-Length字段。<br>如果请求大于指定的值，客户端将收到一个”Request Entity Too Large” (413)错误。记住，浏览器并不知道怎样显示这个错误。</p></li><li><p>4、large_client_header_buffers-指定客户端一些比较大的请求头使用的缓冲区数量和大小。请求字段不能大于一个缓冲区大小，如果客户端发送一个比较大的头，nginx将返回”Request URI too large” (414)</p><p>同样，请求的头部最长字段不能大于一个缓冲区，否则服务器将返回”Bad request” (400)。缓冲区只在需求时分开。默认一个缓冲区大小为操作系统中分页文件大小，通常是4k或8k，如果一个连接请求最终将状态转换为keep-alive，它所占用的缓冲区将被释放。<br>你还需要控制超时来提高服务器性能并与客户端断开连接。按照如下编辑：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">## Start: Timeouts ##</span></span><br><span class="line">  <span class="attribute">client_body_timeout</span>   <span class="number">10</span>;</span><br><span class="line">  <span class="attribute">client_header_timeout</span> <span class="number">10</span>;</span><br><span class="line">  <span class="attribute">keepalive_timeout</span>     <span class="number">5</span> <span class="number">5</span>;</span><br><span class="line">  <span class="attribute">send_timeout</span>          <span class="number">10</span>;</span><br><span class="line"><span class="comment">## End: Timeouts ##</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>1、client_body_timeout 10;-指令指定读取请求实体的超时时间。这里的超时是指一个请求实体没有进入读取步骤，如果连接超过这个时间而客户端没有任何响应，Nginx将返回一个”Request time out” (408)错误。</p></li><li><p>2、client_header_timeout 10;-指令指定读取客户端请求头标题的超时时间。这里的超时是指一个请求头没有进入读取步骤，如果连接超过这个时间而客户端没有任何响应，Nginx将返回一个”Request time out” (408)错误。</p></li><li><p>3、keepalive_timeout 5 5; – 参数的第一个值指定了客户端与服务器长连接的超时时间，超过这个时间，服务器将关闭连接。参数的第二个值（可选）指定了应答头中Keep-Alive: timeout=time的time值，这个值可以使一些浏览器知道什么时候关闭连接，以便服务器不用重复关闭，如果不指定这个参数，nginx不会在应答头中发送Keep-Alive信息。（但这并不是指怎样将一个连接“Keep-Alive”）参数的这两个值可以不相同。</p></li><li><p>4、send_timeout 10; 指令指定了发送给客户端应答后的超时时间，Timeout是指没有进入完整established状态，只完成了两次握手，如果超过这个时间客户端没有任何响应，nginx将关闭连接。</p></li></ul><h1 id="限制可用的请求方法"><a href="#限制可用的请求方法" class="headerlink" title="限制可用的请求方法"></a>限制可用的请求方法</h1><p>GET和POST是互联网上最常用的方法。 Web服务器的方法被定义在RFC 2616。如果Web服务器不要求启用所有可用的方法，它们应该被禁用。下面的指令将过滤只允许GET，HEAD和POST方法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">## Only allow these request methods ##</span></span><br><span class="line">   <span class="attribute">if</span> (<span class="variable">$request_method</span> !<span class="regexp">~ ^(GET|HEAD|POST)$</span> ) &#123;</span><br><span class="line">       <span class="attribute">return</span> <span class="number">444</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">## Do not accept DELETE, SEARCH and other methods ##</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多关于HTTP方法的介绍</p><p>GET方法是用来请求，如文件<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2VudG9zLmJ6L2luZGV4LnBocOOAgg==" title="https://www.centos.bz/index.php。">https://www.centos.bz/index.php。<i class="fa fa-external-link"></i></span><br>HEAD方法是一样的，除非该服务器的GET请求无法返回消息体。<br>POST方法可能涉及到很多东西，如储存或更新数据，或订购产品，或通过提交表单发送电子邮件。这通常是使用服务器端处理，如PHP，Perl和Python等脚本。如果你要上传的文件和在服务器处理数据，你必须使用这个方法。</p><h1 id="拒绝一些User-Agents"><a href="#拒绝一些User-Agents" class="headerlink" title="拒绝一些User-Agents"></a>拒绝一些User-Agents</h1><p>你可以很容易地阻止User-Agents,如扫描器，机器人以及滥用你服务器的垃圾邮件发送者。<br>Nginx的444状态比较特殊，如果返回444那么客户端将不会收到服务端返回的信息，就像是网站无法连接一样</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">## Block download agents ##</span></span><br><span class="line">     <span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~* LWP::Simple|BBBike|wget|curl)</span> &#123;</span><br><span class="line">            <span class="attribute">return</span> <span class="number">444</span>;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阻止Soso和有道的机器人：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">## Block some robots ##</span></span><br><span class="line">     <span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~* Sosospider|YodaoBot)</span> &#123;</span><br><span class="line">            <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Header头设置"><a href="#Header头设置" class="headerlink" title="Header头设置"></a>Header头设置</h1><p>通过以下设置可有效防止XSS攻击</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> X-Frame-Options <span class="string">"SAMEORIGIN"</span>;</span><br><span class="line"><span class="attribute">add_header</span> X-XSS-Protection <span class="string">"1; mode=block"</span>;</span><br><span class="line"><span class="attribute">add_header</span> X-Content-Type-Options <span class="string">"nosniff"</span>;</span><br></pre></td></tr></table></figure><p>X-Frame-Options： 响应头表示是否允许浏览器加载frame等属性，有三个配置DENY禁止任何网页被嵌入,SAMEORIGIN只允许本网站的嵌套,ALLOW-FROM允许指定地址的嵌套</p><p>X-XSS-Protection： 表示启用XSS过滤（禁用过滤为X-XSS-Protection: 0），mode=block表示若检查到XSS攻击则停止渲染页面</p><p>X-Content-Type-Options： 响应头用来指定浏览器对未指定或错误指定Content-Type资源真正类型的猜测行为，nosniff 表示不允许任何猜测</p><p>在通常的请求响应中，浏览器会根据Content-Type来分辨响应的类型，但当响应类型未指定或错误指定时，浏览会尝试启用MIME-sniffing来猜测资源的响应类型，这是非常危险的</p><p>例如一个.jpg的图片文件被恶意嵌入了可执行的js代码，在开启资源类型猜测的情况下，浏览器将执行嵌入的js代码，可能会有意想不到的后果</p><p>另外还有几个关于请求头的安全配置需要注意</p><p>Content-Security-Policy： 定义页面可以加载哪些资源，</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Content-Security-Policy <span class="string">"default-src 'self'"</span>;</span><br></pre></td></tr></table></figure><p>上边的配置会限制所有的外部资源，都只能从当前域名加载，其中default-src定义针对所有类型资源的默认加载策略，self允许来自相同来源的内容</p><p>Strict-Transport-Security： 会告诉浏览器用HTTPS协议代替HTTP来访问目标站点</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Strict-Transport-Security <span class="string">"max-age=31536000; includeSubDomains"</span>;</span><br></pre></td></tr></table></figure><p>上边的配置表示当用户第一次访问后，会返回一个包含了Strict-Transport-Security响应头的字段，这个字段会告诉浏览器，在接下来的31536000秒内，当前网站的所有请求都使用https协议访问，参数includeSubDomains是可选的，表示所有子域名也将采用同样的规则</p><h1 id="经过多层CDN之后取得原始用户的IP地址，nginx-配置根据用户的真实-IP-做连接限制"><a href="#经过多层CDN之后取得原始用户的IP地址，nginx-配置根据用户的真实-IP-做连接限制" class="headerlink" title="经过多层CDN之后取得原始用户的IP地址，nginx 配置根据用户的真实 IP 做连接限制"></a>经过多层CDN之后取得原始用户的IP地址，nginx 配置根据用户的真实 IP 做连接限制</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"><span class="comment">##############</span></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_x_forwarded_for</span>  <span class="variable">$clientRealIp</span> &#123;</span><br><span class="line">        <span class="comment">## 没有通过代理，直接用 remote_addr</span></span><br><span class="line">    ""  $remote_addr;  </span><br><span class="line">        <span class="comment">## 用正则匹配，从 x_forwarded_for 中取得用户的原始IP</span></span><br><span class="line">        <span class="comment">## 例如   X-Forwarded-For: 202.123.123.11, 208.22.22.234, 192.168.2.100,...</span></span><br><span class="line">        <span class="comment">## 这里第一个 202.123.123.11 是用户的真实 IP，后面其它都是经过的 CDN 服务器</span></span><br><span class="line">    ~^(?P&lt;firstAddr&gt;[0-9\.]+),?.*$  $firstAddr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 通过 map 指令，我们为 nginx 创建了一个变量 $clientRealIp ，这个就是 原始用户的真实 IP 地址，</span></span><br><span class="line"><span class="comment">## 不论用户是直接访问，还是通过一串 CDN 之后的访问，我们都能取得正确的原始IP地址</span></span><br><span class="line"><span class="comment">#################</span></span><br><span class="line"><span class="comment">## 针对原始用户 IP 地址做限制</span></span><br><span class="line"><span class="attribute">limit_conn_zone</span> <span class="variable">$clientRealIp</span> zone=TotalConnLimitZone:<span class="number">20m</span> ;</span><br><span class="line"><span class="attribute">limit_conn</span>  TotalConnLimitZone  <span class="number">50</span>;</span><br><span class="line"><span class="attribute">limit_conn_log_level</span> <span class="literal">notice</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 针对原始用户 IP 地址做限制</span></span><br><span class="line"><span class="attribute">limit_req_zone</span> <span class="variable">$clientRealIp</span> zone=ConnLimitZone:<span class="number">20m</span>  rate=10r/s;</span><br><span class="line"><span class="attribute">limit_req</span> zone=ConnLimitZone burst=<span class="number">10</span> nodelay;</span><br><span class="line"><span class="attribute">limit_req_log_level</span> <span class="literal">notice</span>;</span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="nginx日志按天保存"><a href="#nginx日志按天保存" class="headerlink" title="nginx日志按天保存"></a>nginx日志按天保存</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line"></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_iso8601</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br></pre></td></tr></table></figure><p>将原来的time_local修改为time_iso8601，该格式日期为“2017-01-19T09:10:52+08:00”，也可以其他格式，看个人习惯</p><p>注意层次关系，这段脚本一定要加到server配置内部，且if要在access_log前面，否则set的变量将无法引用</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">...</span><br><span class="line">if ($time_iso8601 ~ '(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)') &#123;</span><br><span class="line">                <span class="attribute">set</span> <span class="variable">$tttt</span> <span class="variable">$1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">access_log</span>  logs/access-<span class="variable">$tttt</span>.log  main;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按yyyy-mm-dd格式截取字符串，写入指定日志文件中</p><p>执行 nginx -s reload 后则配置生效</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_iso8601</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        if ($time_iso8601 ~ '(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)') &#123;</span><br><span class="line">                <span class="attribute">set</span> <span class="variable">$tttt</span> <span class="variable">$1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">access_log</span>  logs/<span class="variable">$tttt</span>.access.log  main;    </span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX数学符号语法速查表</title>
      <link href="/ie/posts/96f894a7.html"/>
      <url>/ie/posts/96f894a7.html</url>
      
        <content type="html"><![CDATA[<p>最近写一些报告的时候经常需要使用 LaTeX 语法输入数学公式，每次用的时候都去网上搜资料实在是太麻烦了，所以花了点时间整理了一些常用的 LaTeX 数学符号语法供自己查阅。</p><a id="more"></a><p><strong>PS：</strong> 本文中所有的符号都是我手动敲进去的，如发现错误请联系我做出修改。更多符号使用可以查看 <span class="exturl" data-url="aHR0cHM6Ly9hcnRvZnByb2JsZW1zb2x2aW5nLmNvbS93aWtpL2luZGV4LnBocC9MYVRlWDpTeW1ib2xz" title="https://artofproblemsolving.com/wiki/index.php/LaTeX:Symbols">LaTeX:Symbols<i class="fa fa-external-link"></i></span></p><h1 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h1><table><thead><tr><th>符号</th><th>$+$</th><th>$-$</th><th>$\times$</th><th>$\div$</th></tr></thead><tbody><tr><td>语法</td><td>+</td><td>-</td><td>\times</td><td>\div</td></tr></tbody></table><h1 id="幂运算"><a href="#幂运算" class="headerlink" title="幂运算"></a>幂运算</h1><table><thead><tr><th>符号</th><th>$a^x$</th><th>$a^{xyz}$</th><th>$\sqrt{x}$</th><th>$\sqrt[n]{x}$</th></tr></thead><tbody><tr><td>语法</td><td>a^x</td><td>a^{xyz}</td><td>\sqrt{x}</td><td>\sqrt[n]{x}</td></tr></tbody></table><h1 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h1><table><thead><tr><th>符号</th><th>$\oplus$</th><th>$\vee$</th><th>$\wedge$</th></tr></thead><tbody><tr><td>语法</td><td>\oplus</td><td>\vee</td><td>\wedge</td></tr></tbody></table><h1 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h1><table><thead><tr><th>符号</th><th>$=$</th><th>$\not=$</th><th>$\approx$</th><th>$&gt;$</th><th>$&lt;$</th></tr></thead><tbody><tr><td>语法</td><td>=</td><td>\not=</td><td>\approx</td><td>&gt;</td><td>&lt;</td></tr></tbody></table><table><thead><tr><th>符号</th><th>$\equiv$</th><th>$\le$</th><th>$\ge$</th><th>$\ll$</th><th>$\gg$</th></tr></thead><tbody><tr><td>语法</td><td>\equiv</td><td>\le</td><td>\ge</td><td>\ll</td><td>\gg</td></tr></tbody></table><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><table><thead><tr><th>符号</th><th>$\in$</th><th>$\ni$</th><th>$\subset$</th><th>$\supset$</th><th>$\subseteq$</th><th>$\supseteq$</th></tr></thead><tbody><tr><td>语法</td><td>\in</td><td>\ni</td><td>\subset</td><td>\supset</td><td>\subseteq</td><td>\supseteq</td></tr></tbody></table><h1 id="存在"><a href="#存在" class="headerlink" title="存在"></a>存在</h1><table><thead><tr><th>符号</th><th>$\exists$</th><th>$\forall$</th></tr></thead><tbody><tr><td>语法</td><td>\exists</td><td>\forall</td></tr></tbody></table><h1 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h1><p>要输入希腊字母只要用反斜杠 <strong><em>\</em></strong> 加上相应字母的拼写即可。大写字母将对应拼写的首字母大写即可，这里仅列出一部分作为参考。</p><table><thead><tr><th>符号（小写）</th><th>$\phi$</th><th>$\omega$</th><th>$\delta$</th><th>$\gamma$</th></tr></thead><tbody><tr><td>语法</td><td>\phi</td><td>\omega</td><td>\delta</td><td>\gamma</td></tr><tr><td>符号（大写）</td><td>$\Phi$</td><td>$\Omega$</td><td>$\Delta$</td><td>$\Gamma$</td></tr><tr><td>语法</td><td>\Phi</td><td>\Omega</td><td>\Delta</td><td>\Gamma</td></tr></tbody></table><h1 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h1><table><thead><tr><th>符号</th><th>$\gets$</th><th>$\to$</th><th>$\Leftarrow$</th><th>$\Rightarrow$</th><th>$\Leftrightarrow$</th></tr></thead><tbody><tr><td>语法</td><td>\gets</td><td>\to</td><td>\Leftarrow</td><td>\Rightarrow</td><td>\Leftrightarrow</td></tr></tbody></table><h1 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h1><table><thead><tr><th>符号</th><th>$\dots$</th><th>$\cdots$</th><th>$\vdots$</th><th>$\ddots$</th></tr></thead><tbody><tr><td>语法</td><td>\dots</td><td>\cdots</td><td>\vdots</td><td>\ddots</td></tr></tbody></table><h1 id="头顶符号"><a href="#头顶符号" class="headerlink" title="头顶符号"></a>头顶符号</h1><table><thead><tr><th>符号</th><th>$\hat{x}$</th><th>$\bar{x}$</th><th>$\vec{x}$</th><th>$\dot{x}$</th><th>$\ddot{x}$</th></tr></thead><tbody><tr><td>语法</td><td>\hat{x}</td><td>\bar{x}</td><td>\vec{x}</td><td>\dot{x}</td><td>\ddot{x}</td></tr></tbody></table><h1 id="标准括号"><a href="#标准括号" class="headerlink" title="标准括号"></a>标准括号</h1><table><thead><tr><th>符号</th><th>$($</th><th>$)$</th><th>$[$</th><th>$]$</th></tr></thead><tbody><tr><td>语法</td><td>(</td><td>)</td><td>[</td><td>]</td></tr></tbody></table><h1 id="取整括号（函数）"><a href="#取整括号（函数）" class="headerlink" title="取整括号（函数）"></a>取整括号（函数）</h1><table><thead><tr><th>符号</th><th>$\lfloor$</th><th>$\rfloor$</th><th>$\lceil$</th><th>$\rceil$</th></tr></thead><tbody><tr><td>语法</td><td>\lfloor</td><td>\rfloor</td><td>\lceil</td><td>\rceil</td></tr></tbody></table><h1 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h1><p>LaTex 默认会忽略掉空格，要显示空格的话需要自己用命令输入（mu是一个数学单位）。</p><table><thead><tr><th>效果</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>$a\quad b$</td><td>空格宽度是当前字宽(18mu)</td><td>\quad</td></tr><tr><td>$a\,b$</td><td>空格宽度是3mu</td><td>\,</td></tr><tr><td>$a\:b$</td><td>空格宽度是4mu</td><td>\:</td></tr><tr><td>$a\;b$</td><td>空格宽度是5mu</td><td>\;</td></tr><tr><td>$a\!b$</td><td>空格宽度是-3mu(向左缩)</td><td>\!</td></tr><tr><td>$a\ b$</td><td>空格宽度是标准空格键效果</td><td>在 \ 后面敲一个空格</td></tr><tr><td>$a\qquad b$</td><td>空格宽度是36mu</td><td>\qquad</td></tr></tbody></table><h1 id="上标与下标"><a href="#上标与下标" class="headerlink" title="上标与下标"></a>上标与下标</h1><p>使用 <strong>^</strong> 和 <strong>_</strong> 来表示上下标，使用 <strong>{}</strong> 来限定上下标的所属关系，下面是一些使用示例。</p><table><thead><tr><th>符号</th><th>$x^i$</th><th>$a_i$</th><th>$x^{a_i}$</th><th>$x^a_i$</th><th>$x^{a^i}$</th><th>$x_{i+1}$</th></tr></thead><tbody><tr><td>语法</td><td>x^i</td><td>a_i</td><td>x^{a_i}</td><td>x^a_i</td><td>x^{a^i}</td><td>x_{i+1}</td></tr></tbody></table><h1 id="上划线下划线"><a href="#上划线下划线" class="headerlink" title="上划线下划线"></a>上划线下划线</h1><table><thead><tr><th>符号</th><th>$\overline{a+bi}$</th><th>$\underline{xyz}$</th></tr></thead><tbody><tr><td>语法</td><td>\overline{a+bi}</td><td>\underline{xyz}</td></tr></tbody></table><h1 id="分式"><a href="#分式" class="headerlink" title="分式"></a>分式</h1><p>分式有两种尺寸表示，分别用 <strong>frac</strong> 和 <strong>dfrac</strong> 关键字表示</p><table><thead><tr><th>尺寸</th><th>较小</th><th>较小</th><th>适中</th><th>适中</th></tr></thead><tbody><tr><td>符号</td><td>$\frac{1}{2}$</td><td>$\frac{1+\frac{1}{x}}{3x + 2}$</td><td>$\dfrac{1}{2}$</td><td>$\dfrac{1+\frac{1}{x}}{3x + 2}$</td></tr><tr><td>语法</td><td>\frac{1}{2}</td><td>\frac{1+\frac{1}{x}}{3x + 2}</td><td>\dfrac{1}{2}</td><td>\dfrac{1+\frac{1}{x}}{3x + 2}</td></tr></tbody></table><p>连续嵌套使用时用：<strong>\cfrac</strong></p><table><thead><tr><th>符号显示</th><th>语法</th></tr></thead><tbody><tr><td>$\cfrac{1+\cfrac{2}{1+\cfrac{2}{1+\cfrac{2}{1}}}}{2}$</td><td>\cfrac{1+\cfrac{2}{1+\cfrac{2}{1+\cfrac{2}{1}}}}{2}</td></tr></tbody></table><h1 id="根式"><a href="#根式" class="headerlink" title="根式"></a>根式</h1><table><thead><tr><th>符号</th><th>$\sqrt{x+y}$</th><th>$\sqrt{x}$</th><th>$\sqrt[n]{x}$</th></tr></thead><tbody><tr><td>语法</td><td>\sqrt{x+y}</td><td>\sqrt{x}</td><td>\sqrt[n]{x}</td></tr></tbody></table><h1 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h1><p>直接反斜杠 <strong>\</strong> 加正常书写的符号即可，这里只列举几个。</p><table><thead><tr><th>符号</th><th>$\cos$</th><th>$\sin$</th><th>$\arccos$</th></tr></thead><tbody><tr><td>语法</td><td>\cos</td><td>\sin</td><td>\arccos</td></tr></tbody></table><table><thead><tr><th>符号</th><th>语法</th></tr></thead><tbody><tr><td>$\cos^2 x +\sin^2 x = 1$</td><td>\cos^2 x +\sin^2 x = 1</td></tr><tr><td>$\cos 90^\circ = 0$</td><td>\cos 90^\circ = 0</td></tr></tbody></table><h1 id="求和-求积-求极限"><a href="#求和-求积-求极限" class="headerlink" title="求和 求积 求极限"></a>求和 求积 求极限</h1><table><thead><tr><th>符号</th><th>$\sum$</th><th>$\prod$</th><th>$\lim$</th></tr></thead><tbody><tr><td>语法</td><td>\sum</td><td>\prod</td><td>\lim</td></tr></tbody></table><table><thead><tr><th>符号</th><th>$\sum_{i=1}^{\infty}\frac{1}{i}$</th><th>$\prod_{n=1}^5\frac{n}{n-1}$</th><th>$\lim_{x\to\infty}\frac{1}{x}$</th></tr></thead><tbody><tr><td>语法</td><td>\sum_{i=1}^{\infty}\frac{1}{i}</td><td>\prod_{n=1}^5\frac{n}{n-1}</td><td>\lim_{x\to\infty}\frac{1}{x}</td></tr></tbody></table><h1 id="求积分-偏导"><a href="#求积分-偏导" class="headerlink" title="求积分 偏导"></a>求积分 偏导</h1><table><thead><tr><th>符号</th><th>$\int$</th><th>$\oint$</th><th>$\partial^2y$</th></tr></thead><tbody><tr><td>语法</td><td>\int</td><td>\oint</td><td>\partial^2y</td></tr></tbody></table><table><thead><tr><th>符号</th><th>语法</th></tr></thead><tbody><tr><td>$\frac{d}{dx}\left(x^2\right) = 2x$</td><td>\frac{d}{dx}\left(x^2\right) = 2x</td></tr><tr><td>$\int 2x\,dx = x^2+C$</td><td>\int 2x\,dx = x^2+C</td></tr><tr><td>$\frac{\partial^2U}{\partial x^2} + \frac{\partial^2U}{\partial y^2}$</td><td>\frac{\partial^2U}{\partial x^2} + \frac{\partial^2U}{\partial y^2}</td></tr></tbody></table><h1 id="绝对值"><a href="#绝对值" class="headerlink" title="绝对值"></a>绝对值</h1><p>直接插入竖线 <strong>|</strong> 即可，可使用 <strong>\left</strong> 、 <strong>\right</strong> 标签来指定竖线的垂直长度与那对应字符块匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接插入竖线： |a^x|</span><br><span class="line">指定垂直长度相匹配： \left|a\right|^\left|x\right|</span><br></pre></td></tr></table></figure><p>$直接插入竖线： |ax|$<br>$指定垂直长度相匹配： |a||x|$</p><p>注：所有成对出现的符号均可以像上面那样使用 <strong>\left</strong> 、 <strong>\right</strong> 标签来指定其大小匹配的字符块。</p><h1 id="矩阵和行列式"><a href="#矩阵和行列式" class="headerlink" title="矩阵和行列式"></a>矩阵和行列式</h1><p>所有的矩阵都是使用 <strong>\begin{matrix}</strong> 开始， <strong>\end{matrix}</strong> 结束。其中的 <strong>matrix</strong> 还可以改为 <strong>pmatrix</strong> 、 <strong>bmatrix</strong> 、 <strong>Bmatrix</strong> 、 <strong>vmatrix</strong> 、 <strong>Vmatrix</strong> 。</p><p>在每一行中使用 <strong>&amp;</strong> 分隔元素，行末用双反斜杠 <strong>\\</strong> 表示换行。</p><p>#基础格式</p><p>对于下面的公式，修改大括号内的关键字分别为 <strong>matrix</strong> 、 <strong>pmatrix</strong> 、 <strong>bmatrix</strong> 、 <strong>Bmatrix</strong> 、 <strong>vmatrix</strong> 、 <strong>Vmatrix</strong> 时对应的情况如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">A &amp; B &amp; C\\</span><br><span class="line">D &amp; E &amp; F\\</span><br><span class="line">G &amp; H &amp; I\\</span><br><span class="line">\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><p>$$<br>\begin{matrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{matrix}<br>$$</p><h2 id="pmatrix"><a href="#pmatrix" class="headerlink" title="pmatrix"></a>pmatrix</h2><p>$$<br>\begin{pmatrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{pmatrix}<br>$$</p><h2 id="bmatrix"><a href="#bmatrix" class="headerlink" title="bmatrix"></a>bmatrix</h2><p>$$<br>\begin{bmatrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{bmatrix}<br>$$</p><h2 id="Bmatrix"><a href="#Bmatrix" class="headerlink" title="Bmatrix"></a>Bmatrix</h2><p>$$<br>\begin{Bmatrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{Bmatrix}<br>$$</p><h2 id="vmatrix"><a href="#vmatrix" class="headerlink" title="vmatrix"></a>vmatrix</h2><p>$$<br>\begin{vmatrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{vmatrix}<br>$$</p><h2 id="Vmatrix"><a href="#Vmatrix" class="headerlink" title="Vmatrix"></a>Vmatrix</h2><p>$$<br>\begin{Vmatrix}<br>A &amp; B &amp; C\\<br>D &amp; E &amp; F\\<br>G &amp; H &amp; I\\<br>\end{Vmatrix}<br>$$</p><h1 id="带省略号的矩阵"><a href="#带省略号的矩阵" class="headerlink" title="带省略号的矩阵"></a>带省略号的矩阵</h1><p>这里使用 <strong>bmatrix</strong> 做示范，其他的类似。</p><p>如上面“省略号”所在小节所示，时使用 <strong>\cdots</strong> 表示水平方向省略号， <strong>\vdots</strong> 表示竖直方向省略号， <strong>\ddots</strong> 表示对角线方向省略号（我这里为了美观把公式按 <strong>&amp;</strong> 对齐了，这并不是必需的）。</p><p>$$<br>\begin{bmatrix}<br>A &amp; B &amp; \cdots &amp; C \\<br>D &amp; E &amp; \cdots &amp; F \\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>G &amp; H &amp; \cdots &amp; I \\<br>\end{bmatrix}<br>$$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;bmatrix&#125;</span><br><span class="line">A      &amp;  B     &amp; \cdots &amp;  C     \\</span><br><span class="line">D      &amp;  E     &amp; \cdots &amp;  F     \\</span><br><span class="line">\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">G      &amp;  H     &amp; \cdots &amp;  I     \\</span><br><span class="line">\end&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure><h1 id="矩阵方程（函数）"><a href="#矩阵方程（函数）" class="headerlink" title="矩阵方程（函数）"></a>矩阵方程（函数）</h1><p>使用 <strong>\begin{equation}</strong> 作为整个公式块的开始，以 <strong>\end{equation}</strong> 结束。在里面再配合其他符号的语法使用即可。</p><p>一个简单的例子如下（这里使用 <strong>bmatrix</strong> 做示范，其他的类似）。</p><p>$$<br>\begin{equation}<br>H_x=\frac{1}{3}\times{<br>\begin{bmatrix}<br>A &amp; B &amp; \cdots &amp; C \\<br>D &amp; E &amp; \cdots &amp; F \\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\<br>G &amp; H &amp; \cdots &amp; I \\<br>\end{bmatrix}}<br>\end{equation}<br>$$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">H_x=\frac&#123;1&#125;&#123;3&#125;\times&#123;</span><br><span class="line">\begin&#123;bmatrix&#125;</span><br><span class="line">A      &amp;  B     &amp; \cdots &amp;  C    \\</span><br><span class="line">D      &amp;  E     &amp; \cdots &amp;  F    \\</span><br><span class="line">\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\</span><br><span class="line">G      &amp;  H     &amp; \cdots &amp;  I    \\</span><br><span class="line">\end&#123;bmatrix&#125;&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure><h1 id="其他符号"><a href="#其他符号" class="headerlink" title="其他符号"></a>其他符号</h1><table><thead><tr><th>符号</th><th>$\infty$</th><th>$\triangle$</th><th>$\angle$</th><th>$\checkmark$</th><th>$\nabla$</th></tr></thead><tbody><tr><td>语法</td><td>\infty</td><td>\triangle</td><td>\angle</td><td>\checkmark</td><td>\nabla</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx隐藏版本号信息</title>
      <link href="/ie/posts/f3b50546.html"/>
      <url>/ie/posts/f3b50546.html</url>
      
        <content type="html"><![CDATA[<p>当我们使用 apt 或者其他包管理工具安装完 Nginx 之后，访问网站时 Header 里面会默认携带 Nginx 的版本号信息。</p><a id="more"></a><p>命令行下可以使用命令查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I http://your-domain</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTTP/2 200</span><br><span class="line">server: nginx/1.16.1     #这里带有版本号信息</span><br><span class="line">date: Thu, 12 Sep 2019 03:06:23 GMT</span><br><span class="line">content-type: text/html; charset=</span><br><span class="line">cache-control: public</span><br><span class="line">content-language: auto</span><br></pre></td></tr></table></figure><p>而软件漏洞往往都是跟版本绑定的，在管理员没有及时更新修复漏洞的情况下，一旦攻击者知道了你用的 Nginx 版本就能轻松利用已知漏洞实现入侵。</p><p>这无疑是一个安全隐患，所以对版本号进行隐藏就一定必要了（当然，更新修复漏洞才是解决问题的根本途径）。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>要隐藏 Nginx 版本号其实很简单，稍微修改一下配置文件即可。这里使用 vim 编辑器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>在 http{} 段中添加一行 server_tokens off;</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后保存文件，测试 Nginx 配置文件是否正常后重载配置即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t            #测试配置文件是否正常</span><br><span class="line">sudo nginx -s reload     #重载nginx配置</span><br></pre></td></tr></table></figure><h1 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h1><p>配置好之后可以再用 curl 测试一下，会发现不再显示 Nginx 版本号了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTTP/2 200</span><br><span class="line">server: nginx       #版本号信息没有了</span><br><span class="line">date: Thu, 12 Sep 2019 03:32:16 GMT</span><br><span class="line">content-type: text/html; charset=</span><br><span class="line">cache-control: public</span><br><span class="line">content-language: auto</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django带文件的表单上传</title>
      <link href="/ie/posts/4dd55455.html"/>
      <url>/ie/posts/4dd55455.html</url>
      
        <content type="html"><![CDATA[<p>带文件的表单如何上传</p><a id="more"></a><h4 id="带文件的表单上传"><a href="#带文件的表单上传" class="headerlink" title="带文件的表单上传"></a>带文件的表单上传</h4><ul><li><p>首先在表单form中必须要添加这个属性</p></li><li><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enctype="multipart/form-data"</span><br></pre></td></tr></table></figure></li><li><p>然后在js中添加下列代码</p></li><li><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选中需要上传的表单，并且进行格式化处理</span></span><br><span class="line"><span class="keyword">var</span> formData=<span class="keyword">new</span> FormData($(<span class="string">"#formdata"</span>)[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(formData)</span><br><span class="line"><span class="comment">//获取用户名</span></span><br><span class="line"><span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"username"</span>).innerHTML;</span><br><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> month=date.getMonth()+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//把数据追加到表单</span></span><br><span class="line">formData.append(<span class="string">"username"</span>,user);</span><br><span class="line">formData.append(<span class="string">"date"</span>,date.getFullYear()+<span class="string">"-"</span>+month+<span class="string">"-"</span>+date.getDate());</span><br><span class="line">formData.append(<span class="string">"sign"</span>,date.getTime());</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type:<span class="string">"post"</span>,</span><br><span class="line">url:<span class="string">"http://127.0.0.1:8000/tour/sendDay"</span>,</span><br><span class="line"><span class="keyword">async</span>:<span class="literal">true</span>,</span><br><span class="line">data:formData,</span><br><span class="line">timeout:<span class="number">5000</span>,</span><br><span class="line">dataType:<span class="string">"json"</span>,</span><br><span class="line">cache:<span class="literal">false</span>, <span class="comment">//提交表单必须增加的属性</span></span><br><span class="line">contentType:<span class="literal">false</span>,</span><br><span class="line">processData:<span class="literal">false</span>,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">alert(data);</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line"><span class="keyword">if</span>(data.code == <span class="string">"1"</span>) &#123;</span><br><span class="line">alert(<span class="string">"发布成功"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(data.code == <span class="string">"2"</span>)&#123;</span><br><span class="line">            alert(<span class="string">"发布失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params">xhr,textState</span>)</span>&#123;</span><br><span class="line">alert(<span class="string">"请求失败！"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>在models中添加以下类</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tours</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">   username = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">   date = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">   times = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">   desc = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">   photoname = models.FileField(upload_to=<span class="string">"photo"</span>,null=<span class="literal">True</span>,blank=<span class="literal">True</span>)</span><br><span class="line">   musicname = models.FileField(upload_to=<span class="string">"music"</span>,null=<span class="literal">True</span>,blank=<span class="literal">True</span>)</span><br><span class="line">   isDelete = models.BooleanField(default=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li><li><p>在settings.py文件中添加如下代码</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR,<span class="string">'media'</span>)</span><br></pre></td></tr></table></figure></li><li><p>在urls.py文件中创建路由</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views.static <span class="keyword">import</span> serve</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> App <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> tourdemo <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> tourdemo.settings <span class="keyword">import</span> MEDIA_ROOT</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r"^tour/sendDay"</span>,views.tourSendDay),</span><br><span class="line">   <span class="comment">#加载media文件需要的路由</span></span><br><span class="line">    url(<span class="string">r'^media/(?P&lt;path&gt;.*)/$'</span>, serve, &#123;<span class="string">"document_root"</span>: MEDIA_ROOT&#125;),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>在views.py文件中添加tourSendDay函数</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tourSendDay</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        tour = Tours()</span><br><span class="line">        username = request.POST.get(<span class="string">"username"</span>)</span><br><span class="line">        tour.username = username</span><br><span class="line">        date = request.POST.get(<span class="string">"date"</span>)</span><br><span class="line">        tour.date = date</span><br><span class="line">        times = request.POST.get(<span class="string">"sign"</span>)</span><br><span class="line">        tour.times = times</span><br><span class="line">        music = request.FILES.get(<span class="string">"music"</span>)</span><br><span class="line">        tour.musicname = music</span><br><span class="line">        img = request.FILES.get(<span class="string">"photo"</span>)</span><br><span class="line">        tour.photoname = img</span><br><span class="line">        desc = request.POST.get(<span class="string">"desc"</span>)</span><br><span class="line">        <span class="comment"># print(desc)</span></span><br><span class="line">        tour.desc = desc</span><br><span class="line">        <span class="comment"># print("desc",tour.desc)</span></span><br><span class="line">        tour.save()</span><br><span class="line">        tourdic = &#123;<span class="string">"code"</span>:<span class="string">"1"</span>,<span class="string">"id"</span>: tour.id, <span class="string">"photoname"</span>: tour.photoname.url, <span class="string">"musicname"</span>: tour.musicname.url, <span class="string">"times"</span>: tour.times,</span><br><span class="line">                   <span class="string">"username"</span>: tour.username, <span class="string">"date"</span>: tour.date, <span class="string">"desc"</span>: tour.desc&#125;</span><br><span class="line"></span><br><span class="line">        response = HttpResponse(json.dumps(tourdic))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        response = HttpResponse(json.dumps(&#123;<span class="string">"code"</span>: <span class="string">"2"</span>&#125;))</span><br><span class="line"></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Origin"</span>] = <span class="string">"*"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Methods"</span>] = <span class="string">"POST, GET, OPTIONS"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Max-Age"</span>] = <span class="string">"1000"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Headers"</span>] = <span class="string">"*"</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure></li><li><p>注意若出现存储中文失败则需要在创建的的时候指定编码格式</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database tourdb charset=&apos;utf8&apos;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django将发布内容动态显示到页面上</title>
      <link href="/ie/posts/5bfe6261.html"/>
      <url>/ie/posts/5bfe6261.html</url>
      
        <content type="html"><![CDATA[<p>Django如何将发布内容动态显示到页面上</p><a id="more"></a><h4 id="将发布内容动态显示到页面上"><a href="#将发布内容动态显示到页面上" class="headerlink" title="将发布内容动态显示到页面上"></a>将发布内容动态显示到页面上</h4><ul><li><p>在settings.py中配置</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR,<span class="string">"Templates"</span>)],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.media'</span>,   <span class="comment"># 新添加的</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#已经配置过的</span></span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR,<span class="string">'media'</span>)</span><br></pre></td></tr></table></figure></li><li><p>在urls.py中配置路由</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tour.settings <span class="keyword">import</span>  MEDIA_ROOT</span><br><span class="line"><span class="keyword">from</span> django.views.static <span class="keyword">import</span> serve  <span class="comment">#注意包不能导错</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^media/(?P&lt;path&gt;.*)/$'</span>, serve, &#123;<span class="string">"document_root"</span>: MEDIA_ROOT&#125;),<span class="comment">#加载media文件的时候需要的路由</span></span><br><span class="line">    url(<span class="string">r"^gettour"</span>,views.gettour),<span class="comment">#获取tour.html页面的路由</span></span><br><span class="line">    url(<span class="string">r"^sendtour"</span>,views.sendTour),<span class="comment">#发布动态的路由</span></span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>在views.py文件中创建sendTour的函数</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendTour</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#从请求中将表单中的数据取出，并且存储到数据库中</span></span><br><span class="line">        tour = Tour()</span><br><span class="line">        tour.username= request.POST.get(<span class="string">"username"</span>)</span><br><span class="line">        tour.times = request.POST.get(<span class="string">"times"</span>)</span><br><span class="line">        tour.sendtime = request.POST.get(<span class="string">"sendtime"</span>)</span><br><span class="line">        tour.sendtxt = request.POST.get(<span class="string">"sendtxt"</span>)</span><br><span class="line">        tour.phonename = request.FILES.get(<span class="string">"imgfile"</span>)</span><br><span class="line">        tour.musicname = request.FILES.get(<span class="string">"musicfile"</span>)</span><br><span class="line">        tour.save()</span><br><span class="line">        <span class="comment">#若存储成功，则将对象转为字典</span></span><br><span class="line">        tourdict = &#123;<span class="string">"code"</span>:<span class="string">"1"</span>,<span class="string">"username"</span>:tour.username,<span class="string">"times"</span>:tour.times,</span><br><span class="line">                    <span class="string">"sendtime"</span>:tour.sendtime,<span class="string">"phonename"</span>:tour.phonename.url</span><br><span class="line">                    ,<span class="string">"musicname"</span>:tour.musicname.url,<span class="string">"sendtxt"</span>:tour.sendtxt&#125;</span><br><span class="line">      <span class="comment">#  再字典转为json字符串，返回到前端页面中</span></span><br><span class="line">        response = HttpResponse(json.dumps(tourdict))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        response = HttpResponse(json.dumps(&#123;<span class="string">'code'</span>: <span class="string">"0"</span>&#125;))</span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Origin"</span>] = <span class="string">"*"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Methods"</span>] = <span class="string">"POST, GET, OPTIONS"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Max-Age"</span>] = <span class="string">"1000"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Headers"</span>] = <span class="string">"*"</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure></li><li><p>在前端页面中添加函数</p></li><li><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//选中dataform表单对其进行格式化处理</span></span><br><span class="line"><span class="keyword">var</span> dataform = <span class="keyword">new</span> FormData($(<span class="string">"#datafrom"</span>)[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">console</span>.log(dataform)</span><br><span class="line"><span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">"user"</span>).innerHTML;</span><br><span class="line">    <span class="comment">//将数据追加到表单中  </span></span><br><span class="line">dataform.append(<span class="string">"username"</span>,user)</span><br><span class="line"><span class="keyword">var</span> dates = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="keyword">var</span> y = dates.getFullYear()</span><br><span class="line"><span class="keyword">var</span> m = dates.getMonth() + <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> d = dates.getDate()</span><br><span class="line">dataform.append(<span class="string">"sendtime"</span>,y+<span class="string">"/"</span>+m+<span class="string">"/"</span>+d)</span><br><span class="line"><span class="comment">//追加一个时间戳</span></span><br><span class="line">dataform.append(<span class="string">"times"</span>,dates.getTime())</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type:<span class="string">"post"</span>,</span><br><span class="line">url:<span class="string">"http://127.0.0.1:9000/sendtour"</span>,</span><br><span class="line">data:dataform,</span><br><span class="line"><span class="keyword">async</span>:<span class="literal">true</span>,</span><br><span class="line">dataType:<span class="string">"json"</span>,</span><br><span class="line">timeout:<span class="number">5000</span>,</span><br><span class="line">cache:<span class="literal">false</span>,  <span class="comment">//提交表单的时候需要的参数</span></span><br><span class="line">contentType:<span class="literal">false</span>,</span><br><span class="line">processData:<span class="literal">false</span>,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;<span class="comment">//请求成功的时候返回的参数</span></span><br><span class="line">alert(data)</span><br><span class="line"><span class="keyword">if</span>(data.code==<span class="string">"1"</span>)&#123;<span class="comment">//判断数据是否成功存入数据库</span></span><br><span class="line">alert(<span class="string">"发布成功"</span>)</span><br><span class="line"><span class="comment">//将我们返回的数据显示到页面上来</span></span><br><span class="line">addhistory(data)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(data.code==<span class="string">"0"</span>)&#123;<span class="comment">//数据没存储成功，则显示发布失败！</span></span><br><span class="line">alert(<span class="string">"发布失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">"请求异常"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将得到的数据动态的添加到html页面中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">addhistory</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//打印data数据</span></span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">    <span class="comment">//找到存放li的大盒子</span></span><br><span class="line"><span class="keyword">var</span> $ul = <span class="built_in">document</span>.getElementById(<span class="string">"ulitem"</span>);</span><br><span class="line">    <span class="comment">//创建一个li</span></span><br><span class="line"><span class="keyword">var</span> $li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>)</span><br><span class="line"><span class="comment">//将li添加到ul中</span></span><br><span class="line">$ul.appendChild($li)</span><br><span class="line">    <span class="comment">//给li添加一个class属性</span></span><br><span class="line">$li.className = <span class="string">"item"</span>;</span><br><span class="line">    <span class="comment">//给li添加标签</span></span><br><span class="line">$li.innerHTML = <span class="string">'&lt;img class="item-img" src="'</span>+data.phonename+<span class="string">'"/&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div class="item-right"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;a class="delete" href="#"&gt;删除&lt;/a&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;p class="itemtxt"&gt;'</span>+data.sendtxt+<span class="string">'&lt;/p&gt;'</span>+</span><br><span class="line">        <span class="string">'&lt;div class="userbox"&gt;&lt;img class="icon-img" src="/static/img/a1.png"/&gt; '</span> +</span><br><span class="line"><span class="string">'&lt;span class="username"&gt;'</span>+data.username+<span class="string">'&lt;/span&gt;&lt;span class="sendtime"&gt;'</span>+data.sendtime</span><br><span class="line">+<span class="string">'&lt;/span&gt;&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div&gt;&lt;a class="musicname" href="#"&gt;'</span>+data.musicname+<span class="string">'&lt;/a&gt;&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django中引用静态文件</title>
      <link href="/ie/posts/1f519fd3.html"/>
      <url>/ie/posts/1f519fd3.html</url>
      
        <content type="html"><![CDATA[<p>Django中如何引用静态文件</p><a id="more"></a><h4 id="Django中引用静态文件"><a href="#Django中引用静态文件" class="headerlink" title="Django中引用静态文件"></a>Django中引用静态文件</h4><blockquote><p>当我们将我们的html文件放到Templates文件中的时候，这时候此html我们可以直接引用，</p><p>若出现这个html文件，它还引用了其他的一些文件【js，css，img】，这是就需要引用django中静态的文件</p></blockquote><ul><li>需要在Templates的同级目录下创建一个static目录</li><li>需要在setting文件中添加代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认自带的</span></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line"><span class="comment">#添加代码</span></span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">'static'</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><p>将html需要用到的资源，放在static目录下</p></li><li><p>在html中引用静态资源</p></li><li><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery-2.1.0.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/static/css/style.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置路由，在urls.py文件中配置</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r"^getlogin"</span>,views.getlogin)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>需要在views.py文件中创建getlogin函数</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlogin</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment">#返回登录的页面</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver  127.0.0.1:9000</span><br></pre></td></tr></table></figure></li><li><p>如何请求接口</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9000/getlogin</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django添加新的路由</title>
      <link href="/ie/posts/a79b4f5b.html"/>
      <url>/ie/posts/a79b4f5b.html</url>
      
        <content type="html"><![CDATA[<p>Django如何添加新的路由</p><a id="more"></a><h4 id="Django添加新的路由"><a href="#Django添加新的路由" class="headerlink" title="Django添加新的路由"></a>Django添加新的路由</h4><ul><li><p>首先urls.py文件添加路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    <span class="comment"># alt+enter</span></span><br><span class="line">    url(<span class="string">r"^login/"</span>,views.login),</span><br><span class="line">    url(<span class="string">r"^app/addStu/"</span>,views.addStu),</span><br><span class="line">    url(<span class="string">r"^register"</span>,views.register)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>在views.py中创建函数register</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(request)</span>:</span></span><br><span class="line">    print(<span class="string">"register"</span>)</span><br><span class="line">    user = request.POST.get(<span class="string">"user"</span>)</span><br><span class="line">    print(user)</span><br><span class="line">    psd = request.POST.get(<span class="string">"psd"</span>)</span><br><span class="line">    print(psd)</span><br><span class="line">    <span class="comment">#解决跨域问题</span></span><br><span class="line">    response = HttpResponse(user)</span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Origin"</span>] = <span class="string">"*"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Methods"</span>] = <span class="string">"POST, GET, OPTIONS"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Max-Age"</span>] = <span class="string">"1000"</span></span><br><span class="line">    response[<span class="string">"Access-Control-Allow-Headers"</span>] = <span class="string">"*"</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure></li><li><p>由于ajax跨域的问题，也需要在settings.py文件中设置，将选中的模块注释</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">'django.middleware.security.SecurityMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions.middleware.SessionMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.common.CommonMiddleware'</span>,</span><br><span class="line">    <span class="comment"># 'django.middleware.csrf.CsrfViewMiddleware',</span></span><br><span class="line">    <span class="string">'django.contrib.auth.middleware.AuthenticationMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages.middleware.MessageMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>我们的ajax请求在前端中使用的，在使用ajax之前，我们需要将jquery链接到我们的项目中</p></li><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script src=<span class="string">"js/jquery-2.1.0.js"</span> type=<span class="string">"text/javascript"</span> charset=<span class="string">"utf-8"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">src:jquery的链接地址</span><br></pre></td></tr></table></figure></li><li><p>调用ajax请求</p></li><li><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">                    type:<span class="string">"post"</span>,<span class="comment">//请求的类型</span></span><br><span class="line">                    url:<span class="string">"http://127.0.0.1:8000/register/"</span>,<span class="comment">//请求的地址[路由]</span></span><br><span class="line">                    <span class="keyword">async</span>:<span class="literal">true</span>, <span class="comment">//声明异步请求</span></span><br><span class="line">                    data:&#123;<span class="string">"user"</span>:user,<span class="string">"psd"</span>:psd&#125;,<span class="comment">//将参数传递到后台</span></span><br><span class="line">                    dataType:<span class="string">"text"</span>, <span class="comment">//声明返回的数据的类型，json</span></span><br><span class="line">                    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; <span class="comment">//请求成功的时候调用的函数，data：后台返回给我们的数据</span></span><br><span class="line">                        alert(data)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//请求的失败的时候，打印</span></span><br><span class="line">                        alert(<span class="string">"请求失败"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql与pycharm的设置</title>
      <link href="/ie/posts/30b27542.html"/>
      <url>/ie/posts/30b27542.html</url>
      
        <content type="html"><![CDATA[<p>mysql与pycharm的设置</p><a id="more"></a><h4 id="mysql与pycharm的设置"><a href="#mysql与pycharm的设置" class="headerlink" title="mysql与pycharm的设置"></a>mysql与pycharm的设置</h4><ul><li><p>保证mysql已经安装成功</p></li><li><p>使用终端在mysql中创建一个数据库</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">***</span><br><span class="line"><span class="comment">#连接数据库</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="comment">#查看当前数据库</span></span><br><span class="line">mysql&gt; create database tour;</span><br><span class="line"><span class="comment">#创建数据库  tour：数据库名，可以自己命名</span></span><br></pre></td></tr></table></figure></li><li><p>找到setting.py文件，并在添加如下代码</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="comment"># 'ENGINE': 'django.db.backends.sqlite3',</span></span><br><span class="line">        <span class="comment"># 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),</span></span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'tour'</span>, <span class="comment">#数据库名字</span></span><br><span class="line">        <span class="string">"USER"</span>:<span class="string">"root"</span>,  <span class="comment">#数据库用户名</span></span><br><span class="line">        <span class="string">"PASSWORD"</span>:<span class="string">"root"</span>, <span class="comment">#数据库的密码</span></span><br><span class="line">        <span class="string">"HOST"</span>:<span class="string">"127.0.0.1"</span>, <span class="comment">#ip地址</span></span><br><span class="line">        <span class="string">"PORT"</span>:<span class="string">"3306"</span>,<span class="comment"># 端口号</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：在使用数据库的时候，必须保证数据库的服务是开启的状态</p><blockquote><p>net start mysql</p></blockquote><p>找到mysql的安装地址，找到bin文件夹，到bin文件夹下面找到mysqld.exe，双击执行</p><ul><li><p>到与setting.py同目录的<strong>init</strong>.py文件下，添加以下代码</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意</strong> 若没有安装pymysql模块，则会报错，需要将pymsql模块安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>使用pycharm安装</span><br><span class="line"><span class="number">2.</span>使用pip安装</span><br><span class="line">pip install pymsql</span><br></pre></td></tr></table></figure><ul><li><p>当项目创建之后，配置完成之后，我们执行一下迁移【因为只有执行迁移的时候，才会在数据库中生成表】</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></li><li><p>需要在models.py文件中创建一个类，并且这个类必须要继承models.Model</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    <span class="comment">#CharField 指定字段的类型</span></span><br><span class="line">    <span class="comment">#max_length 指定字段的最大长度</span></span><br></pre></td></tr></table></figure><ul><li><p>生成迁移文件</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br></pre></td></tr></table></figure></li><li><p>执行迁移文件</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py  migrate</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django的环境配置</title>
      <link href="/ie/posts/42ecd398.html"/>
      <url>/ie/posts/42ecd398.html</url>
      
        <content type="html"><![CDATA[<p>Django环境配置</p><a id="more"></a><h4 id="Django的环境配置"><a href="#Django的环境配置" class="headerlink" title="Django的环境配置"></a>Django的环境配置</h4><ul><li><p>python环境是ok的</p></li><li><p>pip是可用的</p><ul><li>pip用来安装第三方包的</li></ul></li><li><p>创建虚拟环境【可以先不写】</p><ul><li>linux/mac</li><li>windows</li></ul></li><li><p>安装Django</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==<span class="number">1.11</span><span class="number">.7</span></span><br></pre></td></tr></table></figure></li><li><p>django安装成功之后，创建项目</p><p>创建项目之前首先新建一个目录【文件夹】</p><p>进入这个目录之后执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">django-admin  startproject  projectname</span><br><span class="line"><span class="comment">#django-admin  startproject  项目名</span></span><br></pre></td></tr></table></figure></li><li><p>使用pycharm打开项目的时候，要在manage.py的上一级打开</p><ul><li>manage所在的文件夹</li></ul></li><li><p>当进入pychram之后，我们可以使用自带终端来创建app</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py  startapp  appname</span><br></pre></td></tr></table></figure><ul><li>当app创建完成之后，需要在setting.py文件中配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"App"</span>,<span class="comment">#添加我们创建的app</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><p>在setting.py文件中</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALLOWED_HOSTS = [<span class="string">"*"</span>]</span><br><span class="line"><span class="comment">#允许所有人访问</span></span><br></pre></td></tr></table></figure></li><li><p>在setting.py文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置语言</span></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"><span class="comment">#设置时区</span></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure></li><li><p>运行当前项目</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py  runserver</span><br></pre></td></tr></table></figure><ul><li>运行成功，在浏览器访问</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/</span><br><span class="line">#会显示正常工作</span><br></pre></td></tr></table></figure><ul><li>添加一个路由，在urls.py文件中添加</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    <span class="comment"># alt+enter  添加,需要导包，App下面的views</span></span><br><span class="line">    url(<span class="string">r"^login/"</span>,views.login),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><p>需要在app中的views.py去创建视图函数login</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment">#必须返回的是httpResponse对象</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"你真是一个小机灵鬼！！！"</span>)</span><br></pre></td></tr></table></figure></li><li><p>执行python manage.py runserver 将服务器重新部署</p></li><li><p>在浏览器访问的时候，这时候需要使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/login</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的使用</title>
      <link href="/ie/posts/606a512e.html"/>
      <url>/ie/posts/606a512e.html</url>
      
        <content type="html"><![CDATA[<p>mysql的简单配置使用</p><a id="more"></a><h4 id="mysql的使用"><a href="#mysql的使用" class="headerlink" title="mysql的使用"></a>mysql的使用</h4><blockquote><p>免安装版本</p></blockquote><ul><li><p>解压mysql压缩包【记得解压的文件路径】</p></li><li><p>进行环境变量的配置</p><ul><li>我的电脑–》属性—》高级环境变量设置–》找到path –》新建–》将mysql的路径【bin的路径】直接复制粘贴</li></ul></li><li><p>启动数据库</p><ul><li>先进入mysql的解压文件–》找到bin文件夹–》双击执行mysqld.exe文件</li></ul></li><li><p>连接数据库</p><ul><li>mysql -u root -p</li><li>root【默认密码】</li></ul></li><li><p>数据库连接成功之后，可以查看数据库</p><ul><li><p>show databases; //查看数据库</p></li><li><p>use 数据库名 ; //使用某个指定的数据库</p></li><li><p>show tables; //查看所有的表</p></li><li><p>create database 数据库名; //创建数据库</p></li><li><p>drop database 数据库名; //删除数据库</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp内网穿透</title>
      <link href="/ie/posts/48a2d97d.html"/>
      <url>/ie/posts/48a2d97d.html</url>
      
        <content type="html"><![CDATA[<p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycC9ibG9iL21hc3Rlci9SRUFETUVfemgubWQ=" title="https://github.com/fatedier/frp/blob/master/README_zh.md">github<i class="fa fa-external-link"></i></span></p><p>启动 frps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /Main/frp_024.1_server/</span><br><span class="line">chmod -Rf 777 ./*</span><br><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><p>相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">token = yourtoken</span><br><span class="line">dashboard_port = 7500</span><br><span class="line">dashboard_user = username</span><br><span class="line">dashboard_pwd = yourpassword</span><br><span class="line">vhost_http_port = 9000 #设置 http 访问端口</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x #假设 frps 所在服务器的公网 IP 为 x.x.x.x</span><br><span class="line">server_port = 7000 #与frps.ini bind_port一致</span><br><span class="line">token = yourtoken #与frps.ini token一致</span><br><span class="line">#[ssh]</span><br><span class="line">#type = tcp</span><br><span class="line">#local_ip = 127.0.0.1</span><br><span class="line">#local_port = 22</span><br><span class="line">#remote_port = 8080</span><br><span class="line">[web]</span><br><span class="line">type = http</span><br><span class="line">local_port = 8000 #本地机器上 web 服务对应的端口</span><br><span class="line">custom_domains = www.yourdomain.com #绑定自定义域名或serverip</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><p>设置开机自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#frps.service</span><br><span class="line">[Unit]</span><br><span class="line"></span><br><span class="line">Description=fraps service</span><br><span class="line"></span><br><span class="line">After=network.target syslog.target</span><br><span class="line"></span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"></span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line">#启动服务的命令（此处写你的frps的实际安装目录）</span><br><span class="line"></span><br><span class="line">ExecStart=/Main/frp_024.1_server/frps -c /Main/frp_024.1_server/frps.ini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"></span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后就启动frps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start frps</span><br></pre></td></tr></table></figure><p>再打开自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable frps</span><br></pre></td></tr></table></figure><p>如果要重启应用，可以这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart frps</span><br></pre></td></tr></table></figure><p>如果要停止应用，可以输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop frps</span><br></pre></td></tr></table></figure><p>如果要查看应用的日志，可以输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status frps</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> 内网穿透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> Frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7设置Jupyter</title>
      <link href="/ie/posts/c2c98f74.html"/>
      <url>/ie/posts/c2c98f74.html</url>
      
        <content type="html"><![CDATA[<p>Jupyter Notebook（前身是IPython Notebook）是一个基于Web的交互式计算环境，用于创建Jupyter Notebook文档。Notebook一词可以通俗地引用许多不同的实体，主要是Jupyter Web应用程序、Jupyter Python Web服务器或Jupyter文档格式（取决于上下文）。Jupyter Notebook文档是一个JSON文档，遵循版本化模式，包含一个有序的输入/输出单元格列表，这些单元格可以包含代码、文本（使用Markdown语言）、数学、图表和富媒体，通常以“.ipynb”结尾扩展。</p><a id="more"></a><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --allow-root --ip 0.0.0.0 --port 9999</span><br></pre></td></tr></table></figure><p>默认不允许/不建议root启动jupyter,如果非要用，加上–allow-root<br>–ip ip填写0.0.0.0 或者本机ip<br>–port 端口号</p><p>启动后，浏览器访问对应ip和端口就行，需要输入token,token在启动界面有输出</p><h1 id="生产配置文件"><a href="#生产配置文件" class="headerlink" title="生产配置文件"></a>生产配置文件</h1><p>每次记住token，复制再登录不现实</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure><p>生成的配置文件位于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-notebook password</span><br></pre></td></tr></table></figure><p>输入两遍密码</p><p>启动，就可以 以固定密码登录了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --allow-root --ip 0.0.0.0 --port 999</span><br></pre></td></tr></table></figure><h1 id="设置浏览器打开jupyter默认路径"><a href="#设置浏览器打开jupyter默认路径" class="headerlink" title="设置浏览器打开jupyter默认路径"></a>设置浏览器打开jupyter默认路径</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><h1 id="填写自己想要的服务器路径"><a href="#填写自己想要的服务器路径" class="headerlink" title="填写自己想要的服务器路径"></a>填写自己想要的服务器路径</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.notebook_dir=&apos;/&apos;</span><br></pre></td></tr></table></figure><h1 id="设置jupyter开机启动"><a href="#设置jupyter开机启动" class="headerlink" title="设置jupyter开机启动"></a>设置jupyter开机启动</h1><p>systemctl脚本目录：/usr/lib/systemd/<br>系统服务目录：/usr/lib/systemd/system/<br>用户服务目录：/usr/lib/systemd/system/</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/systemd/system/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim myjupyter.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[UNIT]</span><br><span class="line"></span><br><span class="line">#服务描述</span><br><span class="line">Description=python jupyter Service</span><br><span class="line"></span><br><span class="line">#指定了在systemd在执行完那些target之后再启动该服务</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"></span><br><span class="line">#定义Service的运行类型，一般是forking(后台运行)  </span><br><span class="line">#Type=forking  这个会卡住啊,不写Type 或者 如下</span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#定义systemctl start|stop|reload *.service 的执行方法（具体命令需要写绝对路径）</span><br><span class="line">#注：ExecStartPre为启动前执行的命令</span><br><span class="line"># ExecStartPre=/usr/bin/test &quot;x$&#123;NETWORKMANAGER&#125;&quot; = xyes</span><br><span class="line">ExecStart=/root/anaconda3/bin/jupyter notebook --allow-root --ip 0.0.0.0 --port 9999</span><br><span class="line">#ExecReload=</span><br><span class="line"># ExecStop=/home/mobileoa/apps/shMediaManager.sh -stop</span><br><span class="line"></span><br><span class="line">#创建私有的内存临时空间</span><br><span class="line">PrivateTmp=True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"></span><br><span class="line">#多用户</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /root/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Set ip to &apos;*&apos; to bind on all interfaces (ips) for the public server</span><br><span class="line">c.NotebookApp.ip = &apos;*&apos;</span><br><span class="line"># It is a good idea to set a known, fixed port for server accessy</span><br><span class="line">c.NotebookApp.port = 9999</span><br><span class="line"># 是否打开浏览器</span><br><span class="line">c.NotebookApp.open_browser = False</span><br><span class="line">#设置工作路径</span><br><span class="line">c.NotebookApp.notebook_dir = &apos;/&apos;</span><br></pre></td></tr></table></figure><hr><h1 id="重载系统服务"><a href="#重载系统服务" class="headerlink" title="重载系统服务"></a>重载系统服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h1 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable myjupyter.service</span><br></pre></td></tr></table></figure><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start myjupyter.service</span><br></pre></td></tr></table></figure><h1 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop myjupyter.service</span><br></pre></td></tr></table></figure><h1 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart myjupyter.service</span><br></pre></td></tr></table></figure><h1 id="Notebook支持虚拟运行环境"><a href="#Notebook支持虚拟运行环境" class="headerlink" title="Notebook支持虚拟运行环境"></a>Notebook支持虚拟运行环境</h1><p>为了让Jupyter Notebook支持虚拟运行环境，需要在Anaconda里安装一个插件。<br>回到终端下面，用C-c退出目前正在运行的Jupyter Notebook Server，然后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install nb_conda</span><br></pre></td></tr></table></figure><p>再重新开启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Jupyter Notebook</span><br></pre></td></tr></table></figure><p>或者(better)</p><p>安装 ipykernel</p><p>首先切换到想要在 jupyter notebook 里使用的虚拟环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate 环境名称</span><br></pre></td></tr></table></figure><p>安装 ipykernel：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install ipykernel</span><br></pre></td></tr></table></figure><p>写入 jupyter 的 kernel</p><p>在当前虚拟环境里执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ipykernel install --user --name 环境名称 --display-name &quot;Python (环境名称)&quot;</span><br></pre></td></tr></table></figure><p>“环境名称”为当前虚拟环境的名称，最后面引号内的字符串是该虚拟环境显示在 jupyter notebook 界面的名字，可以随意修改。</p><p>删除 kernel 环境</p><p>上面写入 kernel 的配置并不会随虚拟环境的删除而删除。也就是说即使删除了该虚拟环境，jupyter notebook 的界面上仍会有它的选项，只是无法正常使用。</p><p>此时就需要去手动删除 kernel 环境了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter kernelspec remove 环境名称</span><br></pre></td></tr></table></figure><h1 id="jupyter中用notedown插件来读取md文档"><a href="#jupyter中用notedown插件来读取md文档" class="headerlink" title="jupyter中用notedown插件来读取md文档"></a>jupyter中用notedown插件来读取md文档</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install https://github.com/mli/notedown/tarball/master</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /root/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.contents_manager_class = &apos;notedown.NotedownContentsManager&apos;</span><br></pre></td></tr></table></figure><h1 id="Jupyter-Notebook-自定义主题"><a href="#Jupyter-Notebook-自定义主题" class="headerlink" title="Jupyter Notebook 自定义主题"></a>Jupyter Notebook 自定义主题</h1><p>安装好了Jupyter Notebook和Python之后，我们就已经搭建好啦运行和笔记环境，可以愉快的开始学习了。</p><p>于是本着爱折腾的精神和护眼的需求，我搜索了Jupyter Notebook的themes，也就是自定义主题。果然Github上有人一早解决了这个问题。</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2R1bm92YW5rL2p1cHl0ZXItdGhlbWVz" title="https://github.com/dunovank/jupyter-themes">github<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># install jupyterthemes</span><br><span class="line">pip install jupyterthemes</span><br><span class="line"></span><br><span class="line"># upgrade to latest version</span><br><span class="line">pip install --upgrade jupyterthemes</span><br></pre></td></tr></table></figure><p>这时候，你就可以在terminal里面调用已经安装好的themes啦～</p><p>例如，在terminal中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -l</span><br></pre></td></tr></table></figure><p>就会返回所有你安装好的主题的名词列表，这样你就知道了你安装了哪些主题。<br>最终，我的选择是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -t chesterish -T -N</span><br></pre></td></tr></table></figure><p>表示我选择了chesterish这个主题，同时希望打开顶部的工具栏（Toolbar），显示笔记本的名字（Name）</p><h1 id="Jupyter-扩展配置器（-Jupyter-NbExtensions-Configurator）"><a href="#Jupyter-扩展配置器（-Jupyter-NbExtensions-Configurator）" class="headerlink" title="Jupyter 扩展配置器（ Jupyter NbExtensions Configurator）"></a>Jupyter 扩展配置器（ Jupyter NbExtensions Configurator）</h1><p>可以通过 coda 安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span><br><span class="line">conda install -c conda-forge jupyter_nbextensions_configurator</span><br></pre></td></tr></table></figure><p>也可以使用 pip 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyter_nbextensions_configurator</span><br><span class="line">jupyter_contrib_nbextensions</span><br><span class="line">jupyter contrib nbextension install --user</span><br><span class="line">jupyter nbextensions_configurator enable --user</span><br></pre></td></tr></table></figure><ul><li><p>1.标题折叠 Collapsible headings</p><p>当你在处理一个大型的 notebooks 时，这项扩展非常有用，它可以让你隐藏部分内容。</p></li><li><ol start="2"><li><p>通知 Notify<br>当你长时间运行一个任务程序的时候，程序运行结束后，此扩展功能会自动提醒你。</p><p>如需使用此扩展，你需要勾选其对应得选择框，并点击 <code>Notify</code> 按钮来选择一个最短通知时间，即 notebook 最少持续运行多久后进行提醒。（需要注意的是，这个扩展只有在 notebook 被浏览器正常打开的情况下才能正常工作。）</p></li></ol></li><li><ol start="3"><li>代码折叠</li></ol><p>Code folding</p></li><li><ol start="4"><li>进度条</li></ol><p>tqdm_notebook</p><p>tqdm 本质上不是一个 notebook 的扩展，它是 Python 中的一个进度条库。 但是此库有时在 jupyter notebooks 会无法正常工作。 Randy Olson 给出一个小小的提醒：</p><p>tqdm 是一个 Python 的进度条库，在 jupyter notebook 中则被称之为 “tqdm_notebook”。自从在 nootbook 中加入了 tqdm_notebook 扩展功能，你再也不用担心其引发的混乱问题了。 （Randy Olson 2018 年 3 月 2 日）</p></li><li><ol start="5"><li><p>%debug这个本质上也不是 notebook 的一个扩展，而是 IPython 中的一个魔法命令。为了加深你的理解，建议你读一读 Radek Osmulski 的发布 twitter 上的推文。</p><p>%debug 魔法命令</p><ul><li><ol><li>得到了一个异常</li></ol></li><li><ol start="2"><li>重新插入一个新的输入框，输入 %debug，然后运行它<br>交互式的调试方法可以打开并显示代码出现异常的语句，方便你联系前后程序查看具体情况。<br>(Radek 2017年12月26日)</li></ol></li></ul></li></ol></li><li><ol start="6"><li>其他小的拓展与技巧</li></ol></li></ul><p>%Ismagic ：在输入框中运行这个命令，列出所有可用的 IPython 魔法命令</p><p>zen mode 扩展： 隐藏菜单栏，让你更专注于代码</p><p>Execute time 扩展：显示程序块运行的时间</p><p>autoreload：在不重启 notebook 的情况下，自动载入外部文件，从而修改代码，具体操作如下：</p><p>%load_ext autoreload</p><p>%autoreload 2</p><h1 id="JUPYTER-服务的-NGINX-配置"><a href="#JUPYTER-服务的-NGINX-配置" class="headerlink" title="JUPYTER 服务的 NGINX 配置"></a>JUPYTER 服务的 NGINX 配置</h1><h2 id="jupyter-配置"><a href="#jupyter-配置" class="headerlink" title="jupyter 配置"></a>jupyter 配置</h2><p>配置文件在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/&#123;user&#125;/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><p>配置 jupyter 的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.base_url = &apos;/jupyter/&apos;</span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><p>jupyter 使用了 websocket 协议，所以需要配置支持 websocket。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location /jupyter/ &#123;</span><br><span class="line">    proxy_pass http://jupyter;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-Scheme $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">    # WebSocket support</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line"></span><br><span class="line">    proxy_read_timeout 120s;</span><br><span class="line">    proxy_next_upstream error;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jupyter notebook 用到了 websocket, 所以需要配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">proxy_set_header Connection &quot;upgrade&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> CentOS7 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS7 </tag>
            
            <tag> Jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装Anaconda3</title>
      <link href="/ie/posts/6009a9d8.html"/>
      <url>/ie/posts/6009a9d8.html</url>
      
        <content type="html"><![CDATA[<p>Anaconda是一个免费开源的Python和R语言的发行版本，用于计算科学（数据科学、机器学习、大数据处理和预测分析），Anaconda致力于简化包管理和部署。</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>下载Anaconda<br>方式一：<span class="exturl" data-url="aHR0cHM6Ly9yZXBvLmNvbnRpbnV1bS5pby9hcmNoaXZlL2luZGV4Lmh0bWw=" title="https://repo.continuum.io/archive/index.html">官方网站<i class="fa fa-external-link"></i></span></p><p>方式二：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2FuYWNvbmRhL2FyY2hpdmUv" title="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学开源软件镜像站<i class="fa fa-external-link"></i></span></p><p>可以下载到本地，然后通过xftp上传到Contos上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash   Anaconda3-4.4.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>该按enter按，该yes|no的yes。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>然后重启终端，然后输入python</p><h1 id="Anaconda虚拟环境"><a href="#Anaconda虚拟环境" class="headerlink" title="Anaconda虚拟环境"></a>Anaconda虚拟环境</h1><h2 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n envname python=3.6</span><br></pre></td></tr></table></figure><h2 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n envname --all</span><br></pre></td></tr></table></figure><h2 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source activate envname</span><br></pre></td></tr></table></figure><h2 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source deactivate</span><br></pre></td></tr></table></figure><h1 id="Anaconda-换源"><a href="#Anaconda-换源" class="headerlink" title="Anaconda 换源"></a>Anaconda 换源</h1><h2 id="添加清华源"><a href="#添加清华源" class="headerlink" title="添加清华源"></a>添加清华源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line"></span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><h2 id="删源"><a href="#删源" class="headerlink" title="删源"></a>删源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --remove-key channels</span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==" title="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">ssl_verify: true</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnNqdHVnLnNqdHUuZWR1LmNuLyMv" title="https://mirrors.sjtug.sjtu.edu.cn/#/">上海交通大学开源镜像站<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">ssl_verify: true</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuLw==" title="https://mirrors.ustc.edu.cn/">中国科学技术大学 USTC Mirror<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">ssl_verify: true</span><br></pre></td></tr></table></figure><p>.bashrc里面修改过PATH环境变量，添加过anaconda/bin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>最后添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> CentOS7 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS7 </tag>
            
            <tag> Python </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装Python3</title>
      <link href="/ie/posts/eeb47c66.html"/>
      <url>/ie/posts/eeb47c66.html</url>
      
        <content type="html"><![CDATA[<p>centos7 自带有 python，但是却是 python2 版本的 python，如果你想安装个python3怎么办呢？难道要从github上把源码clone下来进行编译安装么？没错！因为 yum 源中并没有现成的 python3 程序，所以必须要自己手动编译安装。</p><a id="more"></a><p>首先，你要知道系统现在的python的位置在哪儿：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis python</span><br></pre></td></tr></table></figure><p>进入Python安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll python*</span><br></pre></td></tr></table></figure><p>添加epel扩展源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><p>安装pip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip</span><br></pre></td></tr></table></figure><p>用pip装wget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wget</span><br></pre></td></tr></table></figure><p>用wget下载python3的源码包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tar.xz</span><br></pre></td></tr></table></figure><p>编译python3源码包</p><p>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xz -d Python-3.6.4.tar.xz</span><br><span class="line">tar -xf Python-3.6.4.tar</span><br></pre></td></tr></table></figure><p>进入解压后的目录，依次执行下面命令进行手动编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>添加软链接<br>将原来的链接备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/python /usr/bin/python.bak</span><br></pre></td></tr></table></figure><p>添加python3的软链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3.6 /usr/bin/python</span><br></pre></td></tr></table></figure><p>测试是否安装成功了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure><p>更改yum配置，因为其要用到python2才能执行，否则会导致yum不能正常使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/bin/yum</span><br></pre></td></tr></table></figure><p>把#! /usr/bin/python修改为#! /usr/bin/python2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure><p>把#! /usr/bin/python 修改为#! /usr/bin/python2</p><p>加上pip的修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/pip /usr/bin/pip.bak</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip -V</span><br></pre></td></tr></table></figure><p>修改环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PYTHON_HOME=/usr/local/python3</span><br><span class="line">export PATH=:$PYTHON_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> CentOS7 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS7 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装PHP-EXIF扩展模块</title>
      <link href="/ie/posts/d7edfddd.html"/>
      <url>/ie/posts/d7edfddd.html</url>
      
        <content type="html"><![CDATA[<p>您可以使用exif相关的函数从文件头读取数码相机拍摄的JPEG和TIFF格式的图像文件元数据。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="编译PHP时安装"><a href="#编译PHP时安装" class="headerlink" title="编译PHP时安装"></a>编译PHP时安装</h3><p>使用–enable-exif选项配置PHP来启用exif支持。</p><p>Windows用户必须在php.ini中启用php_mbstring.dll和php_exif.dll扩展。请确保在php.ini中保持正确的顺序：php_mbstring.dll必须在php_exif.dll之前加载。</p><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>在PHP源码中可以找到EXIF扩展源码，然后编译安装到当前的PHP环境中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /Main/sh-1.5.5/php-5.5.7/ext/exif</span><br><span class="line">/alidata/server/php-5.5.7/bin/phpize</span><br><span class="line">./configure --with-php-config=/alidata/server/php-5.5.7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>cd进入/alidata/server/php-5.5.7/etc文件夹，修改php.ini，添加exif.so扩展</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension = exif.so</span><br></pre></td></tr></table></figure><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><h3 id="Apache服务器"><a href="#Apache服务器" class="headerlink" title="Apache服务器"></a>Apache服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service httpd restart</span><br></pre></td></tr></table></figure><h3 id="Nginx的服务器"><a href="#Nginx的服务器" class="headerlink" title="Nginx的服务器"></a>Nginx的服务器</h3><p>Nginx服务器重启之前，需要先重启php-fpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service php-fpm restart</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>使用phpinfo()查看PHP环境，安装配置成功。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器部署可道云(KodExplorer)</title>
      <link href="/ie/posts/9ef6ff16.html"/>
      <url>/ie/posts/9ef6ff16.html</url>
      
        <content type="html"><![CDATA[<p>在做一些项目的时候，经常有一些文档交流，修改之后的文档在QQ或微信上发来发去，还要下载，我们在这里部署KodExplorer可道云。</p><p>kodexplorer可道云是目前国内有代表性、美观易用性好的私有云软件，本文介绍在阿里云的云服务器上如何部署kodexplorer可道云，搭建私有网盘。</p><a id="more"></a><p>注意：云服务器部署和普通的Ubuntu上部署有一些区别，因为云服务器上只能使用命令行，没有界面。</p><p>官方下载页面:<span class="exturl" data-url="aHR0cHM6Ly9rb2RjbG91ZC5jb20vZG93bmxvYWQv" title="https://kodcloud.com/download/">https://kodcloud.com/download/<i class="fa fa-external-link"></i></span>。其中有Linux获取最新版可道云的相关命令。</p><p>下载命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://static.kodcloud.com/update/download/kodexplorer4.40.zip</span><br></pre></td></tr></table></figure><p>创建目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir cloud</span><br></pre></td></tr></table></figure><p>解压命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip kodexplorer4.40.zip -d ./cloud</span><br></pre></td></tr></table></figure><p>进入对应文件夹，并设置权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod -Rf 777 ./cloud</span><br><span class="line">cd ./cloud</span><br><span class="line">chmod -Rf 777 ./*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键安装Ecs服务器的web环境(阿里云)</title>
      <link href="/ie/posts/c91f449a.html"/>
      <url>/ie/posts/c91f449a.html</url>
      
        <content type="html"><![CDATA[<p>阿里云Linux一键安装web环境使用教程</p><a id="more"></a><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="1-准备工具"><a href="#1-准备工具" class="headerlink" title="1.准备工具"></a>1.准备工具</h2><p><span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXQuYWxpeXVuLmNvbS9wcm9kdWN0cy81NjAxNDAwOS9jbWdqMDAwMjYyLmh0bWw/c3BtPTUxNzYuNzMwMDA1LnByb2R1Y3RsaXN0LmRfY21najAwMDI2Mi41NGIwMzUyNFJ6dG5oNSZpbm5lclNvdXJjZT1zZWFyY2hfTGludXglRTQlQjglODAlRTklOTQlQUUlRTUlQUUlODklRTglQTMlODV3ZWIlRTclOEUlQUYlRTUlQTIlODMjc2t1PWJpYW96aHVuYmFu" title="https://market.aliyun.com/products/56014009/cmgj000262.html?spm=5176.730005.productlist.d_cmgj000262.54b03524Rztnh5&innerSource=search_Linux%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85web%E7%8E%AF%E5%A2%83#sku=biaozhunban">阿里云linux一键安装web环境<i class="fa fa-external-link"></i></span></p><h2 id="2-将安装包上传到服务器上"><a href="#2-将安装包上传到服务器上" class="headerlink" title="2.将安装包上传到服务器上"></a>2.将安装包上传到服务器上</h2><p>ftp,putty等.</p><h2 id="3-解压安装包进行安装"><a href="#3-解压安装包进行安装" class="headerlink" title="3.解压安装包进行安装"></a>3.解压安装包进行安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unzip -o -d . sh-1.5.5.zip</span><br><span class="line">chmod -R 777 sh-1.5.5</span><br><span class="line">cd sh-1.5.5/</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><h2 id="4-Mysql选择的5-5-40版本，其他版本会出现问题-php选择5-5-7版本"><a href="#4-Mysql选择的5-5-40版本，其他版本会出现问题-php选择5-5-7版本" class="headerlink" title="4.Mysql选择的5.5.40版本，其他版本会出现问题;php选择5.5.7版本;"></a>4.Mysql选择的5.5.40版本，其他版本会出现问题;php选择5.5.7版本;</h2><h2 id="5-安装完成查看自己安装的信息"><a href="#5-安装完成查看自己安装的信息" class="headerlink" title="5.安装完成查看自己安装的信息"></a>5.安装完成查看自己安装的信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunpl</span><br></pre></td></tr></table></figure><p>正在运行状态的服务及端口</p><ul><li>9000 端口：php进程服务(apache没有9000端口，因为nginx+php集成方式与apache+php集成方式不同）</li><li>3306端口：mysql服务</li><li>80端口：httpd或者nginx服务</li><li>21端口：ftp服务</li></ul><h2 id="6-查看ftp和mysql用户名和密码"><a href="#6-查看ftp和mysql用户名和密码" class="headerlink" title="6.查看ftp和mysql用户名和密码"></a>6.查看ftp和mysql用户名和密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat account.log</span><br></pre></td></tr></table></figure><h2 id="7-修改ftp的密码"><a href="#7-修改ftp的密码" class="headerlink" title="7.修改ftp的密码"></a>7.修改ftp的密码</h2><p>使用root身份执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd www</span><br></pre></td></tr></table></figure><h2 id="8-修改mysql的密码："><a href="#8-修改mysql的密码：" class="headerlink" title="8.修改mysql的密码："></a>8.修改mysql的密码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -p旧密码 password 新密码</span><br></pre></td></tr></table></figure><p>注：-p 和旧密码之间没有空格，password 和新密码之间有空格</p><p>另外，我们也可以在在/alidata/website-info.log文件中查看到安装软件的版本信息</p><h2 id="9-清空phpwind文件夹"><a href="#9-清空phpwind文件夹" class="headerlink" title="9.清空phpwind文件夹"></a>9.清空phpwind文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /alidata/www/phpwind</span><br><span class="line">rm -rf /alidata/www/phpwind/*</span><br></pre></td></tr></table></figure><h2 id="10-安装phpMyAdmin"><a href="#10-安装phpMyAdmin" class="headerlink" title="10.安装phpMyAdmin"></a>10.安装phpMyAdmin</h2><p>下载数据库管理软件:<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwbXlhZG1pbi5uZXQvZG93bmxvYWRzLw==" title="https://www.phpmyadmin.net/downloads/">phpMyAdmin<i class="fa fa-external-link"></i></span>,不要下载带有“betal”字样的版本，那是测试版。<br>排序规则选：utf8_general_ci</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://files.phpmyadmin.net/phpMyAdmin/4.9.1/phpMyAdmin-4.9.1-all-languages.tar.gz</span><br><span class="line">tar -zxvf phpMyAdmin-4.9.1-all-languages.tar.gz</span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="Linux下的解压命令小结"><a href="#Linux下的解压命令小结" class="headerlink" title="Linux下的解压命令小结"></a>Linux下的解压命令小结</h2><ul><li>unzip filename. zip</li><li>tar -zxvf filename. tar.gz</li><li>tar -Jxvf filename. tar.xz</li><li>tar -Zxvf filename. tar.Z</li><li>tar –help</li><li>tar -xvf filename. tar.gz tar -xvf filename</li></ul><h2 id="phpMyAdmin配置文件现在需要一个短语密码解决方法"><a href="#phpMyAdmin配置文件现在需要一个短语密码解决方法" class="headerlink" title="phpMyAdmin配置文件现在需要一个短语密码解决方法"></a>phpMyAdmin配置文件现在需要一个短语密码解决方法</h2><p>phpMyAdmin登陆之后，在其下方会出现配置文件现在需要一个短语密码的提示。</p><p>解决方法：</p><ul><li><p>1、将 phpMyAdmin/libraries/config.default.php中的$cfg[‘blowfish_secret’] = ‘’;</p><p>改成 $cfg[‘blowfish_secret’] = ‘thepie.top’;</p><p>(注：其中的’thepie.top′为随意的长字符串)</p></li><li><p>2、在phpMyAdmin目录中，打开config.sample.inc.php，17行</p><p>$cfg[‘blowfish_secret’] = ‘’;</p><p>改成 $cfg[‘blowfish_secret’] = ‘thepie.top’;</p><p>(注：其中的’thepie.top′为随意的长字符串)</p><p>这个密码用于Cookies的加密，以免多个PhpMyAdmin或者和其他程序共用Cookies时搞混。</p></li></ul><h2 id="变量-cfg-‘TempDir’-（-tmp-）无法访问。phpMyAdmin无法缓存模板文件，所以会运行缓慢。"><a href="#变量-cfg-‘TempDir’-（-tmp-）无法访问。phpMyAdmin无法缓存模板文件，所以会运行缓慢。" class="headerlink" title="变量 $cfg[‘TempDir’] （./tmp/）无法访问。phpMyAdmin无法缓存模板文件，所以会运行缓慢。"></a>变量 $cfg[‘TempDir’] （./tmp/）无法访问。phpMyAdmin无法缓存模板文件，所以会运行缓慢。</h2><p>出现这个的原因是 phpmyadmin的安装目录， tmp目录不存在，或者存在但是权限不对。解决的方法就是没有创建一下这个目录，给予正确的读写权限即可。<br>进入phpmyadmin的安装目录然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir tmp</span><br><span class="line">chmod 777 tmp</span><br></pre></td></tr></table></figure><p>phpmyadmin 提示的很清楚，这是个缓存目录，可以加快phpmyadmin的运行，即使不理睬这个警告信息，也不会影响程序的执行，就是执行的慢点。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装GUI图形界面</title>
      <link href="/ie/posts/bbe38b68.html"/>
      <url>/ie/posts/bbe38b68.html</url>
      
        <content type="html"><![CDATA[<p>当你安装CentOS7服务器版本的时候，系统默认是不会安装GUI的图形界面程序，这个需要手动安装CentOS7 Gnome GUI包。</p><a id="more"></a><p>在安装Gnome包之前，需要检查一下安装源(yum)是否正常，因为需要在yum命令来安装gnome包。</p><ul><li><p>第一步：先检查yum 是否安装，以及网络是否有网络。如果这两者都没有，先解决网络，在解决yum的安装。</p></li><li><p>第二步：在命令行下 输入下面的命令来安装Gnome包。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"GNOME Desktop"</span> <span class="string">"Graphical Administration Tools"</span></span><br></pre></td></tr></table></figure><ul><li>第三步：更新系统的运行级别。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target</span><br></pre></td></tr></table></figure><ul><li>第四步：重启机器。启动默认进入图形界面。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>Linux查看端口状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntulp |grep 8000</span><br></pre></td></tr></table></figure><p>杀进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 id</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> CentOS7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-数据可视化Echarts介绍</title>
      <link href="/ie/posts/f4e10e30.html"/>
      <url>/ie/posts/f4e10e30.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 数据可视化Echarts介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day11工作流调度器azkaban&数据可视化Echarts介绍/数据可视化%20Echarts介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Echarts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-工作流调度器Azkaban</title>
      <link href="/ie/posts/8485750c.html"/>
      <url>/ie/posts/8485750c.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 工作流调度器azkaban</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day11工作流调度器azkaban&数据可视化Echarts介绍/azkaban.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Azkaban </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Azkaban </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Sqoop数据迁移</title>
      <link href="/ie/posts/bfbc2e0b.html"/>
      <url>/ie/posts/bfbc2e0b.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF sqoop数据迁移</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day10sqoop数据迁移/sqoop.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Sqoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka-Manager监控工具的使用</title>
      <link href="/ie/posts/10cabcd3.html"/>
      <url>/ie/posts/10cabcd3.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka-manager监控工具的使用</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/8.kafka-manager监控工具的使用.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume与kafka的整合</title>
      <link href="/ie/posts/a4a39746.html"/>
      <url>/ie/posts/a4a39746.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF flume与kafka的整合</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/7.flume与kafka的整合.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka的配置文件的说明</title>
      <link href="/ie/posts/4e6873c5.html"/>
      <url>/ie/posts/4e6873c5.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的配置文件的说明</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/6.kafka的配置文件的说明.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka的数据的分区</title>
      <link href="/ie/posts/c8fc3430.html"/>
      <url>/ie/posts/c8fc3430.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的数据的分区</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/5.1kafka的数据的分区.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-kafka的javaAPI的使用</title>
      <link href="/ie/posts/32c5d0d9.html"/>
      <url>/ie/posts/32c5d0d9.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的javaAPI的使用</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/4.kafka的javaAPI的使用.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka的命令行的管理使用</title>
      <link href="/ie/posts/aa02a436.html"/>
      <url>/ie/posts/aa02a436.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的命令行的管理使用</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/3.kafka的命令行的管理使用.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka的安装</title>
      <link href="/ie/posts/f77eee2d.html"/>
      <url>/ie/posts/f77eee2d.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的安装</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/2.kafka的安装.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume的负载均衡loadbalancer</title>
      <link href="/ie/posts/c89a329f.html"/>
      <url>/ie/posts/c89a329f.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF flume的负载均衡loadbalancer</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/8.flume的负载均衡loadbalancer.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Kafka的介绍</title>
      <link href="/ie/posts/b9b7baa7.html"/>
      <url>/ie/posts/b9b7baa7.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF kafka的介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/1.kafka的介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-高可用Flume</title>
      <link href="/ie/posts/a105df5c.html"/>
      <url>/ie/posts/a105df5c.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 高可用Flume</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/7.高可用Flume.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume更多source和sink组件</title>
      <link href="/ie/posts/801b51ef.html"/>
      <url>/ie/posts/801b51ef.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Flume更多source和sink组件</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/6.更多source和sink组件.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume两个agent级联</title>
      <link href="/ie/posts/d8795dab.html"/>
      <url>/ie/posts/d8795dab.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Flume两个agent级联</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/5.两个agent级联.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume采集案例监控目录变化</title>
      <link href="/ie/posts/8ce758a7.html"/>
      <url>/ie/posts/8ce758a7.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Flume采集案例监控目录变化</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/3.采集案例监控目录变化.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume的安装部署</title>
      <link href="/ie/posts/75ee5fa.html"/>
      <url>/ie/posts/75ee5fa.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Flume的安装部署</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/2.Flume的安装部署.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Flume介绍</title>
      <link href="/ie/posts/a5eec80c.html"/>
      <url>/ie/posts/a5eec80c.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Flume介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/1.Flume介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Flume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-关于Yarn常用参数设置</title>
      <link href="/ie/posts/780b9de2.html"/>
      <url>/ie/posts/780b9de2.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 关于yarn常用参数设置</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/5.2.关于yarn常用参数设置.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Yarn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Yarn资源调度</title>
      <link href="/ie/posts/c5520104.html"/>
      <url>/ie/posts/c5520104.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Yarn资源调度</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/5.1.Yarn资源调度.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Yarn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hive语句综合练习</title>
      <link href="/ie/posts/b4fa1b4e.html"/>
      <url>/ie/posts/b4fa1b4e.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hive语句综合练习</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/4.2.hive语句综合练习(2).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hive创建数据库表</title>
      <link href="/ie/posts/48a224d1.html"/>
      <url>/ie/posts/48a224d1.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Hive创建数据库表</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/4.1创建数据库表(2).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hive基本操作之创建数据库</title>
      <link href="/ie/posts/7cb85200.html"/>
      <url>/ie/posts/7cb85200.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Hive基本操作之创建数据库</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/3.Hive基本操作之创建数据库.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hive基本概念</title>
      <link href="/ie/posts/f4524359.html"/>
      <url>/ie/posts/f4524359.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF Hive基本概念</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/1.Hive基本概念.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-索引建立</title>
      <link href="/ie/posts/cc03340e.html"/>
      <url>/ie/posts/cc03340e.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 索引建立</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/5.索引建立.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapReduce Shuffle过程</title>
      <link href="/ie/posts/c81f7fcf.html"/>
      <url>/ie/posts/c81f7fcf.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapReduce shuffle过程</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/4.MapReduceshuffle过程.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-ReduceTask工作机制以及reduceTask的并行度</title>
      <link href="/ie/posts/ea7b2ec0.html"/>
      <url>/ie/posts/ea7b2ec0.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF ReduceTask工作机制以及reduceTask的并行度</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/3.ReduceTask工作机制以及reduceTask的并行度.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapTask运行机制详解以及Map任务的并行度</title>
      <link href="/ie/posts/d178b062.html"/>
      <url>/ie/posts/d178b062.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapTask运行机制详解以及Map任务的并行度</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/2.MapTask运行机制详解以及Map任务的并行度.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapReduce的分区与reduceTask的数量</title>
      <link href="/ie/posts/a5d678be.html"/>
      <url>/ie/posts/a5d678be.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapReduce的分区与reduceTask的数量</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/1.MapReduce的分区与reduceTask的数量.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapReduce编程模型-WordCount实例分析</title>
      <link href="/ie/posts/695a6c4b.html"/>
      <url>/ie/posts/695a6c4b.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapReduce编程模型-WordCount实例分析</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/MapReduce编程模型-WordCount实例分析%20.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-WordCount示例编写本地模式</title>
      <link href="/ie/posts/46b39789.html"/>
      <url>/ie/posts/46b39789.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF WordCount示例编写本地模式</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/5.%20WordCount示例编写本地模式.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapReduce编程规范及示例编写</title>
      <link href="/ie/posts/610da529.html"/>
      <url>/ie/posts/610da529.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapReduce编程规范及示例编写</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/4.%20MapReduce编程规范及示例编写.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-MapReduce框架结构</title>
      <link href="/ie/posts/7def3950.html"/>
      <url>/ie/posts/7def3950.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF MapReduce框架结构</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/3.%20MapReduce框架结构.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HadoopMapReduce设计构思</title>
      <link href="/ie/posts/b0ef01f5.html"/>
      <url>/ie/posts/b0ef01f5.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HadoopMapReduce设计构思</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/2.%20HadoopMapReduce设计构思.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-理解MapReduce思想</title>
      <link href="/ie/posts/7d6b1f3c.html"/>
      <url>/ie/posts/7d6b1f3c.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 理解MapReduce思想</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/1.%20理解MapReduce思想.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的JavaAPI操作</title>
      <link href="/ie/posts/a3ed1548.html"/>
      <url>/ie/posts/a3ed1548.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的JavaAPI操作</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/9.HDFS的JavaAPI操作.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> HDFS </tag>
            
            <tag> JavaAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的文件读取过程</title>
      <link href="/ie/posts/6e430c9c.html"/>
      <url>/ie/posts/6e430c9c.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的文件读取过程</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/8.HDFS的文件读取过程.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的文件写入过程</title>
      <link href="/ie/posts/4edeccca.html"/>
      <url>/ie/posts/4edeccca.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的文件写入过程</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/7.HDFS的文件写入过程.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的元数据信息FSimage以及edits和secondaryNN的作用</title>
      <link href="/ie/posts/fec1c989.html"/>
      <url>/ie/posts/fec1c989.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的元数据信息FSimage以及edits和secondaryNN的作用</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/6.HDFS的元数据信息FSimage以及edits和secondaryNN的作用.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hdfs的架构之文件的文件副本机制</title>
      <link href="/ie/posts/787a8307.html"/>
      <url>/ie/posts/787a8307.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hdfs的架构之文件的文件副本机制</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/5.hdfs的架构之文件的文件副本机制.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的架构图之基础架构</title>
      <link href="/ie/posts/bb7c60d.html"/>
      <url>/ie/posts/bb7c60d.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的架构图之基础架构</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/4.HDFS的架构图之基础架构.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的来源</title>
      <link href="/ie/posts/e981c79e.html"/>
      <url>/ie/posts/e981c79e.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的来源</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/3.HDFS的来源.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS分布式文件系统设计目标</title>
      <link href="/ie/posts/6acc7206.html"/>
      <url>/ie/posts/6acc7206.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS分布式文件系统设计目标</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/2.HDFS分布式文件系统设计目标.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-分布式文件系统详细介绍</title>
      <link href="/ie/posts/72b49ca2.html"/>
      <url>/ie/posts/72b49ca2.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 分布式文件系统详细介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/1.分布式文件系统详细介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-CDH伪分布式环境搭建</title>
      <link href="/ie/posts/b387b8d5.html"/>
      <url>/ie/posts/b387b8d5.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF CDH伪分布式环境搭建</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/4.CDH伪分布式环境搭建.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS的命令行使用</title>
      <link href="/ie/posts/fb97a8a5.html"/>
      <url>/ie/posts/fb97a8a5.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS的命令行使用</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/3.HDFS的命令行使用.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-HDFS入门介绍</title>
      <link href="/ie/posts/87e9dc75.html"/>
      <url>/ie/posts/87e9dc75.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF HDFS入门介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/2.HDFS入门介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hadoop集群初体验</title>
      <link href="/ie/posts/980d646e.html"/>
      <url>/ie/posts/980d646e.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hadoop集群初体验</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/1.hadoop集群初体验.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hadoop三种架构介绍（高可用分布式环境介绍以及安装）</title>
      <link href="/ie/posts/1e1e5118.html"/>
      <url>/ie/posts/1e1e5118.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hadoop三种架构介绍（高可用分布式环境介绍以及安装）</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.3apachehadoop三种架构介绍(高可用分布式环境介绍以及安装).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术</title>
      <link href="/ie/posts/1009d3f6.html"/>
      <url>/ie/posts/1009d3f6.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hadoop三种架构介绍（伪分布介绍以及安装）</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.2apachehadoop三种架构介绍(伪分布介绍以及安装).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Apache hadoop三种架构介绍（standAlone)</title>
      <link href="/ie/posts/e00c1bc.html"/>
      <url>/ie/posts/e00c1bc.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF apache hadoop三种架构介绍（standAlone)</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.1apachehadoop三种架构介绍(standAlone).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-hadoop的架构模型（1.x，2.x的各种架构模型介绍）</title>
      <link href="/ie/posts/429246c5.html"/>
      <url>/ie/posts/429246c5.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hadoop的架构模型（1.x，2.x的各种架构模型介绍）</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/4.hadoop的架构模型(1.x,2.x的各种架构模型介绍).pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-三大公司发行版本介绍</title>
      <link href="/ie/posts/bfb9db00.html"/>
      <url>/ie/posts/bfb9db00.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 三大公司发行版本介绍</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/3.三大公司发型版本介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Hadoop的介绍以及发展历史</title>
      <link href="/ie/posts/3098d714.html"/>
      <url>/ie/posts/3098d714.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF hadoop的介绍以及发展历史</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/1.hadoop的介绍以及发展历史.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-Zookeeper的介绍以及集群环境搭建</title>
      <link href="/ie/posts/f1ab62f1.html"/>
      <url>/ie/posts/f1ab62f1.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF zookeeper的介绍以及集群环境搭建</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/4.zookeeper的介绍以及集群环境搭建.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> Zookeeper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-分布式集群</title>
      <link href="/ie/posts/897831fa.html"/>
      <url>/ie/posts/897831fa.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 分布式集群</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/3.分布式集群.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> 大数据集群环境准备 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> 大数据集群环境准备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-大数据集群环境准备</title>
      <link href="/ie/posts/c16b9d82.html"/>
      <url>/ie/posts/c16b9d82.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 大数据集群环境准备</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/2.大数据集群环境准备.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> 大数据集群环境准备 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> 大数据集群环境准备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术-三台虚拟机创建并联网</title>
      <link href="/ie/posts/e821aeca.html"/>
      <url>/ie/posts/e821aeca.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 三台虚拟机创建并联网</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/1.三台虚拟机创建并联网.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 大数据处理技术 </category>
          
          <category> 大数据集群环境准备 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 大数据处理技术 </tag>
            
            <tag> 大数据集群环境准备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据处理技术</title>
      <link href="/ie/posts/1009d3f6.html"/>
      <url>/ie/posts/1009d3f6.html</url>
      
        <content type="html"><![CDATA[<p>大数据处理技术 PDF 实训资料汇总</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL0JpZ0RhdGE=" title="https://github.com/MHuiG/BigData">GitHub<i class="fa fa-external-link"></i></span></p><h1 id="day01大数据集群环境准备-amp-zookeeper的介绍以及集群环境搭建"><a href="#day01大数据集群环境准备-amp-zookeeper的介绍以及集群环境搭建" class="headerlink" title="day01大数据集群环境准备&amp;zookeeper的介绍以及集群环境搭建"></a>day01大数据集群环境准备&amp;zookeeper的介绍以及集群环境搭建</h1><h2 id="三台虚拟机创建并联网"><a href="#三台虚拟机创建并联网" class="headerlink" title="三台虚拟机创建并联网"></a>三台虚拟机创建并联网</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/1.三台虚拟机创建并联网.pdf" height></div><h2 id="大数据集群环境准备"><a href="#大数据集群环境准备" class="headerlink" title="大数据集群环境准备"></a>大数据集群环境准备</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/2.大数据集群环境准备.pdf" height></div><h2 id="分布式集群"><a href="#分布式集群" class="headerlink" title="分布式集群"></a>分布式集群</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/3.分布式集群.pdf" height></div><h2 id="zookeeper的介绍以及集群环境搭建"><a href="#zookeeper的介绍以及集群环境搭建" class="headerlink" title="zookeeper的介绍以及集群环境搭建"></a>zookeeper的介绍以及集群环境搭建</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day01大数据集群环境准备&zookeeper的介绍以及集群环境搭建/4.zookeeper的介绍以及集群环境搭建.pdf" height></div><h1 id="day02大数据发展简史及环境安装"><a href="#day02大数据发展简史及环境安装" class="headerlink" title="day02大数据发展简史及环境安装"></a>day02大数据发展简史及环境安装</h1><h2 id="hadoop的介绍以及发展历史"><a href="#hadoop的介绍以及发展历史" class="headerlink" title="hadoop的介绍以及发展历史"></a>hadoop的介绍以及发展历史</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/1.hadoop的介绍以及发展历史.pdf" height></div><h2 id="hadoop的历史版本介绍"><a href="#hadoop的历史版本介绍" class="headerlink" title="hadoop的历史版本介绍"></a>hadoop的历史版本介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/2.hadoop的历史版本介绍.pdf" height></div><h2 id="三大公司发行版本介绍"><a href="#三大公司发行版本介绍" class="headerlink" title="三大公司发行版本介绍"></a>三大公司发行版本介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/3.三大公司发型版本介绍.pdf" height></div><h2 id="hadoop的架构模型（1-x，2-x的各种架构模型介绍）"><a href="#hadoop的架构模型（1-x，2-x的各种架构模型介绍）" class="headerlink" title="hadoop的架构模型（1.x，2.x的各种架构模型介绍）"></a>hadoop的架构模型（1.x，2.x的各种架构模型介绍）</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/4.hadoop的架构模型(1.x,2.x的各种架构模型介绍).pdf" height></div><h2 id="apache-hadoop三种架构介绍（standAlone"><a href="#apache-hadoop三种架构介绍（standAlone" class="headerlink" title="apache hadoop三种架构介绍（standAlone)"></a>apache hadoop三种架构介绍（standAlone)</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.1apachehadoop三种架构介绍(standAlone).pdf" height></div><h2 id="apache-hadoop三种架构介绍（伪分布介绍以及安装）"><a href="#apache-hadoop三种架构介绍（伪分布介绍以及安装）" class="headerlink" title="apache hadoop三种架构介绍（伪分布介绍以及安装）"></a>apache hadoop三种架构介绍（伪分布介绍以及安装）</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.2apachehadoop三种架构介绍(伪分布介绍以及安装).pdf" height></div><h2 id="apache-hadoop三种架构介绍（高可用分布式环境介绍以及安装）"><a href="#apache-hadoop三种架构介绍（高可用分布式环境介绍以及安装）" class="headerlink" title="apache hadoop三种架构介绍（高可用分布式环境介绍以及安装）"></a>apache hadoop三种架构介绍（高可用分布式环境介绍以及安装）</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day02大数据发展简史及环境安装/5.3apachehadoop三种架构介绍(高可用分布式环境介绍以及安装).pdf" height></div><h1 id="day03Hadoop集群初体验-amp-HDFS的命令行使用"><a href="#day03Hadoop集群初体验-amp-HDFS的命令行使用" class="headerlink" title="day03Hadoop集群初体验&amp;HDFS的命令行使用"></a>day03Hadoop集群初体验&amp;HDFS的命令行使用</h1><h2 id="hadoop集群初体验"><a href="#hadoop集群初体验" class="headerlink" title="hadoop集群初体验"></a>hadoop集群初体验</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/1.hadoop集群初体验.pdf" height></div><h2 id="HDFS入门介绍"><a href="#HDFS入门介绍" class="headerlink" title="HDFS入门介绍"></a>HDFS入门介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/2.HDFS入门介绍.pdf" height></div><h2 id="HDFS的命令行使用"><a href="#HDFS的命令行使用" class="headerlink" title="HDFS的命令行使用"></a>HDFS的命令行使用</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/3.HDFS的命令行使用.pdf" height></div><h2 id="CDH伪分布式环境搭建"><a href="#CDH伪分布式环境搭建" class="headerlink" title="CDH伪分布式环境搭建"></a>CDH伪分布式环境搭建</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day03Hadoop集群初体验&HDFS的命令行使用/4.CDH伪分布式环境搭建.pdf" height></div><h1 id="day04分布式文件系统HDF"><a href="#day04分布式文件系统HDF" class="headerlink" title="day04分布式文件系统HDF"></a>day04分布式文件系统HDF</h1><h2 id="分布式文件系统详细介绍"><a href="#分布式文件系统详细介绍" class="headerlink" title="分布式文件系统详细介绍"></a>分布式文件系统详细介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/1.分布式文件系统详细介绍.pdf" height></div><h2 id="HDFS分布式文件系统设计目标"><a href="#HDFS分布式文件系统设计目标" class="headerlink" title="HDFS分布式文件系统设计目标"></a>HDFS分布式文件系统设计目标</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/2.HDFS分布式文件系统设计目标.pdf" height></div><h2 id="HDFS的来源"><a href="#HDFS的来源" class="headerlink" title="HDFS的来源"></a>HDFS的来源</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/3.HDFS的来源.pdf" height></div><h2 id="HDFS的架构图之基础架构"><a href="#HDFS的架构图之基础架构" class="headerlink" title="HDFS的架构图之基础架构"></a>HDFS的架构图之基础架构</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/4.HDFS的架构图之基础架构.pdf" height></div><h2 id="hdfs的架构之文件的文件副本机制"><a href="#hdfs的架构之文件的文件副本机制" class="headerlink" title="hdfs的架构之文件的文件副本机制"></a>hdfs的架构之文件的文件副本机制</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/5.hdfs的架构之文件的文件副本机制.pdf" height></div><h2 id="HDFS的元数据信息FSimage以及edits和secondaryNN的作用"><a href="#HDFS的元数据信息FSimage以及edits和secondaryNN的作用" class="headerlink" title="HDFS的元数据信息FSimage以及edits和secondaryNN的作用"></a>HDFS的元数据信息FSimage以及edits和secondaryNN的作用</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/6.HDFS的元数据信息FSimage以及edits和secondaryNN的作用.pdf" height></div><h2 id="HDFS的文件写入过程"><a href="#HDFS的文件写入过程" class="headerlink" title="HDFS的文件写入过程"></a>HDFS的文件写入过程</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/7.HDFS的文件写入过程.pdf" height></div><h2 id="HDFS的文件读取过程"><a href="#HDFS的文件读取过程" class="headerlink" title="HDFS的文件读取过程"></a>HDFS的文件读取过程</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/8.HDFS的文件读取过程.pdf" height></div><h2 id="HDFS的JavaAPI操作"><a href="#HDFS的JavaAPI操作" class="headerlink" title="HDFS的JavaAPI操作"></a>HDFS的JavaAPI操作</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day04分布式文件系统HDF/9.HDFS的JavaAPI操作.pdf" height></div><h1 id="day05MapReduce编程模型-WordCount实例分析"><a href="#day05MapReduce编程模型-WordCount实例分析" class="headerlink" title="day05MapReduce编程模型-WordCount实例分析"></a>day05MapReduce编程模型-WordCount实例分析</h1><h2 id="理解MapReduce思想"><a href="#理解MapReduce思想" class="headerlink" title="理解MapReduce思想"></a>理解MapReduce思想</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/1.%20理解MapReduce思想.pdf" height></div><h2 id="HadoopMapReduce设计构思"><a href="#HadoopMapReduce设计构思" class="headerlink" title="HadoopMapReduce设计构思"></a>HadoopMapReduce设计构思</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/2.%20HadoopMapReduce设计构思.pdf" height></div><h2 id="MapReduce框架结构"><a href="#MapReduce框架结构" class="headerlink" title="MapReduce框架结构"></a>MapReduce框架结构</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/3.%20MapReduce框架结构.pdf" height></div><h2 id="MapReduce编程规范及示例编写"><a href="#MapReduce编程规范及示例编写" class="headerlink" title="MapReduce编程规范及示例编写"></a>MapReduce编程规范及示例编写</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/4.%20MapReduce编程规范及示例编写.pdf" height></div><h2 id="WordCount示例编写本地模式"><a href="#WordCount示例编写本地模式" class="headerlink" title="WordCount示例编写本地模式"></a>WordCount示例编写本地模式</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/5.%20WordCount示例编写本地模式.pdf" height></div><h2 id="MapReduce编程模型-WordCount实例分析"><a href="#MapReduce编程模型-WordCount实例分析" class="headerlink" title="MapReduce编程模型-WordCount实例分析"></a>MapReduce编程模型-WordCount实例分析</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day05MapReduce编程模型-WordCount实例分析/MapReduce编程模型-WordCount实例分析%20.pdf" height></div><h1 id="day06MapReduce的运行机制"><a href="#day06MapReduce的运行机制" class="headerlink" title="day06MapReduce的运行机制"></a>day06MapReduce的运行机制</h1><h2 id="MapReduce的分区与reduceTask的数量"><a href="#MapReduce的分区与reduceTask的数量" class="headerlink" title="MapReduce的分区与reduceTask的数量"></a>MapReduce的分区与reduceTask的数量</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/1.MapReduce的分区与reduceTask的数量.pdf" height></div><h2 id="MapTask运行机制详解以及Map任务的并行度"><a href="#MapTask运行机制详解以及Map任务的并行度" class="headerlink" title="MapTask运行机制详解以及Map任务的并行度"></a>MapTask运行机制详解以及Map任务的并行度</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/2.MapTask运行机制详解以及Map任务的并行度.pdf" height></div><h2 id="ReduceTask工作机制以及reduceTask的并行度"><a href="#ReduceTask工作机制以及reduceTask的并行度" class="headerlink" title="ReduceTask工作机制以及reduceTask的并行度"></a>ReduceTask工作机制以及reduceTask的并行度</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/3.ReduceTask工作机制以及reduceTask的并行度.pdf" height></div><h2 id="MapReduceshuffle过程"><a href="#MapReduceshuffle过程" class="headerlink" title="MapReduceshuffle过程"></a>MapReduceshuffle过程</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/4.MapReduceshuffle过程.pdf" height></div><h2 id="索引建立"><a href="#索引建立" class="headerlink" title="索引建立"></a>索引建立</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day06MapReduce的运行机制/5.索引建立.pdf" height></div><h1 id="day07Yarn资源调度及Hive初步"><a href="#day07Yarn资源调度及Hive初步" class="headerlink" title="day07Yarn资源调度及Hive初步"></a>day07Yarn资源调度及Hive初步</h1><h2 id="Hive基本概念"><a href="#Hive基本概念" class="headerlink" title="Hive基本概念"></a>Hive基本概念</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/1.Hive基本概念.pdf" height></div><h2 id="Hive的安装部署"><a href="#Hive的安装部署" class="headerlink" title="Hive的安装部署"></a>Hive的安装部署</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/2.Hive的安装部署.pdf" height></div><h2 id="Hive基本操作之创建数据库"><a href="#Hive基本操作之创建数据库" class="headerlink" title="Hive基本操作之创建数据库"></a>Hive基本操作之创建数据库</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/3.Hive基本操作之创建数据库.pdf" height></div><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/4.1创建数据库表(2).pdf" height></div><h2 id="hive语句综合练习"><a href="#hive语句综合练习" class="headerlink" title="hive语句综合练习"></a>hive语句综合练习</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/4.2.hive语句综合练习(2).pdf" height></div><h2 id="Yarn资源调度"><a href="#Yarn资源调度" class="headerlink" title="Yarn资源调度"></a>Yarn资源调度</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/5.1.Yarn资源调度.pdf" height></div><h2 id="关于yarn常用参数设置"><a href="#关于yarn常用参数设置" class="headerlink" title="关于yarn常用参数设置"></a>关于yarn常用参数设置</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day07Yarn资源调度及Hive初步/5.2.关于yarn常用参数设置.pdf" height></div><h1 id="day08Flume数据采集"><a href="#day08Flume数据采集" class="headerlink" title="day08Flume数据采集"></a>day08Flume数据采集</h1><h2 id="Flume介绍"><a href="#Flume介绍" class="headerlink" title="Flume介绍"></a>Flume介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/1.Flume介绍.pdf" height></div><h2 id="Flume的安装部署"><a href="#Flume的安装部署" class="headerlink" title="Flume的安装部署"></a>Flume的安装部署</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/2.Flume的安装部署.pdf" height></div><h2 id="采集案例监控目录变化"><a href="#采集案例监控目录变化" class="headerlink" title="采集案例监控目录变化"></a>采集案例监控目录变化</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/3.采集案例监控目录变化.pdf" height></div><h2 id="采集案例监控文件的变化"><a href="#采集案例监控文件的变化" class="headerlink" title="采集案例监控文件的变化"></a>采集案例监控文件的变化</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/4.采集案例监控文件的变化.pdf" height></div><h2 id="两个agent级联"><a href="#两个agent级联" class="headerlink" title="两个agent级联"></a>两个agent级联</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/5.两个agent级联.pdf" height></div><h2 id="更多source和sink组件"><a href="#更多source和sink组件" class="headerlink" title="更多source和sink组件"></a>更多source和sink组件</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/6.更多source和sink组件.pdf" height></div><h2 id="高可用Flume"><a href="#高可用Flume" class="headerlink" title="高可用Flume"></a>高可用Flume</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/7.高可用Flume.pdf" height></div><h2 id="flume的负载均衡loadbalancer"><a href="#flume的负载均衡loadbalancer" class="headerlink" title="flume的负载均衡loadbalancer"></a>flume的负载均衡loadbalancer</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day08Flume数据采集/8.flume的负载均衡loadbalancer.pdf" height></div><h1 id="day09消息队列Kafka"><a href="#day09消息队列Kafka" class="headerlink" title="day09消息队列Kafka"></a>day09消息队列Kafka</h1><h2 id="kafka的介绍"><a href="#kafka的介绍" class="headerlink" title="kafka的介绍"></a>kafka的介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/1.kafka的介绍.pdf" height></div><h2 id="kafka的安装"><a href="#kafka的安装" class="headerlink" title="kafka的安装"></a>kafka的安装</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/2.kafka的安装.pdf" height></div><h2 id="kafka的命令行的管理使用"><a href="#kafka的命令行的管理使用" class="headerlink" title="kafka的命令行的管理使用"></a>kafka的命令行的管理使用</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/3.kafka的命令行的管理使用.pdf" height></div><h2 id="kafka的javaAPI的使用"><a href="#kafka的javaAPI的使用" class="headerlink" title="kafka的javaAPI的使用"></a>kafka的javaAPI的使用</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/4.kafka的javaAPI的使用.pdf" height></div><h2 id="kafka的数据的分区"><a href="#kafka的数据的分区" class="headerlink" title="kafka的数据的分区"></a>kafka的数据的分区</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/5.1kafka的数据的分区.pdf" height></div><h2 id="kafka的配置文件的说明"><a href="#kafka的配置文件的说明" class="headerlink" title="kafka的配置文件的说明"></a>kafka的配置文件的说明</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/6.kafka的配置文件的说明.pdf" height></div><h2 id="flume与kafka的整合"><a href="#flume与kafka的整合" class="headerlink" title="flume与kafka的整合"></a>flume与kafka的整合</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/7.flume与kafka的整合.pdf" height></div><h2 id="kafka-manager监控工具的使用"><a href="#kafka-manager监控工具的使用" class="headerlink" title="kafka-manager监控工具的使用"></a>kafka-manager监控工具的使用</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/8.kafka-manager监控工具的使用.pdf" height></div><h2 id="CDH版本的zookeeper环境搭建"><a href="#CDH版本的zookeeper环境搭建" class="headerlink" title="CDH版本的zookeeper环境搭建"></a>CDH版本的zookeeper环境搭建</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day09消息队列Kafka/CDH版本的zookeeper环境搭建.pdf" height></div><h1 id="day10sqoop数据迁移"><a href="#day10sqoop数据迁移" class="headerlink" title="day10sqoop数据迁移"></a>day10sqoop数据迁移</h1><h2 id="sqoop"><a href="#sqoop" class="headerlink" title="sqoop"></a>sqoop</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day10sqoop数据迁移/sqoop.pdf" height></div><h1 id="day11工作流调度器azkaban-amp-数据可视化Echarts介绍"><a href="#day11工作流调度器azkaban-amp-数据可视化Echarts介绍" class="headerlink" title="day11工作流调度器azkaban&amp;数据可视化Echarts介绍"></a>day11工作流调度器azkaban&amp;数据可视化Echarts介绍</h1><h2 id="azkaban"><a href="#azkaban" class="headerlink" title="azkaban"></a>azkaban</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day11工作流调度器azkaban&数据可视化Echarts介绍/azkaban.pdf" height></div><h2 id="数据可视化Echarts介绍"><a href="#数据可视化Echarts介绍" class="headerlink" title="数据可视化Echarts介绍"></a>数据可视化Echarts介绍</h2><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/BigData/PDF/day11工作流调度器azkaban&数据可视化Echarts介绍/数据可视化%20Echarts介绍.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模资料</title>
      <link href="/ie/posts/6cfc95e.html"/>
      <url>/ie/posts/6cfc95e.html</url>
      
        <content type="html"><![CDATA[<p>汇总司守奎老师的讲义 程序 习题解答等</p><a id="more"></a><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01IdWlHL01DTQ==" title="https://github.com/MHuiG/MCM">GitHub<i class="fa fa-external-link"></i></span></p><h1 id="封面"><a href="#封面" class="headerlink" title="封面"></a>封面</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/封面.pdf" height></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/前言.pdf" height></div><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/目录.pdf" height></div><h1 id="第一章-线性规划"><a href="#第一章-线性规划" class="headerlink" title="第一章 线性规划"></a>第一章 线性规划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/1第一章%20%20线性规划.pdf" height></div><h1 id="第二章-整数规划"><a href="#第二章-整数规划" class="headerlink" title="第二章 整数规划"></a>第二章 整数规划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/2第二章%20%20整数规划.pdf" height></div><h1 id="第三章-非线性规划"><a href="#第三章-非线性规划" class="headerlink" title="第三章 非线性规划"></a>第三章 非线性规划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/3第三章%20%20非线性规划.pdf" height></div><h1 id="第四章-动态规划"><a href="#第四章-动态规划" class="headerlink" title="第四章 动态规划"></a>第四章 动态规划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/4第四章%20%20动态规划.pdf" height></div><h1 id="第五章-图与网络"><a href="#第五章-图与网络" class="headerlink" title="第五章 图与网络"></a>第五章 图与网络</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/5第五章%20%20图与网络.pdf" height></div><h1 id="第六章-排队论"><a href="#第六章-排队论" class="headerlink" title="第六章 排队论"></a>第六章 排队论</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/6第六章%20排队论.pdf" height></div><h1 id="第七章-对策论"><a href="#第七章-对策论" class="headerlink" title="第七章 对策论"></a>第七章 对策论</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/7第七章%20对策论.pdf" height></div><h1 id="第八章-层次分析法"><a href="#第八章-层次分析法" class="headerlink" title="第八章 层次分析法"></a>第八章 层次分析法</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/8第八章%20%20层次分析法.pdf" height></div><h1 id="第九章-插值与拟合"><a href="#第九章-插值与拟合" class="headerlink" title="第九章 插值与拟合"></a>第九章 插值与拟合</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/9第九章%20插值与拟合.pdf" height></div><h1 id="第十章-数据的统计描述和分析"><a href="#第十章-数据的统计描述和分析" class="headerlink" title="第十章 数据的统计描述和分析"></a>第十章 数据的统计描述和分析</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/10第十章%20数据的统计描述和分析.pdf" height></div><h1 id="第十一章-方差分析"><a href="#第十一章-方差分析" class="headerlink" title="第十一章 方差分析"></a>第十一章 方差分析</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/11第十一章%20方差分析.pdf" height></div><h1 id="第十二章-回归分析"><a href="#第十二章-回归分析" class="headerlink" title="第十二章 回归分析"></a>第十二章 回归分析</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/12第十二章%20回归分析.pdf" height></div><h1 id="第十三章-微分方程建模"><a href="#第十三章-微分方程建模" class="headerlink" title="第十三章 微分方程建模"></a>第十三章 微分方程建模</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/13第十三章%20微分方程建模.pdf" height></div><h1 id="第十四章-稳定状态模型"><a href="#第十四章-稳定状态模型" class="headerlink" title="第十四章 稳定状态模型"></a>第十四章 稳定状态模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/14第十四章%20稳定状态模型.pdf" height></div><h1 id="第十五章-常微分方程的解法"><a href="#第十五章-常微分方程的解法" class="headerlink" title="第十五章 常微分方程的解法"></a>第十五章 常微分方程的解法</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/15第十五章%20常微分方程的解法.pdf" height></div><h1 id="第十六章-差分方程模型"><a href="#第十六章-差分方程模型" class="headerlink" title="第十六章 差分方程模型"></a>第十六章 差分方程模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/16第十六章%20差分方程模型.pdf" height></div><h1 id="第十七章-马氏链模型"><a href="#第十七章-马氏链模型" class="headerlink" title="第十七章 马氏链模型"></a>第十七章 马氏链模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/17第十七章%20马氏链模型.pdf" height></div><h1 id="第十八章-变分法模型"><a href="#第十八章-变分法模型" class="headerlink" title="第十八章 变分法模型"></a>第十八章 变分法模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/18第十八章%20变分法模型.pdf" height></div><h1 id="第十九章-神经网络模型"><a href="#第十九章-神经网络模型" class="headerlink" title="第十九章 神经网络模型"></a>第十九章 神经网络模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/19第十九章%20神经网络模型.pdf" height></div><h1 id="第二十章-偏微分方程的数值解"><a href="#第二十章-偏微分方程的数值解" class="headerlink" title="第二十章 偏微分方程的数值解"></a>第二十章 偏微分方程的数值解</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/20第二十章%20偏微分方程的数值解.pdf" height></div><h1 id="第二十一章-目标规划"><a href="#第二十一章-目标规划" class="headerlink" title="第二十一章 目标规划"></a>第二十一章 目标规划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/21第二十一章%20目标规划.pdf" height></div><h1 id="第二十二章-模糊数学模型"><a href="#第二十二章-模糊数学模型" class="headerlink" title="第二十二章 模糊数学模型"></a>第二十二章 模糊数学模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/22第二十二章%20%20模糊数学模型.pdf" height></div><h1 id="第二十三章-现代优化算法"><a href="#第二十三章-现代优化算法" class="headerlink" title="第二十三章 现代优化算法"></a>第二十三章 现代优化算法</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/23第二十三章%20%20现代优化算法.pdf" height></div><h1 id="第二十四章-时间序列模型"><a href="#第二十四章-时间序列模型" class="headerlink" title="第二十四章 时间序列模型"></a>第二十四章 时间序列模型</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/24第二十四章%20%20%20时间序列模型.pdf" height></div><h1 id="第二十五章-灰色系统理论及其应用"><a href="#第二十五章-灰色系统理论及其应用" class="headerlink" title="第二十五章 灰色系统理论及其应用"></a>第二十五章 灰色系统理论及其应用</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/25第二十五章%20%20灰色系统理论及其应用.pdf" height></div><h1 id="第二十六章-多元分析"><a href="#第二十六章-多元分析" class="headerlink" title="第二十六章 多元分析"></a>第二十六章 多元分析</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/26第二十六章%20%20多元分析.pdf" height></div><h1 id="第二十七章-偏最小二乘回归分析"><a href="#第二十七章-偏最小二乘回归分析" class="headerlink" title="第二十七章 偏最小二乘回归分析"></a>第二十七章 偏最小二乘回归分析</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/27第二十七章%20%20偏最小二乘回归分析.pdf" height></div><h1 id="第二十八章-存贮论"><a href="#第二十八章-存贮论" class="headerlink" title="第二十八章 存贮论"></a>第二十八章 存贮论</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/28第二十八章%20%20存贮论.pdf" height></div><h1 id="第二十九章-经济与金融中的优化问题"><a href="#第二十九章-经济与金融中的优化问题" class="headerlink" title="第二十九章 经济与金融中的优化问题"></a>第二十九章 经济与金融中的优化问题</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/29第二十九章%20%20经济与金融中的优化问题.pdf" height></div><h1 id="第三十章-生产与服务运作管理中的优化问题"><a href="#第三十章-生产与服务运作管理中的优化问题" class="headerlink" title="第三十章 生产与服务运作管理中的优化问题"></a>第三十章 生产与服务运作管理中的优化问题</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/30第三十章%20%20生产与服务运作管理中的优化问题.pdf" height></div><h1 id="第三十一章-支持向量机"><a href="#第三十一章-支持向量机" class="headerlink" title="第三十一章 支持向量机"></a>第三十一章 支持向量机</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/31第三十一章%20%20支持向量机.pdf" height></div><h1 id="第三十二章-作业计划"><a href="#第三十二章-作业计划" class="headerlink" title="第三十二章 作业计划"></a>第三十二章 作业计划</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/32第三十二章%20%20作业计划.pdf" height></div><h1 id="附录一-Matlab入门"><a href="#附录一-Matlab入门" class="headerlink" title="附录一 Matlab入门"></a>附录一 Matlab入门</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/33附录一%20%20Matlab入门.pdf" height></div><h1 id="附录二-Matlab在线性代数中的应用"><a href="#附录二-Matlab在线性代数中的应用" class="headerlink" title="附录二 Matlab在线性代数中的应用"></a>附录二 Matlab在线性代数中的应用</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/34附录二%20%20Matlab在线性代数中的应用.pdf" height></div><h1 id="附录三-运筹学的LINGO软件"><a href="#附录三-运筹学的LINGO软件" class="headerlink" title="附录三 运筹学的LINGO软件"></a>附录三 运筹学的LINGO软件</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/35附录三%20%20运筹学的LINGO软件.pdf" height></div><h1 id="附录四-Excel在统计分析与数量方法中的应用"><a href="#附录四-Excel在统计分析与数量方法中的应用" class="headerlink" title="附录四 Excel在统计分析与数量方法中的应用"></a>附录四 Excel在统计分析与数量方法中的应用</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/36附录四%20%20Excel在统计分析与数量方法中的应用.pdf" height></div><h1 id="附录五-SPSS在统计分析中的应用"><a href="#附录五-SPSS在统计分析中的应用" class="headerlink" title="附录五 SPSS在统计分析中的应用"></a>附录五 SPSS在统计分析中的应用</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/37附录五%20%20SPSS在统计分析中的应用.pdf" height></div><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/MCM/数学建模教材/38参考文献.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
            <tag> PDF </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化PDF资料</title>
      <link href="/ie/posts/98579906.html"/>
      <url>/ie/posts/98579906.html</url>
      
        <content type="html"><![CDATA[<p>汇总数据可视化PDF资料</p><a id="more"></a><h1 id="HTML的基本标签及语法"><a href="#HTML的基本标签及语法" class="headerlink" title="HTML的基本标签及语法"></a>HTML的基本标签及语法</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/HTML的基本标签及语法.pdf" height></div><h1 id="CSS语法规则"><a href="#CSS语法规则" class="headerlink" title="CSS语法规则"></a>CSS语法规则</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/CSS语法规则.pdf" height></div><h1 id="网页基本布局方式"><a href="#网页基本布局方式" class="headerlink" title="网页基本布局方式"></a>网页基本布局方式</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/网页基本布局方式.pdf" height></div><h1 id="自适应设计和响应式设计"><a href="#自适应设计和响应式设计" class="headerlink" title="自适应设计和响应式设计"></a>自适应设计和响应式设计</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/自适应设计和响应式设计.pdf" height></div><h1 id="js基本语法汇总"><a href="#js基本语法汇总" class="headerlink" title="js基本语法汇总"></a>js基本语法汇总</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/js基本语法汇总.pdf" height></div><h1 id="Ajax基本原理和概念"><a href="#Ajax基本原理和概念" class="headerlink" title="Ajax基本原理和概念"></a>Ajax基本原理和概念</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/Ajax基本原理和概念.pdf" height></div><h1 id="Ajax实现与后台服务通信"><a href="#Ajax实现与后台服务通信" class="headerlink" title="Ajax实现与后台服务通信"></a>Ajax实现与后台服务通信</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/Ajax实现与后台服务通信.pdf" height></div><h1 id="Echarts常用功能api"><a href="#Echarts常用功能api" class="headerlink" title="Echarts常用功能api"></a>Echarts常用功能api</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/Echarts常用功能api.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘PDF资料</title>
      <link href="/ie/posts/b59b6a41.html"/>
      <url>/ie/posts/b59b6a41.html</url>
      
        <content type="html"><![CDATA[<p>汇总数据挖掘PDF资料</p><a id="more"></a><h1 id="数据挖掘概念与特性"><a href="#数据挖掘概念与特性" class="headerlink" title="数据挖掘概念与特性"></a>数据挖掘概念与特性</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/数据挖掘概念与特性.pdf" height></div><h1 id="常用分类算法及原理"><a href="#常用分类算法及原理" class="headerlink" title="常用分类算法及原理"></a>常用分类算法及原理</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/常用分类算法及原理.pdf" height></div><h1 id="常用降维算法及原理"><a href="#常用降维算法及原理" class="headerlink" title="常用降维算法及原理"></a>常用降维算法及原理</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/常用降维算法及原理.pdf" height></div><h1 id="常用聚类算法及原理"><a href="#常用聚类算法及原理" class="headerlink" title="常用聚类算法及原理"></a>常用聚类算法及原理</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/常用聚类算法及原理.pdf" height></div><h1 id="关联分析及常用算法"><a href="#关联分析及常用算法" class="headerlink" title="关联分析及常用算法"></a>关联分析及常用算法</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/关联分析及常用算法.pdf" height></div><h1 id="常用推荐算法及原理"><a href="#常用推荐算法及原理" class="headerlink" title="常用推荐算法及原理"></a>常用推荐算法及原理</h1><div class="pdf" target="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/PDF/dtb/常用推荐算法及原理.pdf" height></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> PDF </tag>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特征和分类器</title>
      <link href="/ie/posts/483290b5.html"/>
      <url>/ie/posts/483290b5.html</url>
      
        <content type="html"><![CDATA[<p>特征提取和分类是典型计算机视觉系统的两个关键阶段。</p><p>视觉系统的准确性、稳健性和效率在很大程度上取决于图像特征，和分类器的质量。因此，目标是从输入图像中提取信息丰富的、可靠的特征，以便能够开发出很大程度上独立于领域理论的分类。</p><a id="more"></a><h1 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h1><p>特征是任何独特的方面或特性，用于解决与特定应用相关的计算任务。</p><p>n个特征的组合可以表示成n维向量，称为特征向量。特征向量的质量取决于其区分不同类别的图像样本的能力。</p><p>来自同一类的图像样本应该有相似的特征值，来自不同类的图像应具有不同的特征值。</p><h1 id="分类器"><a href="#分类器" class="headerlink" title="分类器"></a>分类器</h1><p>分类器是现代计算机视觉和模式识别的核心。</p><p>分类器的任务是使用特征向量对图像或感兴趣区域（RoI）划分类别。</p><p>分类任务的困难程度取决于来自相同类别的图像的特征值的可变性，以及相对于来自不同类别图像的特征值的差异性。</p><p>但是，完美的分类性能通常是不可能的。这主要是因为：</p><ul><li>噪声（以阴影、遮挡、透视扭曲等形式）</li><li>异常值</li><li>模糊性</li><li>缺少标签</li><li>仅有小训练样本可用</li><li>训练数据样本中正/负覆盖的不平衡</li></ul><h1 id="传统特征描述符"><a href="#传统特征描述符" class="headerlink" title="传统特征描述符"></a>传统特征描述符</h1><p>传统（手工设计）特征提取方法可分为两大类：</p><ul><li>全局</li><li>局部</li></ul><p>全局特征提取方法定义了一组有效描述整个图像的全局特征。因此形状细节被忽略。全局特征也不适用于识别部分遮挡的对象。</p><p>局部特征提取方法提取关键点周围的局部区域，由此可以更好的处理遮挡。</p><p>检测关键点，并在他们周围构建描述符的方法：</p><p>局部描述符（如HOG、SIFT、SURF、FREAK、ORB、BRISK、BRIEF、LIOP）<br>………….</p><h1 id="方向梯度直方图"><a href="#方向梯度直方图" class="headerlink" title="方向梯度直方图"></a>方向梯度直方图</h1><p>HOG是一个特征描述符，用于自动检测图像中的对象。HOG描述符对图像中局部部分的梯度方向的分布进行编码。</p><p>HOG背后的想法是可以通过边缘方向的直方图来描述图像内的对象外观和形状。</p><h2 id="1-梯度计算"><a href="#1-梯度计算" class="headerlink" title="1.梯度计算"></a>1.梯度计算</h2><p>第一步是计算梯度值。在图像的水平和垂直方向上，执行一维中心点离散微分模板。具体的说，该方法需要用以下滤波器内核处理灰度图像：</p><p>$$f_x=[-1\ \ 0 \ \ +1],f_y=[-1\ \ 0\ \ +1]^T$$</p><p>因此给定一个图像$I$，以下卷积操作（表示为 $*$）得出图像$I$在$x$和$y$方向的导数：</p><p>$$I_x=I*f_x,I_y=I*f_y$$</p><p>因此，梯度的方向$\theta$和梯度的大小$\vert g \vert$计算如下：</p><p>$$\theta=\arctan\frac{I_y}{I_x},\vert g \vert=\sqrt[2]{I^2_x+I^2_y}$$</p><ul><li>CNN也在层中使用卷积运算，然而主要区别在于不使用手工设计的滤波器，CNN使用可训练的滤波器，使其具有高度的自适应性。</li><li>CNN也在层中使用卷积运算，然而主要区别在于不使用手工设计的滤波器，CNN使用可训练的滤波器，使其具有高度的自适应性。</li></ul><p><img alt="HOG描述符" data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133534.jpg"></p><h2 id="2-单元方向直方图"><a href="#2-单元方向直方图" class="headerlink" title="2.单元方向直方图"></a>2.单元方向直方图</h2><p>第二步是计算单元直方图。首先将图像分成小的（通常是8X8像素）单元。每个单元都有固定数量的梯度方向区间，他们均匀分布在$0 -180^。$或$0-360^。$之间，具体取决于梯度是有符号的还是无符号的。</p><p>单元内的每一个像素基于该像素处梯度的模对每一个梯度方向区间偷加权票。对于投票权重，可以是梯度大小，梯度大小的平方根或梯度大小的平方。</p><h2 id="3-描述符块"><a href="#3-描述符块" class="headerlink" title="3.描述符块"></a>3.描述符块</h2><p>为了处理光照和对比度的变化，通过将单元组合在一起形成更大的空间上相连的块，局部的归一化梯度强度。然后，HOG描述符是来自所有块区域内的、归一化的单元直方图部件的向量。</p><h2 id="4-块的归一化"><a href="#4-块的归一化" class="headerlink" title="4.块的归一化"></a>4.块的归一化</h2><p>最后一步是块描述符的归一化。设v是包含给定块中所有直方图的非归一化向量，‖为它的(k)阶范数（(k=1,2) ），(\epsilon)是一个小常量。归一化因子可以是如下之一：</p><p>$$L2范数:v=\frac{v}{\sqrt{|v|^2_2+\epsilon^2}}$$<br>或者</p><p>$$L1范数:v=\frac{v}{|v|_1+\epsilon}$$<br>或者</p><p>$$L1范数平方根:v=\sqrt{\frac{v}{|v|_1+\epsilon}}$$<br>还有另一个归一化因子L2-Hys,它通过削减v的L2范数得到（将v的最大值限制为0.2），然后重新归一化。</p><p>最终的图像/RoI描述符是通过连接所有归一化的块描述符而形成的。</p><p>L2范数、L2-Hys和L1范数平方根（L1-sqrt）归一化方法提供了类似的性能，而L1范数提供了可靠性稍差的性能。</p><h1 id="尺度不变特征变换"><a href="#尺度不变特征变换" class="headerlink" title="尺度不变特征变换"></a>尺度不变特征变换</h1><p>SIFT[Lowe,2004]提供了一组对象的特征，这些特征对于对象缩放和旋转是健壮的。</p><p>SIFT算法由四个主要步骤组成。</p><h2 id="1-尺度空间的极值侦测"><a href="#1-尺度空间的极值侦测" class="headerlink" title="1.尺度空间的极值侦测"></a>1.尺度空间的极值侦测</h2><p>第一步旨在确定对缩放和方向不变的潜在关键点。</p><p>SIFT使用高斯差分（DoG）来检测尺度空间中关键点中的位置。</p><p>高斯差分是将两个不同尺度的图像（其中一个尺度为$\sigma$,另一个是其k倍，即$k\times\sigma$）的高斯模糊进行差分得到的。</p><h2 id="2-关键点精确定位"><a href="#2-关键点精确定位" class="headerlink" title="2.关键点精确定位"></a>2.关键点精确定位</h2><h2 id="3-方向定位"><a href="#3-方向定位" class="headerlink" title="3.方向定位"></a>3.方向定位</h2><h2 id="4-关键点描述符"><a href="#4-关键点描述符" class="headerlink" title="4.关键点描述符"></a>4.关键点描述符</h2>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 机器视觉 </tag>
            
            <tag> 分类器 </tag>
            
            <tag> 特征 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像导数</title>
      <link href="/ie/posts/9bc3b11e.html"/>
      <url>/ie/posts/9bc3b11e.html</url>
      
        <content type="html"><![CDATA[<p>在图像中，边缘可以看做是位于一阶导数较大的像素处，因此，我们可以求图像的一阶导数来确定图像的边缘，像sobel算子等一系列算子都是基于这个思想的。</p><a id="more"></a><p>如下图a表示函数在边沿的时候关系，求导得b图，可知边沿可就是函数的极值点，对应二阶导数为0处，如图c的二阶导图。</p><p><img alt="a" data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133632.jpg"></p><p><img alt="b" data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133649.jpg"></p><p><img alt="c" data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133704.jpg"></p><p>关于导数总结如下：</p><ul><li>（1）一阶导数通常图像中产生较粗的边缘</li><li>（2）二阶导数对精细细节，如细线、孤立点和噪声有较强的响应</li><li>（3）二阶导数在灰度斜坡和灰度台阶过度处会产生双边沿响应</li><li>（4）二阶导数的符号可以确定边缘的过渡是从亮到暗还是从暗到亮</li><li>（5）选导数提取边沿之前最好是做下图像的平滑，导数对噪声比较敏感</li></ul>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 机器视觉 </tag>
            
            <tag> 图像 </tag>
            
            <tag> 数学模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程的描述</title>
      <link href="/ie/posts/253269c2.html"/>
      <url>/ie/posts/253269c2.html</url>
      
        <content type="html"><![CDATA[<p>为了能使程序并发执行，并且可以对并发执行的程序加以描述和控制，人们引入了“进程”的概念。</p><a id="more"></a><h1 id="进程的特征和定义"><a href="#进程的特征和定义" class="headerlink" title="进程的特征和定义"></a>进程的特征和定义</h1><h2 id="结构特征"><a href="#结构特征" class="headerlink" title="结构特征"></a>结构特征</h2><p>进程实体是由程序段、数据段及进程、控制块（PCB）三部分组成.</p><p>UNIX中将这三部分称为“进程映像”。</p><hr><p>创建进程：创建进程实体中的进程控制块（PCB）。</p><p>撤销进程：撤销进程实体中的进程控制块（PCB）。</p><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><ul><li>动态性</li><li>并发性</li><li>独立性</li><li>异步性</li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 进程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前驱图和程序执行</title>
      <link href="/ie/posts/a81e94e9.html"/>
      <url>/ie/posts/a81e94e9.html</url>
      
        <content type="html"><![CDATA[<p>在多道程序环境中，允许多个程序并发执行；程序本身是具体代码，不能反映程序的执行过程从而引入进程。<br>进程是抽象的。作为资源分配和独立运行的基本单位是进程。操作系统所有的特征都是基于进程而体现的。</p><a id="more"></a><h1 id="程序顺序执行及其特征"><a href="#程序顺序执行及其特征" class="headerlink" title="程序顺序执行及其特征"></a>程序顺序执行及其特征</h1><h2 id="程序顺序执行时的特征"><a href="#程序顺序执行时的特征" class="headerlink" title="程序顺序执行时的特征"></a>程序顺序执行时的特征</h2><ul><li>顺序性：每个操作在上一操作结束后开始</li><li>封闭性：程序开始执行，其执行结果不受外界因素影响</li><li>可再现性：只要环境和初始条件相同，其执行结果一定相同<h1 id="前驱图"><a href="#前驱图" class="headerlink" title="前驱图"></a>前驱图</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2></li></ul><p>前驱图是一个有向无循环图（DAG)，用于描述进程之间执行的前后关系。</p><p>注意：前驱图中不能存在循环。</p><h1 id="程序并发执行及其特征"><a href="#程序并发执行及其特征" class="headerlink" title="程序并发执行及其特征"></a>程序并发执行及其特征</h1><ul><li>间断性： 共享资源 -&gt; 相互制约 -&gt; 执行-暂停-执行</li><li>失去封闭性： 一个程序的执行受到其他程序的影响</li><li>不可再现性</li></ul><p>#结论：</p><p>并发是提高资源利用率的好方法，从而提高系统吞吐量，所以程序尽量并发执行。</p><ul><li>1）串行是顺序执行；</li><li>2）并发是交叉使用设备；</li><li>3）并行使用多个处理机—更快。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 前驱图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>意识、脑与人工智能 十大科学问题</title>
      <link href="/ie/posts/c270974.html"/>
      <url>/ie/posts/c270974.html</url>
      
        <content type="html"><![CDATA[<p>2018年9月，浙江大学发布“双脑计划”，布局脑科学与人工智能的会聚研究，聚集全校生命科学、信息科学、物质科学和哲学社会科学众多领域的专家学者，开启探索脑认知、意识及智能的本质和规律。2019年4月，浙江大学召开“意识、脑与人工智能”圆桌论坛，吴朝晖院士、段树民院士与倪梁康教授（文科资深教授）分别围绕“意识”问题，从计算机科学、脑科学、哲学角度作主旨报告，提出了一系列具有挑战性的跨学科问题。在此基础上，浙江大学“双脑计划”相关团队组织哲学、计算机科学、神经与脑科学、心理学、社会学等领域专家，聚焦意识与脑、意识与人工智能方面的重大问题，经过反复讨论、不断碰撞、深入凝练，最终提出了十大具有前沿性、挑战性的科学问题，旨在引领国内外学术界的思考，推动意识、脑与人工智能交叉领域的研究。</p><a id="more"></a><h1 id="“意识、脑与人工智能”十大科学问题"><a href="#“意识、脑与人工智能”十大科学问题" class="headerlink" title="“意识、脑与人工智能”十大科学问题"></a>“意识、脑与人工智能”十大科学问题</h1><h2 id="一、意识的生物学基础是什么？"><a href="#一、意识的生物学基础是什么？" class="headerlink" title="一、意识的生物学基础是什么？"></a>一、意识的生物学基础是什么？</h2><p>意识曾仅是哲学家的研究领域，但随着神经科学发展，科学家逐渐参与到意识本质的研究中。目前大部分观点认为，意识产生的物质基础是神经元，其生物学基础是脑中多个神经网络间的相互作用；也有研究认为意识的产生由相对独立的脑结构（称为意识开关）来主导。意识的生物学基础是什么，及其衍生出来的一系列问题有待进一步探究。例如，意识产生的物质基础是否唯一，能否在神经元以外的物质载体上制造出意识等。</p><h2 id="二、“人工意识”是否可能？"><a href="#二、“人工意识”是否可能？" class="headerlink" title="二、“人工意识”是否可能？"></a>二、“人工意识”是否可能？</h2><p>从人工智能向人工意识的发展，必须考虑将人工情感和人工意欲的因素纳入人工意识和人工心灵系统的可能性。可尝试通过对神经回路的复杂性的把控来解决所有类型的意识涌现（表象、情感、意志）的复杂性，并在神经系统中找到作为意识之自身觉知（qualia）的对应项。</p><h2 id="三、机器如何理解人类的情感表达？"><a href="#三、机器如何理解人类的情感表达？" class="headerlink" title="三、机器如何理解人类的情感表达？"></a>三、机器如何理解人类的情感表达？</h2><p>在人机共生社会，需要解决机器人与人类的自然交互问题，以使得机器人可以真正融入人们的生活，产生共情、共鸣和自然的社会行为。其中一个重要的挑战是机器如何理解人类的情感表达。</p><h2 id="四、强人工智能的心理机制是什么？"><a href="#四、强人工智能的心理机制是什么？" class="headerlink" title="四、强人工智能的心理机制是什么？"></a>四、强人工智能的心理机制是什么？</h2><p>弱人工智能在解决特定领域问题中，展现出了强大到可以比肩甚至超越人类的能力，但也暴露出通用性弱、学习效率低等一系列问题。解决这些问题需要回归强人工智能的“初心”，即研究人类智能的心理机制是什么，探索人类为何能利用有限的算力实现通用智能、如何在小数据条件下完成高效学习等问题。</p><h2 id="五、意识的信息机制是什么？"><a href="#五、意识的信息机制是什么？" class="headerlink" title="五、意识的信息机制是什么？"></a>五、意识的信息机制是什么？</h2><p>意识是指一个人体验自身存在的能力，而不仅仅是记录或者像机器人那样对刺激做出反应。研究意识的信息处理机制，需要重点关注信息处理的主观性（subjective）、结构性（structured）、特有性（specific）、统一性（unified）和确定性（definitive）等问题。</p><h2 id="六、脑机融合能否实现超级智能？"><a href="#六、脑机融合能否实现超级智能？" class="headerlink" title="六、脑机融合能否实现超级智能？"></a>六、脑机融合能否实现超级智能？</h2><p>脑机融合是基于脑机接口技术，实现脑与机的双向交互、相互适应及协同工作，最终达到生物智能和机器智能的融合，其目标是实现更强大的智能形态。鉴于机器智能与人类智能的互补性，如何实现生物智能和机器智能的互联互通，融合各自所长，创造出性能更强的智能形态是核心问题。</p><h2 id="七、情绪情感的脑机制是什么？"><a href="#七、情绪情感的脑机制是什么？" class="headerlink" title="七、情绪情感的脑机制是什么？"></a>七、情绪情感的脑机制是什么？</h2><p>情绪是个体对一定程度的复杂情况做出反应的特定状态。情绪情感的产生涉及感觉、知觉、动机、奖赏、评估、感觉-行为转换等多种脑功能，并参与修饰和调控记忆及相关认知过程。人类智慧的形成和复杂社会体系的建立，均与情绪情感程序的进化和固化有关。情绪情感相关精神疾病也在持续和广泛地困扰人类社会。因此，研究情绪情感的脑机制是脑科学研究领域最令人兴奋的方向之一，其研究成果也将为相关精神疾病的诊断和治疗提供新的策略和手段。</p><h2 id="八、学习的生物学基础是什么？"><a href="#八、学习的生物学基础是什么？" class="headerlink" title="八、学习的生物学基础是什么？"></a>八、学习的生物学基础是什么？</h2><p>动物需要适应环境变化，而学习就是神经系统把环境信息转变成经验的编码过程，与学习密切相关的记忆则是神经系统对这些经验的存储和提取的过程。研究学习记忆的神经生物学机制是神经科学领域至关重要的研究方向，也是阐明认知功能障碍的关键。</p><h2 id="九、潜意识的脑科学机制是什么？"><a href="#九、潜意识的脑科学机制是什么？" class="headerlink" title="九、潜意识的脑科学机制是什么？"></a>九、潜意识的脑科学机制是什么？</h2><p>潜意识指“已然发生但并未达到意识水平的心理活动过程或内容”，被认为是最复杂的心理现象，可能成为阐明人类意识大脑机制的突破口。随着认知神经科学和脑科学等交叉学科研究的发展，以及脑图谱技术、基因技术的进步，对潜意识的脑科学机制研究可能会有更大的突破。</p><h2 id="十、人类决策的脑处理机制是什么？"><a href="#十、人类决策的脑处理机制是什么？" class="headerlink" title="十、人类决策的脑处理机制是什么？"></a>十、人类决策的脑处理机制是什么？</h2><p>决策脑机制的研究日益受到重视，但决策偏好的神经机理还远未被揭开。系统探究决策脑机制，不仅有助于揭示决策者价值权衡过程的神经基础，还能为基于神经信号预测人的决策倾向，以及诊治决策异常相关脑疾病提供科学研究依据。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><span class="exturl" data-url="aHR0cDovL3d3dy5pbm5vdmF0aW9uMjAzMC56anUuZWR1LmNuLw==" title="http://www.innovation2030.zju.edu.cn/">浙江大学面向2030的学科会聚研究计划（创新2030计划）<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5pbm5vdmF0aW9uMjAzMC56anUuZWR1LmNuLzIwMTkvMDgyOS9jMjE5NDRhMTU5NTc3NC9wYWdlLmh0bQ==" title="http://www.innovation2030.zju.edu.cn/2019/0829/c21944a1595774/page.htm">“意识、脑与人工智能”十大科学问题<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 会议报告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 脑科学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Glob表达式</title>
      <link href="/ie/posts/55b264de.html"/>
      <url>/ie/posts/55b264de.html</url>
      
        <content type="html"><![CDATA[<p>glob是shell使用的路径匹配符，类似于正则表达式，但是与正则表达式不完全相同。在linux操作中如文件匹配等等其实已经使用了glob通配符。由于其在路径匹配方面的强大，其他语言也有相应的实现。我在使用基于node的gulp时遇到glob匹配文件路径，于是顺便整理一下glob的基础语法和使用。</p><a id="more"></a><h1 id="glob表达式-glob-expressions-通配符："><a href="#glob表达式-glob-expressions-通配符：" class="headerlink" title="glob表达式(glob expressions)通配符："></a>glob表达式(glob expressions)通配符：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* 匹配文件路径中的0个或多个字符，但**不会匹配路径分隔符，除非路径分隔符出现在末尾。</span><br><span class="line"></span><br><span class="line">** 匹配路径中的0个或多个目录及其子目录，如果出现在末尾，也能匹配文件。</span><br><span class="line"></span><br><span class="line">? 匹配文件路径中的一个字符(不会匹配路径分隔符)。</span><br><span class="line"></span><br><span class="line">[...] 匹配方括号中出现的字符中的任意一个，当方括号中第一个字符为 ·^ 或 ! 时，则表示不匹配方括号中出现的其他字符中的任意一个。</span><br><span class="line"></span><br><span class="line">!(pattern|pattern|pattern) 匹配任何与括号中给定的任一参数都不匹配的。</span><br><span class="line"></span><br><span class="line">?(pattern|pattern|pattern) 匹配括号中给定的任一参数0次或1次。</span><br><span class="line"></span><br><span class="line">+(pattern|pattern|pattern) 匹配括号中给定的任一参数1次或多次。</span><br><span class="line"></span><br><span class="line">*(pattern|pattern|pattern) 匹配括号中给定的任一参数0次或多次。</span><br><span class="line"></span><br><span class="line">@(pattern|pattern|pattern) 匹配括号中给定的任一参数1次。</span><br></pre></td></tr></table></figure><p>用实例来加深理解：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">* 能匹配 a.js , x.y , abc , abc/ ，但不能匹配 a/b.js</span><br><span class="line"></span><br><span class="line">*.* 能匹配 a.js , style.css , a.b , x.y</span><br><span class="line"></span><br><span class="line">*/*/*.js 能匹配 a/b/c.js , x/y/z.js ，不能匹配 a/b.js , a/b/c/d.js</span><br><span class="line"></span><br><span class="line">** 能匹配 abc , a/b.js , a/b/c.js , x/y/z , x/y/z/a.b ，能用来匹配所有的目录和文件</span><br><span class="line"></span><br><span class="line">**/*.js 能匹配 foo.js , a/foo.js , a/b/foo.js , a/b/c/foo.js</span><br><span class="line"></span><br><span class="line">a/**/z 能匹配 a/z , a/b/z , a/b/c/z , a/d/g/h/j/k/z</span><br><span class="line"></span><br><span class="line">a/**b/z 能匹配 a/b/z , a/sb/z ，但不能匹配 a/x/sb/z ，因为只有单 ** 单独出现才能匹配多级目录</span><br><span class="line"></span><br><span class="line">?.js 能匹配 a.js , b.js , c.js</span><br><span class="line"></span><br><span class="line">a?? 能匹配 a.b , abc ，但不能匹配 ab/ ，因为它不会匹配路径分隔符</span><br><span class="line"></span><br><span class="line">[xyz].js 只能匹配 x.js , y.js , z.js ，不会匹配 xy.js , xyz.js 等，整个中括号只代表一个字符</span><br><span class="line"></span><br><span class="line">[^xyz].js 能匹配 a.js , b.js , c.js 等，不能匹配 x.js , y.js , z.js</span><br></pre></td></tr></table></figure><p><strong>当有多种匹配模式时可以使用数组：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 使用数组的方式来匹配多种文件</span><br><span class="line">gulp.src([ <span class="string">'js/*.min.js'</span>, <span class="string">'sass/*.min.css'</span> ])</span><br></pre></td></tr></table></figure><p>使用数组的方式还有一个好处就是可以很方便的使用排除模式，在数组中的单个匹配模式前加上 ! 即是排除模式，它会在匹配的结果中排除这个匹配，要注意一点的是不能在数组中的第一个元素中使用排除模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 使用数组的方式来匹配多种文件</span><br><span class="line">gulp.src([&apos;*.js&apos;,&apos;!b*.js&apos;]) // 匹配所有js文件，但排除掉以b开头的js文件</span><br><span class="line">gulp.src([&apos;!b*.js&apos;,*.js]) // 不会排除任何文件，因为排除模式不能出现在数组的第一个元素中</span><br></pre></td></tr></table></figure><p>此外，还可以使用展开模式。展开模式以花括号作为定界符，根据它里面的内容，会展开为多个模式，最后匹配的结果为所有展开的模式相加起来得到的结果。展开的例子如下：</p><p>a{b,c}d 会展开为 abd,acd</p><p>a{b,}c 会展开为 abc,ac</p><p>a{0..3}d 会展开为 a0d , a1d , a2d , a3d</p><p>a{b,c{d,e}f}g 会展开为 abg , acdfg , acefg</p><p>a{b,c}d{e,f}g 会展开为 abdeg , acdeg , abdeg , abdfg</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell </tag>
            
            <tag> 通配符 </tag>
            
            <tag> glob表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统引论</title>
      <link href="/ie/posts/f9a25cd7.html"/>
      <url>/ie/posts/f9a25cd7.html</url>
      
        <content type="html"><![CDATA[<p>操作系统（OS）是配置在计算机硬件上的第一层软件，是对硬件系统的首次扩充。</p><a id="more"></a><h1 id="操作系统的定义"><a href="#操作系统的定义" class="headerlink" title="操作系统的定义"></a>操作系统的定义</h1><p>OS是一组控制和管理计算机硬件和软件资源，合理地对各类作业进行调度（合理地组织计算机工作），以及方便用户使用的程序的集合</p><h1 id="操作系统的目标和作用"><a href="#操作系统的目标和作用" class="headerlink" title="操作系统的目标和作用"></a>操作系统的目标和作用</h1><h2 id="操作系统的目标"><a href="#操作系统的目标" class="headerlink" title="操作系统的目标"></a>操作系统的目标</h2><ul><li>方便性*</li><li>有效性*<ul><li>提高系统资源利用率</li><li>提高系统吞吐量</li></ul></li><li>可扩充性</li><li>开放性<ul><li>遵循世界标准规范</li></ul></li></ul><p>方便性和有效性是设计操作系统时最重要的两个目标。</p><h2 id="操作系统的作用"><a href="#操作系统的作用" class="headerlink" title="操作系统的作用"></a>操作系统的作用</h2><ul><li><p>OS作为用户与计算机硬件系统之间的接口（用户的角度）</p><p>三种方式使用计算机：</p><ul><li>命令行方式</li><li>系统调用方式</li><li>图标窗口方式</li></ul></li><li><p>OS作为计算机系统资源的管理者（资源管理角度）</p><p>对四类资源进行管理：</p><ul><li>处理机管理</li><li>存储器管理</li><li>I/O设备管理</li><li>文件管理</li></ul><p>资源管理包含两种资源共享的使用方法：</p><ul><li>分时</li></ul><p>多个用户分时地使用该资源</p><ul><li>空分</li></ul><p>存储资源的空间可以被多个用户共同以分割的方式占用。</p></li><li><p>OS实现了对计算机资源的抽象（扩充机器）</p><ul><li>裸机</li><li>虚拟机/扩展机</li></ul></li></ul><h2 id="推动操作系统发展的主要动力"><a href="#推动操作系统发展的主要动力" class="headerlink" title="推动操作系统发展的主要动力"></a>推动操作系统发展的主要动力</h2><ul><li>不断提高计算机资源利用率</li><li>方便用户</li><li>机器的不断更新换代</li><li>计算机体系结构的不断发展</li><li>不断提出新的应用需求</li></ul><h1 id="操作系统的发展过程"><a href="#操作系统的发展过程" class="headerlink" title="操作系统的发展过程"></a>操作系统的发展过程</h1><h2 id="无操作系统的计算机系统"><a href="#无操作系统的计算机系统" class="headerlink" title="无操作系统的计算机系统"></a>无操作系统的计算机系统</h2><ul><li><p>人工操作方式</p><p>缺点：</p><ul><li>用户独占全机</li><li>CPU等待人工操作<ul><li>人机矛盾</li><li>CPU与I/O设备之间速度不匹配的矛盾</li></ul></li><li>工作效率低</li></ul></li><li><p>脱机输入/输出（Off-Line I/O）方式</p><p>程序和数据的输入和输出都是在外围机的控制之下完成的，</p><p>即：程序和数据的输入和输出是在脱离主机的情况下进行</p><ul><li>脱机I/O的主要优点<ul><li>减少了CPU的空闲时间</li><li>提高I/O速度，缓和了CPU和I/O设备间不匹配的矛盾</li></ul></li></ul></li></ul><h2 id="单道批处理操作系统"><a href="#单道批处理操作系统" class="headerlink" title="单道批处理操作系统"></a>单道批处理操作系统</h2><ul><li><p>单道批处理系统的处理过程</p><p>批处理系统旨在提高系统资源的利用率和系统吞吐量.</p><p>特征:</p><ul><li>自动性</li><li>顺序性</li><li>单道性</li></ul></li><li><p>单道批处理系统的缺点<br>最主要缺点：系统中的资源得不到充分利用</p></li></ul><h2 id="多道批处理操作系统"><a href="#多道批处理操作系统" class="headerlink" title="多道批处理操作系统"></a>多道批处理操作系统</h2><ul><li><p>多道程序设计的基本概念：</p><p>内存同时驻留多道程序(作业)，处理机(单处理机)以交替的方式同时处理多道程序。</p><ul><li><p>宏观：已有多道程序开始运行且尚未结束；</p></li><li><p>微观：某一时刻处理机只运行某道作业。</p><ul><li><p>好处：</p><ul><li>提高CPU的利用率；</li><li>可提高内存和I/O设备的利用率；</li><li>增加系统吞吐量。</li></ul></li><li><p>能提高吞吐量的原因：</p><ul><li>使CPU和资源保持“忙碌”状态；</li><li>仅当作业完成或运行不下去时才进行切换，系统开销小。</li></ul></li></ul></li></ul></li><li><p>特征</p><ul><li>多道性</li><li>无序性：作业完成的先后顺序和他们进入内存的顺序并无严格的对应关系</li><li>调度性:<ul><li>A、作业调度</li><li>B、进程调度</li></ul></li></ul></li><li><p>优点：</p><ul><li>资源利用率高</li><li>系统吞吐量大</li></ul></li><li><p>缺点：</p><ul><li><p>平均周转时间长</p><p>作业的周转时间是指从作业进入系统开始，直至其完成并退出系统为止所经历的时间。</p></li><li><p>无交互能力</p></li></ul></li><li><p>推动多道批处理系统形成和发展的主要动力是提高资源利用率和系统吞吐量；</p></li></ul><h2 id="分时操作系统"><a href="#分时操作系统" class="headerlink" title="分时操作系统"></a>分时操作系统</h2><ul><li><p>推动分时系统形成和发展的主要动力，则是用户的需求（人——机交互）。</p></li><li><p>工作方式</p><ul><li>一台主机连接了若干个终端；每个终端有一个用户在使用；</li><li>交互式的向系统提出命令请求；</li><li>系统接受每个用户的命令采用时间片轮转方式处理服务请求并通过交互方式在终端上向用户显示结果，用户根据上步结果发出下道命令。</li></ul></li><li><p>关键问题:</p><ul><li>及时接收</li><li>及时处理<ul><li>作业直接进入内存，在内存才能处理；</li><li>采用轮转运行方式。<ul><li>不允许一个作业长期占用处理机；</li><li>规定每个作业只能运行很短的时间，使每个用户及时与自己的作业交互，从而用户请求得到及时响应。</li></ul></li></ul></li></ul></li><li><p>特点</p><ul><li>多路性：即同时性（宏观的同时）</li><li>交互性</li><li>独立性：用户好像独占主机</li><li>及时性</li></ul></li></ul><h2 id="实时操作系统"><a href="#实时操作系统" class="headerlink" title="实时操作系统"></a>实时操作系统</h2><ul><li><p>定义</p><p>是指系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。</p></li><li><p>实时系统与分时系统特征的比较</p><ul><li>多路性</li><li>独立性</li><li>及时性</li><li>交互性</li><li>可靠性</li></ul></li></ul><h1 id="操作系统的基本特性"><a href="#操作系统的基本特性" class="headerlink" title="操作系统的基本特性"></a>操作系统的基本特性</h1><ul><li>并发性<ul><li>间断性</li><li>失去封闭性</li><li>不可再现性</li></ul></li><li>共享性<ul><li>互斥共享（临界资源）</li><li>同时访问（eg：同时读磁盘）</li></ul></li><li>虚拟技术<ul><li>时分复用技术<ul><li>虚拟处理机技术</li><li>虚拟设备技术</li></ul></li><li>空分复用技术<ul><li>虚拟磁盘技术</li><li>虚拟存储器技术（内存）</li></ul></li></ul></li><li>异步性</li></ul><h1 id="OS结构设计"><a href="#OS结构设计" class="headerlink" title="OS结构设计"></a>OS结构设计</h1><ul><li><p>无结构OS</p></li><li><p>模块化OS</p></li><li><p>分层式OS</p></li><li><p>微内核OS</p><ul><li>微内核技术：是指精心设计的、能实现现代操作系统核心功能的小型内核，运行在核心态，开机后常驻内存。</li><li>常驻内存的好处：因为CPU只访问内存，速度快、效率高。</li><li>微内核OS优点：<ul><li>提高系统的可扩展性</li><li>增强系统的可靠性</li><li>可移植性强</li><li>提供对分布式系统的支持</li><li>融入面向对象技术</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo命令及Markdown语法</title>
      <link href="/ie/posts/f8d2d5ec.html"/>
      <url>/ie/posts/f8d2d5ec.html</url>
      
        <content type="html"><![CDATA[<p>hexo是使用Markdown编辑文章的，我写的这些文章也都是用这种标记语言完成的。所以，我们先从Markdown说起。</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>你可以使用vim工具直接编辑md文件，也可以用记事本打开md文件编辑你的文章，也可以Markdown的编辑器编写，有很多在线的编辑器，何有不少客户端的编辑器.</p><h2 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown"></a>什么是Markdown</h2><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯和亚伦·斯沃茨。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML文档”。 ——维基百科</p><p>先简单介绍一下，Markdown的语法，具体怎么用，我相信大家一看例文就马上明白了。</p><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>1、分段： 两个回车</p><p>2、换行 两个空格 + 回车</p><p>3、标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</p><p>4、引用 &gt;</p><p>5、列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格</p><p>6、代码区块 四个空格 开头</p><p>7、链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[文字](链接地址)</span><br></pre></td></tr></table></figure><p><a href="链接地址">文字</a></p><p>8、图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](图片地址) //图片地址可以是本地路径，也可以是网络地址</span><br></pre></td></tr></table></figure><p><img alt data-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed/data/20191220133214.jpeg"></p><p>9、强调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**文字** ， __文字__ ， _文字_ ， *文字*</span><br></pre></td></tr></table></figure><p><strong>文字</strong> ， <strong>文字</strong> ， <em>文字</em> ， <em>文字</em></p><p>10、代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```，``</span><br></pre></td></tr></table></figure><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>我们在前面的已经略微的接触了一些hexo的命令，如 hexo new “my blog” ， hexo server 等。下面来介绍一下我们经常会用到的hexo命令</p><p>1、新建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;my blog&quot;</span><br></pre></td></tr></table></figure><p>新建的文件在 hexo/source/_posts/my-blog.md</p><p>2、生成静态页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件</p><p>3、开启本地服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这个命令，我之前已经用过了，开启本地hexo服务用的</p><p>4、部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署到git上的时候，需要用这个命令</p><p>5、清除 public</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Start</title>
      <link href="/ie/posts/6bf2f994.html"/>
      <url>/ie/posts/6bf2f994.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==" title="https://hexo.io/">Hexo<i class="fa fa-external-link"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv" title="https://hexo.io/docs/">documentation<i class="fa fa-external-link"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=" title="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fa fa-external-link"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==" title="https://github.com/hexojs/hexo/issues">GitHub<i class="fa fa-external-link"></i></span>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s" title="https://hexo.io/docs/writing.html">Writing<i class="fa fa-external-link"></i></span></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=" title="https://hexo.io/docs/server.html">Server<i class="fa fa-external-link"></i></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s" title="https://hexo.io/docs/generating.html">Generating<i class="fa fa-external-link"></i></span></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGVwbG95bWVudC5odG1s" title="https://hexo.io/docs/deployment.html">Deployment<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AT89S52 或 STC89C52RC 串口发送温湿度数据</title>
      <link href="/ie/posts/3d7d3997.html"/>
      <url>/ie/posts/3d7d3997.html</url>
      
        <content type="html"><![CDATA[<p>AT89S52 或 STC89C52RC 串口发送温湿度数据</p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//****************************************************************//</span></span><br><span class="line"><span class="comment">//单片机 AT89S52 或 STC89C52RC</span></span><br><span class="line"><span class="comment">//功能   串口发送温湿度数据 晶振 11.0592M 波特率 9600</span></span><br><span class="line"><span class="comment">//硬件   sbit TXP口为通讯口连接DHT11,DHT11的电源和地连接单片机的电源和地，单片机串口加MAX232连接电脑</span></span><br><span class="line"><span class="comment">//****************************************************************//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>   <span class="meta-string">&lt;STDIO.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;reg51.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>  U8;       <span class="comment">/* defined for unsigned 8-bits integer variable   无符号8位整型变量  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span>   <span class="keyword">char</span>  S8;       <span class="comment">/* defined for signed 8-bits integer variable  有符号8位整型变量  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>   U16;      <span class="comment">/* defined for unsigned 16-bits integer variable   无符号16位整型变量 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span>   <span class="keyword">int</span>   S16;      <span class="comment">/* defined for signed 16-bits integer variable   有符号16位整型变量 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span>  U32;      <span class="comment">/* defined for unsigned 32-bits integer variable   无符号32位整型变量 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span>   <span class="keyword">long</span>  S32;      <span class="comment">/* defined for signed 32-bits integer variable   有符号32位整型变量 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">float</span>          F32;      <span class="comment">/* single precision floating point variable (32bits) 单精度浮点数（32位长度） */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span>         F64;      <span class="comment">/* double precision floating point variable (64bits) 双精度浮点数（64位长度） */</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>   Data_0_time    4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//----------------------------------------------//</span></span><br><span class="line"><span class="comment">//----------------IO口定义区--------------------//</span></span><br><span class="line"><span class="comment">//----------------------------------------------//</span></span><br><span class="line">sbit  TXP  = P2^<span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//----------------------------------------------//</span></span><br><span class="line"><span class="comment">//----------------定义区--------------------//</span></span><br><span class="line"><span class="comment">//----------------------------------------------//</span></span><br><span class="line">U8  U8FLAG,k;</span><br><span class="line">U8  U8count,U8temp;</span><br><span class="line">U8  U8T_data_H,U8T_data_L,U8RH_data_H,U8RH_data_L,U8checkdata;</span><br><span class="line">U8  U8T_data_H_temp,U8T_data_L_temp,U8RH_data_H_temp,U8RH_data_L_temp,U8checkdata_temp;</span><br><span class="line">U8  U8comdata;</span><br><span class="line">U8  outdata[<span class="number">5</span>];  <span class="comment">//定义发送的字节数</span></span><br><span class="line">U8  indata[<span class="number">5</span>];</span><br><span class="line">U8  count, count_r=<span class="number">0</span>;</span><br><span class="line">U8  str[<span class="number">5</span>]= &#123;<span class="string">"RS232"</span>&#125;;</span><br><span class="line">U16 U16temp1,U16temp2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SendData</span><span class="params">(U8 *a)</span> </span>&#123;</span><br><span class="line">    outdata[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">    outdata[<span class="number">1</span>] = a[<span class="number">1</span>];</span><br><span class="line">    outdata[<span class="number">2</span>] = a[<span class="number">2</span>];</span><br><span class="line">    outdata[<span class="number">3</span>] = a[<span class="number">3</span>];</span><br><span class="line">    outdata[<span class="number">4</span>] = a[<span class="number">4</span>];</span><br><span class="line">    count = <span class="number">1</span>;</span><br><span class="line">    SBUF=outdata[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">(U16 j)</span> </span>&#123;</span><br><span class="line">    U8 i;</span><br><span class="line">    <span class="keyword">for</span>(; j&gt;<span class="number">0</span>; j--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">27</span>; i++);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">Delay_10us</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    U8 i;</span><br><span class="line">    i--;</span><br><span class="line">    i--;</span><br><span class="line">    i--;</span><br><span class="line">    i--;</span><br><span class="line">    i--;</span><br><span class="line">    i--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">COM</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    U8 i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">        U8FLAG=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span>((!TXP)&amp;&amp;U8FLAG++);</span><br><span class="line">        Delay_10us();</span><br><span class="line">        Delay_10us();</span><br><span class="line">        Delay_10us();</span><br><span class="line">        U8temp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(TXP)</span><br><span class="line">            U8temp=<span class="number">1</span>;</span><br><span class="line">        U8FLAG=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span>((TXP)&amp;&amp;U8FLAG++);</span><br><span class="line">        <span class="comment">//超时则跳出for循环</span></span><br><span class="line">        <span class="keyword">if</span>(U8FLAG==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//判断数据位是0还是1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果高电平高过预定0高电平值则数据位为 1</span></span><br><span class="line"></span><br><span class="line">        U8comdata&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">        U8comdata|=U8temp;        <span class="comment">//0</span></span><br><span class="line">    &#125;<span class="comment">//rof</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"><span class="comment">//-----湿度读取子程序 ------------</span></span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"><span class="comment">//----以下变量均为全局变量--------</span></span><br><span class="line"><span class="comment">//----温度高8位== U8T_data_H------</span></span><br><span class="line"><span class="comment">//----温度低8位== U8T_data_L------</span></span><br><span class="line"><span class="comment">//----湿度高8位== U8RH_data_H-----</span></span><br><span class="line"><span class="comment">//----湿度低8位== U8RH_data_L-----</span></span><br><span class="line"><span class="comment">//----校验 8位 == U8checkdata-----</span></span><br><span class="line"><span class="comment">//----调用相关子程序如下----------</span></span><br><span class="line"><span class="comment">//---- Delay();, Delay_10us();,COM();</span></span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RH</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//主机拉低18ms</span></span><br><span class="line">    TXP=<span class="number">0</span>;</span><br><span class="line">    Delay(<span class="number">180</span>);</span><br><span class="line">    TXP=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//总线由上拉电阻拉高 主机延时20us</span></span><br><span class="line">    Delay_10us();</span><br><span class="line">    Delay_10us();</span><br><span class="line">    Delay_10us();</span><br><span class="line">    Delay_10us();</span><br><span class="line">    <span class="comment">//主机设为输入 判断从机响应信号</span></span><br><span class="line">    TXP=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//判断从机是否有低电平响应信号 如不响应则跳出，响应则向下运行</span></span><br><span class="line">    <span class="keyword">if</span>(!TXP) &#123; <span class="comment">//T !</span></span><br><span class="line">        U8FLAG=<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//判断从机是否发出 80us 的低电平响应信号是否结束</span></span><br><span class="line">        <span class="keyword">while</span>((!TXP)&amp;&amp;U8FLAG++);</span><br><span class="line">        U8FLAG=<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//判断从机是否发出 80us 的高电平，如发出则进入数据接收状态</span></span><br><span class="line">        <span class="keyword">while</span>((TXP)&amp;&amp;U8FLAG++);</span><br><span class="line">        <span class="comment">//数据接收状态</span></span><br><span class="line">        COM();</span><br><span class="line">        U8RH_data_H_temp=U8comdata;</span><br><span class="line">        COM();</span><br><span class="line">        U8RH_data_L_temp=U8comdata;</span><br><span class="line">        COM();</span><br><span class="line">        U8T_data_H_temp=U8comdata;</span><br><span class="line">        COM();</span><br><span class="line">        U8T_data_L_temp=U8comdata;</span><br><span class="line">        COM();</span><br><span class="line">        U8checkdata_temp=U8comdata;</span><br><span class="line">        TXP=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//数据校验</span></span><br><span class="line"></span><br><span class="line">        U8temp=(U8T_data_H_temp+U8T_data_L_temp+U8RH_data_H_temp+U8RH_data_L_temp);</span><br><span class="line">        <span class="keyword">if</span>(U8temp==U8checkdata_temp) &#123;</span><br><span class="line">            U8RH_data_H=U8RH_data_H_temp;</span><br><span class="line">            U8RH_data_L=U8RH_data_L_temp;</span><br><span class="line">            U8T_data_H=U8T_data_H_temp;</span><br><span class="line">            U8T_data_L=U8T_data_L_temp;</span><br><span class="line">            U8checkdata=U8checkdata_temp;</span><br><span class="line">        &#125;<span class="comment">//fi</span></span><br><span class="line">    &#125;<span class="comment">//fi</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//----------------------------------------------</span></span><br><span class="line"><span class="comment">//main()功能描述:  AT89C51  11.0592MHz 串口发</span></span><br><span class="line"><span class="comment">//送温湿度数据,波特率 9600</span></span><br><span class="line"><span class="comment">//----------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    U8  i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//uchar str[6]=&#123;"RS232"&#125;;</span></span><br><span class="line">    <span class="comment">/* 系统初始化 */</span></span><br><span class="line">    TMOD = <span class="number">0x20</span>;  <span class="comment">//定时器T1使用工作方式2</span></span><br><span class="line">    TH1 = <span class="number">253</span>;        <span class="comment">// 设置初值</span></span><br><span class="line">    TL1 = <span class="number">253</span>;</span><br><span class="line">    TR1 = <span class="number">1</span>;          <span class="comment">// 开始计时</span></span><br><span class="line">    SCON = <span class="number">0x50</span>;  <span class="comment">//工作方式1，波特率9600bps，允许接收</span></span><br><span class="line">    ES = <span class="number">1</span>;</span><br><span class="line">    EA = <span class="number">1</span>;           <span class="comment">// 打开所以中断</span></span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">    RI = <span class="number">0</span>;</span><br><span class="line">    SendData(str) ;   <span class="comment">//发送到串口</span></span><br><span class="line">    <span class="comment">//Delay(1);         //延时100US（12M晶振)</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//------------------------</span></span><br><span class="line">        <span class="comment">//调用温湿度读取子程序</span></span><br><span class="line">        RH();</span><br><span class="line">        <span class="comment">//串口显示程序</span></span><br><span class="line">        <span class="comment">//--------------------------</span></span><br><span class="line"></span><br><span class="line">        str[<span class="number">0</span>]=U8RH_data_H;</span><br><span class="line">        str[<span class="number">1</span>]=U8RH_data_L;</span><br><span class="line">        str[<span class="number">2</span>]=U8T_data_H;</span><br><span class="line">        str[<span class="number">3</span>]=U8T_data_L;</span><br><span class="line">        str[<span class="number">4</span>]=U8checkdata;</span><br><span class="line">        SendData(str) ;  <span class="comment">//发送到串口</span></span><br><span class="line">        <span class="comment">//读取模块数据周期不易小于 2S</span></span><br><span class="line">        Delay(<span class="number">20000</span>);</span><br><span class="line">    &#125;<span class="comment">//elihw</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">// main</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RSINTR</span><span class="params">()</span> interrupt 4 <span class="keyword">using</span> 2 </span>&#123;</span><br><span class="line">    U8 InPut3;</span><br><span class="line">    <span class="keyword">if</span>(TI==<span class="number">1</span>) &#123; <span class="comment">//发送中断</span></span><br><span class="line">        TI=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">5</span>) &#123; <span class="comment">//发送完5位数据</span></span><br><span class="line">            SBUF= outdata[count];</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(RI==<span class="number">1</span>) &#123; <span class="comment">//接收中断</span></span><br><span class="line">        InPut3=SBUF;</span><br><span class="line">        indata[count_r]=InPut3;</span><br><span class="line">        count_r++;</span><br><span class="line">        RI=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (count_r==<span class="number">5</span>) &#123; <span class="comment">//接收完4位数据</span></span><br><span class="line">            <span class="comment">//数据接收完毕处理。</span></span><br><span class="line">            count_r=<span class="number">0</span>;</span><br><span class="line">            str[<span class="number">0</span>]=indata[<span class="number">0</span>];</span><br><span class="line">            str[<span class="number">1</span>]=indata[<span class="number">1</span>];</span><br><span class="line">            str[<span class="number">2</span>]=indata[<span class="number">2</span>];</span><br><span class="line">            str[<span class="number">3</span>]=indata[<span class="number">3</span>];</span><br><span class="line">            str[<span class="number">4</span>]=indata[<span class="number">4</span>];</span><br><span class="line">            P0=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 51 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
            <tag> 温湿度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HC-SR04 超声波测距模块 串口 程序</title>
      <link href="/ie/posts/eb168c8b.html"/>
      <url>/ie/posts/eb168c8b.html</url>
      
        <content type="html"><![CDATA[<p>HC-SR04 超声波测距模块 串口 程序</p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************************************************************************************************/</span></span><br><span class="line"><span class="comment">//HC-SR04 超声波测距模块 串口 程序</span></span><br><span class="line"><span class="comment">//晶振：11.0592</span></span><br><span class="line"><span class="comment">//接线：模块TRIG接 P1.2  ECH0 接P1.1</span></span><br><span class="line"><span class="comment">//串口波特率9600</span></span><br><span class="line"><span class="comment">//Atmel AT89C52 C51</span></span><br><span class="line"><span class="comment">/***********************************************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>   <span class="meta-string">&lt;AT89X51.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>   <span class="meta-string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>   <span class="meta-string">&lt;STDIO.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned  char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint  unsigned   int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  RX  P1_1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  TX  P1_2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>  time=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>  timer=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">float</span>         S=<span class="number">0</span>;</span><br><span class="line">bit           flag =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Conut</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    time=TH0*<span class="number">256</span>+TL0;</span><br><span class="line">    TH0=<span class="number">0</span>;</span><br><span class="line">    TL0=<span class="number">0</span>;</span><br><span class="line">    S=(time*<span class="number">1.87</span>)/<span class="number">100</span>;     <span class="comment">//算出来是CM</span></span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>) &#123;    <span class="comment">//超出测量</span></span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-----\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"S=%fcm\n"</span>,S);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delayms</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> ms)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i=<span class="number">100</span>,j;</span><br><span class="line">    <span class="keyword">for</span>(; ms; ms--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(--i) &#123;</span><br><span class="line">            j=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(--j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zd0</span><span class="params">()</span> interrupt 1 </span>&#123; <span class="comment">//T0中断用来计数器溢出,超过测距范围</span></span><br><span class="line">    flag=<span class="number">1</span>; <span class="comment">//中断溢出标志</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">StartModule</span><span class="params">()</span> </span>&#123;         <span class="comment">//T1中断用来扫描数码管和计800MS启动模块</span></span><br><span class="line">    TX=<span class="number">1</span>;                 <span class="comment">//800MS  启动一次模块</span></span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    TX=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    TMOD=<span class="number">0x21</span>;   <span class="comment">//设T0为方式1，GATE=1；</span></span><br><span class="line">    SCON=<span class="number">0x50</span>;</span><br><span class="line">    TH1=<span class="number">0xFD</span>;</span><br><span class="line">    TL1=<span class="number">0xFD</span>;</span><br><span class="line">    TH0=<span class="number">0</span>;</span><br><span class="line">    TL0=<span class="number">0</span>;</span><br><span class="line">    TR0=<span class="number">1</span>;</span><br><span class="line">    ET0=<span class="number">1</span>;             <span class="comment">//允许T0中断</span></span><br><span class="line">    TR1=<span class="number">1</span>;   <span class="comment">//开启定时器</span></span><br><span class="line">    TI=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    EA=<span class="number">1</span>;   <span class="comment">//开启总中断</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        StartModule();</span><br><span class="line">        <span class="keyword">while</span>(!RX);<span class="comment">//当RX为零时等待</span></span><br><span class="line">        TR0=<span class="number">1</span>;    <span class="comment">//开启计数</span></span><br><span class="line">        <span class="keyword">while</span>(RX);<span class="comment">//当RX为1计数并等待</span></span><br><span class="line">        TR0=<span class="number">0</span>;<span class="comment">//关闭计数</span></span><br><span class="line">        Conut();<span class="comment">//计算</span></span><br><span class="line">        delayms(<span class="number">100</span>);<span class="comment">//100MS</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 51 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
            <tag> 超声波 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51按键时钟</title>
      <link href="/ie/posts/d07ffe1c.html"/>
      <url>/ie/posts/d07ffe1c.html</url>
      
        <content type="html"><![CDATA[<p>51按键时钟</p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  按键时钟 秒表，可以通过按键开始或是停止</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"></span><br><span class="line">sbit key =P3 ^ <span class="number">3</span>; <span class="comment">//按键</span></span><br><span class="line"></span><br><span class="line">uchar counter=<span class="number">0</span>,tmp,second=<span class="number">0</span>,minute=<span class="number">0</span>, change = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> led[]= &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>&#125;; <span class="comment">//数字0-9</span></span><br><span class="line"><span class="keyword">int</span> _led[]= &#123;<span class="number">0x40</span>, <span class="number">0x79</span>, <span class="number">0x24</span>, <span class="number">0x30</span>, <span class="number">0x19</span>, <span class="number">0x12</span>, <span class="number">0x02</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clockrun</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置TMOD寄存器</span></span><br><span class="line">    TMOD=<span class="number">0X01</span>;<span class="comment">//设置TMOD寄存器</span></span><br><span class="line">    TH0=(<span class="number">65536</span><span class="number">-5000</span>)/<span class="number">256</span>;   <span class="comment">//装初值</span></span><br><span class="line">    TL0=(<span class="number">65536</span><span class="number">-5000</span>)%<span class="number">256</span>;</span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//开 中断</span></span><br><span class="line">    ET0=<span class="number">1</span>;</span><br><span class="line">    TR0=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(key==<span class="number">0</span>) &#123;<span class="comment">//按键按下</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            clockrun();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zhongduan</span><span class="params">()</span>interrupt 1 </span>&#123;</span><br><span class="line">    TH0=(<span class="number">65536</span><span class="number">-5000</span>)/<span class="number">256</span>;   <span class="comment">//装初值</span></span><br><span class="line">    TL0=(<span class="number">65536</span><span class="number">-5000</span>)%<span class="number">256</span>;</span><br><span class="line">    TF0=<span class="number">0</span>;</span><br><span class="line">    TR0=<span class="number">1</span>;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="keyword">if</span>(counter==<span class="number">200</span>) &#123;</span><br><span class="line">        counter=<span class="number">0</span>;</span><br><span class="line">        second++;</span><br><span class="line">        <span class="keyword">if</span>(second==<span class="number">60</span>) &#123;</span><br><span class="line">            second=<span class="number">0</span>;</span><br><span class="line">            minute++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    change = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clockrun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tmp=counter%<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">switch</span>(tmp) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        P2 = <span class="number">0x7f</span>;</span><br><span class="line">        P0 = led[second%<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        P2 = <span class="number">0xbf</span>;</span><br><span class="line">        P0 = led[second/<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        P2 = <span class="number">0xdf</span>;</span><br><span class="line">        P0 = _led[minute%<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        P2 = <span class="number">0xef</span>;</span><br><span class="line">        P0 = led[minute/<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 51 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
            <tag> 按键时钟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51 秒表</title>
      <link href="/ie/posts/129a9db5.html"/>
      <url>/ie/posts/129a9db5.html</url>
      
        <content type="html"><![CDATA[<p>51 单片机 秒表</p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  秒表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line">uchar counter=<span class="number">0</span>,tmp,second=<span class="number">0</span>,minute=<span class="number">0</span>, change = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> led[]= &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>&#125;; <span class="comment">//数字0-9</span></span><br><span class="line"><span class="keyword">int</span> _led[]= &#123;<span class="number">0x40</span>, <span class="number">0x79</span>, <span class="number">0x24</span>, <span class="number">0x30</span>, <span class="number">0x19</span>, <span class="number">0x12</span>, <span class="number">0x02</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x10</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置TMOD寄存器</span></span><br><span class="line">    TMOD=<span class="number">0X01</span>;<span class="comment">//设置TMOD寄存器</span></span><br><span class="line">    TH0=(<span class="number">65536</span><span class="number">-5000</span>)/<span class="number">256</span>;   <span class="comment">//装初值</span></span><br><span class="line">    TL0=(<span class="number">65536</span><span class="number">-5000</span>)%<span class="number">256</span>;</span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//开 中断</span></span><br><span class="line">    ET0=<span class="number">1</span>;</span><br><span class="line">    TR0=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">        tmp=counter%<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">switch</span>(tmp) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            P2 = <span class="number">0x7f</span>;</span><br><span class="line">            P0 = led[second%<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            P2 = <span class="number">0xbf</span>;</span><br><span class="line">            P0 = led[second/<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            P2 = <span class="number">0xdf</span>;</span><br><span class="line">            P0 = _led[minute%<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            P2 = <span class="number">0xef</span>;</span><br><span class="line">            P0 = led[minute/<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zhongduan</span><span class="params">()</span>interrupt 1 </span>&#123;</span><br><span class="line">    TH0=(<span class="number">65536</span><span class="number">-5000</span>)/<span class="number">256</span>;   <span class="comment">//装初值</span></span><br><span class="line">    TL0=(<span class="number">65536</span><span class="number">-5000</span>)%<span class="number">256</span>;</span><br><span class="line">    TF0=<span class="number">0</span>;</span><br><span class="line">    TR0=<span class="number">1</span>;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="keyword">if</span>(counter==<span class="number">200</span>) &#123;</span><br><span class="line">        counter=<span class="number">0</span>;</span><br><span class="line">        second++;</span><br><span class="line">        <span class="keyword">if</span>(second==<span class="number">60</span>) &#123;</span><br><span class="line">            second=<span class="number">0</span>;</span><br><span class="line">            minute++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    change = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 51 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
            <tag> 秒表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyc文件反编译到Python源码</title>
      <link href="/ie/posts/14fa5bba.html"/>
      <url>/ie/posts/14fa5bba.html</url>
      
        <content type="html"><![CDATA[<p>pyc文件反编译到Python源码</p><a id="more"></a><p>使用uncompyle</p><p>项目地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpYml0aS91bmNvbXB5bGUy" title="https://github.com/wibiti/uncompyle2">https://github.com/wibiti/uncompyle2<i class="fa fa-external-link"></i></span></p><p>注： 按照官方文档的说法应该是只支持python 2.7，其他版本我也没有测试</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>最方便的就是使用pip安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install uncompyle</span><br></pre></td></tr></table></figure><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 --help</span><br></pre></td></tr></table></figure><h2 id="将models-pyc反编译成py文件"><a href="#将models-pyc反编译成py文件" class="headerlink" title="将models.pyc反编译成py文件"></a>将models.pyc反编译成py文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 models.pyc &gt; models.py</span><br></pre></td></tr></table></figure><h2 id="将当前文件夹中所有的pyc文件反编译成后缀名为-pyc-dis的源文件"><a href="#将当前文件夹中所有的pyc文件反编译成后缀名为-pyc-dis的源文件" class="headerlink" title="将当前文件夹中所有的pyc文件反编译成后缀名为.pyc_dis的源文件"></a>将当前文件夹中所有的pyc文件反编译成后缀名为.pyc_dis的源文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompile -o . *.pyc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 反编译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 反编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python RailFenceCipher</title>
      <link href="/ie/posts/91223731.html"/>
      <url>/ie/posts/91223731.html</url>
      
        <content type="html"><![CDATA[<p>Python RailFenceCipher</p><a id="more"></a><p>RailFenceCipher.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">railFenceCipher</span><span class="params">()</span>:</span></span><br><span class="line">    e = input()</span><br><span class="line">    elen = len(e)</span><br><span class="line">    field=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,elen):</span><br><span class="line">        <span class="keyword">if</span>(elen%i==<span class="number">0</span>):</span><br><span class="line">            field.append(i)</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> field:</span><br><span class="line">        b = int(elen / f)</span><br><span class="line">        result = &#123;x:<span class="string">''</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(b)&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(elen):</span><br><span class="line">            a = i % b;</span><br><span class="line">            result.update(&#123;a:result[a] + e[i]&#125;)</span><br><span class="line">        d = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(b):</span><br><span class="line">            d = d + result[i]</span><br><span class="line">        <span class="keyword">print</span> (d.lower())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            railFenceCipher()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python QRcode</title>
      <link href="/ie/posts/6980c27e.html"/>
      <url>/ie/posts/6980c27e.html</url>
      
        <content type="html"><![CDATA[<p>Python QRcode</p><a id="more"></a><p>enQRcode.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qrcode</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment">#pip install zxing解析库，还需要安装PIL，pillow和qrCode库</span></span><br><span class="line"></span><br><span class="line">QRImagePath = os.getcwd() + <span class="string">'/qrcode.png'</span>   <span class="comment">#临时存储位置</span></span><br><span class="line">qr = qrcode.QRCode(     </span><br><span class="line">    version=<span class="number">1</span>,</span><br><span class="line">    error_correction=qrcode.constants.ERROR_CORRECT_L,</span><br><span class="line">    box_size=<span class="number">10</span>,</span><br><span class="line">    border=<span class="number">2</span>,</span><br><span class="line">)   <span class="comment">#设置图片格式</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"input:QRcode image:"</span>)</span><br><span class="line">data = input()  <span class="comment">#运行时输入数据</span></span><br><span class="line">qr.add_data(data)</span><br><span class="line">qr.make(fit=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">img = qr.make_image()</span><br><span class="line">img.save(<span class="string">'qrcode.png'</span>)  <span class="comment">#生成图片</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> sys.platform.find(<span class="string">'darwin'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">    os.system(<span class="string">'open %s'</span> % QRImagePath)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">elif</span> sys.platform.find(<span class="string">'linux'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">    os.system(<span class="string">'xdg-open %s'</span> % QRImagePath)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    os.system(<span class="string">'call %s'</span> % QRImagePath)</span><br><span class="line">    </span><br><span class="line">time.sleep(<span class="number">5</span>)   <span class="comment">#间隔5个单位</span></span><br><span class="line"><span class="comment">#os.remove(QRImagePath)  #删除图片</span></span><br></pre></td></tr></table></figure><p>deQRcode.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> zxing    <span class="comment">#导入解析包</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">logger = logging.getLogger(__name__)    <span class="comment">#记录数据</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> logger.handlers:</span><br><span class="line">    logging.basicConfig(level = logging.INFO)</span><br><span class="line">DEBUG = (logging.getLevelName(logger.getEffectiveLevel()) == <span class="string">'DEBUG'</span>)   <span class="comment">#记录调式过程</span></span><br><span class="line"><span class="comment"># 在当前目录生成临时文件，规避java的路径问题</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr_qrcode_zxing</span><span class="params">(filename)</span>:</span></span><br><span class="line">    img = Image.open(filename)</span><br><span class="line">    ran = int(random.random() * <span class="number">100000</span>)     <span class="comment">#设置随机数据的大小</span></span><br><span class="line">    img.save(<span class="string">'%s%s.jpg'</span> % (os.path.basename(filename).split(<span class="string">'.'</span>)[<span class="number">0</span>], ran))</span><br><span class="line">    zx = zxing.BarCodeReader()      <span class="comment">#调用zxing二维码读取包</span></span><br><span class="line">    data = <span class="string">''</span></span><br><span class="line">    zxdata = zx.decode(<span class="string">'%s%s.jpg'</span> % (os.path.basename(filename).split(<span class="string">'.'</span>)[<span class="number">0</span>], ran))    <span class="comment">#图片解码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除临时文件</span></span><br><span class="line">    os.remove(<span class="string">'%s%s.jpg'</span> % (os.path.basename(filename).split(<span class="string">'.'</span>)[<span class="number">0</span>], ran))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> zxdata:</span><br><span class="line">        logger.debug(<span class="string">u'zxing识别二维码:%s,内容: %s'</span> % (filename, zxdata))</span><br><span class="line">        data = zxdata</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logger.error(<span class="string">u'识别zxing二维码出错:%s'</span> % (filename))</span><br><span class="line">        img.save(<span class="string">'%s-zxing.jpg'</span> % filename)</span><br><span class="line">    <span class="keyword">return</span> data     <span class="comment">#返回记录的内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">"input:QRcode path:"</span>)</span><br><span class="line">    filename = input()</span><br><span class="line">    <span class="comment"># zxing二维码识别</span></span><br><span class="line">    ltext = ocr_qrcode_zxing(filename)  <span class="comment">#将图片文件里的信息转码放到ltext里面</span></span><br><span class="line">    logger.info(<span class="string">u'[%s]Zxing二维码识别:[%s]!!!'</span> % (filename, ltext))  <span class="comment">#记录文本信息</span></span><br><span class="line">    </span><br><span class="line">print(ltext)    <span class="comment">#打印出二维码名字</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Playfair</title>
      <link href="/ie/posts/b4a5318a.html"/>
      <url>/ie/posts/b4a5318a.html</url>
      
        <content type="html"><![CDATA[<p>Python Playfair</p><a id="more"></a><p>Playfair.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#########################Playfair密码#########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#约定1：若明文字母数量为奇数，在明文末尾添加一个'Z'</span></span><br><span class="line"><span class="comment">#约定2：'I'作为'J'来处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#字母表</span></span><br><span class="line">letter_list=<span class="string">'ABCDEFGHJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#密码表</span></span><br><span class="line">T_letter=[<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>]</span><br><span class="line"><span class="comment">#根据密钥建立密码表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Create_Matrix</span><span class="params">(key)</span>:</span></span><br><span class="line">  key=Remove_Duplicates(key)  <span class="comment">#移除密钥中的重复字母</span></span><br><span class="line">  key=key.replace(<span class="string">' '</span>,<span class="string">''</span>) <span class="comment">#去除密钥中的空格</span></span><br><span class="line">  <span class="keyword">for</span> ch <span class="keyword">in</span> letter_list:  <span class="comment">#根据密钥获取新组合的字母表</span></span><br><span class="line">    <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> key:</span><br><span class="line">      key+=ch</span><br><span class="line"> </span><br><span class="line">  j=<span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(len(key)): <span class="comment">#将新的字母表里的字母逐个填入密码表中，组成5*5的矩阵</span></span><br><span class="line">    T_letter[j]+=key[i]     <span class="comment">#j用来定位字母表的行</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span>==(i+<span class="number">1</span>)%<span class="number">5</span>:</span><br><span class="line">      j+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#移除字符串中重复的字母</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Remove_Duplicates</span><span class="params">(key)</span>:</span></span><br><span class="line">  key=key.upper() <span class="comment">#转成大写字母组成的字符串</span></span><br><span class="line">  _key=<span class="string">''</span></span><br><span class="line">  <span class="keyword">for</span> ch <span class="keyword">in</span> key:</span><br><span class="line">    <span class="keyword">if</span> ch==<span class="string">'I'</span>:</span><br><span class="line">      ch=<span class="string">'J'</span></span><br><span class="line">    <span class="keyword">if</span> ch <span class="keyword">in</span> _key:</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      _key+=ch</span><br><span class="line">  <span class="keyword">return</span> _key</span><br><span class="line"> </span><br><span class="line"><span class="comment">#获取字符在密码表中的位置</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Get_MatrixIndex</span><span class="params">(ch)</span>:</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(len(T_letter)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(T_letter)):</span><br><span class="line">      <span class="keyword">if</span> ch==T_letter[i][j]:</span><br><span class="line">        <span class="keyword">return</span> i,j <span class="comment">#i为行，j为列</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encrypt</span><span class="params">(plaintext,T_letter)</span>:</span></span><br><span class="line">  ciphertext=<span class="string">''</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> len(plaintext) % <span class="number">2</span> !=<span class="number">0</span>:  <span class="comment">#如果新的明文长度为奇数，在其末尾添上'Z'</span></span><br><span class="line">    plaintext+=<span class="string">'Z'</span></span><br><span class="line"> </span><br><span class="line">  i=<span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> i&lt;len(plaintext): <span class="comment">#对明文进行遍历</span></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>==plaintext[i].isalpha():  <span class="comment">#如果是明文是字母的话，</span></span><br><span class="line">      j=i+<span class="number">1</span>                           <span class="comment">#则开始对该字母之后的明文进行遍历，</span></span><br><span class="line">      <span class="keyword">while</span> j&lt;len(plaintext):         <span class="comment">#直到遍历到字母，进行加密</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">True</span>==plaintext[j].isalpha():</span><br><span class="line">          <span class="keyword">if</span> <span class="string">'I'</span>==plaintext[i].upper():             <span class="comment">#</span></span><br><span class="line">            x=Get_MatrixIndex(<span class="string">'J'</span>)                  <span class="comment">#</span></span><br><span class="line">          <span class="keyword">else</span>:                                     <span class="comment">#</span></span><br><span class="line">            x=Get_MatrixIndex(plaintext[i].upper()) <span class="comment">#对字符在密码表中的坐标</span></span><br><span class="line">          <span class="keyword">if</span> <span class="string">'I'</span>==plaintext[j].upper():             <span class="comment">#进行定位,同时将'I'作为</span></span><br><span class="line">              y=Get_MatrixIndex(<span class="string">'J'</span>)                <span class="comment">#'J'来处理</span></span><br><span class="line">          <span class="keyword">else</span>:                                     <span class="comment">#</span></span><br><span class="line">            y=Get_MatrixIndex(plaintext[j].upper()) <span class="comment">#</span></span><br><span class="line">          </span><br><span class="line">          <span class="keyword">if</span> x[<span class="number">0</span>]==y[<span class="number">0</span>]:    <span class="comment">#如果在同一行</span></span><br><span class="line">            ciphertext+=T_letter[x[<span class="number">0</span>]][(x[<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">5</span>]+T_letter[y[<span class="number">0</span>]][(y[<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">5</span>]</span><br><span class="line">          <span class="keyword">elif</span> x[<span class="number">1</span>]==y[<span class="number">1</span>]:  <span class="comment">#如果在同一列</span></span><br><span class="line">            ciphertext+=T_letter[(x[<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">5</span>][x[<span class="number">0</span>]]+T_letter[(y[<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">5</span>][y[<span class="number">0</span>]]</span><br><span class="line">          <span class="keyword">else</span>:             <span class="comment">#如果不同行不同列</span></span><br><span class="line">            ciphertext+=T_letter[x[<span class="number">0</span>]][y[<span class="number">1</span>]]+T_letter[y[<span class="number">0</span>]][x[<span class="number">1</span>]]</span><br><span class="line">          <span class="keyword">break</span>;  <span class="comment">#每组明文对加密完成后，结束本次对明文的遍历</span></span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">      i=j+<span class="number">1</span>  <span class="comment">#每次对明文的遍历是从加密过后的明文的后一个明文开始的,结束本次循环</span></span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      ciphertext+=plaintext[i]  <span class="comment">#如果明文不是字母，直接加到密文上</span></span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">return</span> ciphertext</span><br><span class="line"> </span><br><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(ciphertext,T_letter)</span>:</span></span><br><span class="line">  plaintext=<span class="string">''</span></span><br><span class="line">  <span class="keyword">if</span> len(ciphertext) % <span class="number">2</span> !=<span class="number">0</span>:  <span class="comment">#如果新的密文长度为奇数，在其末尾添上'Z'</span></span><br><span class="line">    ciphertext+=<span class="string">'Z'</span></span><br><span class="line">  </span><br><span class="line">  i=<span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> i&lt;len(ciphertext): <span class="comment">#对密文进行遍历</span></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>==ciphertext[i].isalpha():  <span class="comment">#如果是密文是字母的话，</span></span><br><span class="line">      j=i+<span class="number">1</span>                            <span class="comment">#则开始对该字母之后的密文进行遍历，</span></span><br><span class="line">      <span class="keyword">while</span> j&lt;len(ciphertext):         <span class="comment">#直到遍历到字母，进行解密</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">True</span>==ciphertext[j].isalpha():</span><br><span class="line">          <span class="keyword">if</span> <span class="string">'I'</span>==ciphertext[i].upper():              <span class="comment">#</span></span><br><span class="line">            x=Get_MatrixIndex(<span class="string">'J'</span>)                    <span class="comment">#</span></span><br><span class="line">          <span class="keyword">else</span>:                                       <span class="comment">#</span></span><br><span class="line">            x=Get_MatrixIndex(ciphertext[i].upper())  <span class="comment">#对字符在密码表中的坐标</span></span><br><span class="line">          <span class="keyword">if</span> <span class="string">'I'</span>==ciphertext[j].upper():              <span class="comment">#进行定位,同时将'I'作为</span></span><br><span class="line">              y=Get_MatrixIndex(<span class="string">'J'</span>)                  <span class="comment">#'J'来处理</span></span><br><span class="line">          <span class="keyword">else</span>:                                       <span class="comment">#</span></span><br><span class="line">            y=Get_MatrixIndex(ciphertext[j].upper())  <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> x[<span class="number">0</span>]==y[<span class="number">0</span>]:    <span class="comment">#如果在同一行</span></span><br><span class="line">            plaintext+=T_letter[x[<span class="number">0</span>]][(x[<span class="number">1</span>]<span class="number">-1</span>)%<span class="number">5</span>]+T_letter[y[<span class="number">0</span>]][(y[<span class="number">1</span>]<span class="number">-1</span>)%<span class="number">5</span>]</span><br><span class="line">          <span class="keyword">elif</span> x[<span class="number">1</span>]==y[<span class="number">1</span>]:  <span class="comment">#如果在同一列</span></span><br><span class="line">            plaintext+=T_letter[(x[<span class="number">1</span>]<span class="number">-1</span>)%<span class="number">5</span>][x[<span class="number">0</span>]]+T_letter[(y[<span class="number">1</span>]<span class="number">-1</span>)%<span class="number">5</span>][y[<span class="number">0</span>]]</span><br><span class="line">          <span class="keyword">else</span>:             <span class="comment">#如果不同行不同列</span></span><br><span class="line">            plaintext+=T_letter[x[<span class="number">0</span>]][y[<span class="number">1</span>]]+T_letter[y[<span class="number">0</span>]][x[<span class="number">1</span>]]</span><br><span class="line">          <span class="keyword">break</span>;  <span class="comment">#每组密文对解密完成后，结束本次对密文的遍历</span></span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">      i=j+<span class="number">1</span>  <span class="comment">#每次对密文的遍历是从解密过后的密文的后一个密文开始的,结束本次循环</span></span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      plaintext+=ciphertext[i]  <span class="comment">#如果密文不是字母，直接加到明文上</span></span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#主函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"加密请按D,解密请按E:"</span>)</span><br><span class="line">  user_input=input();</span><br><span class="line">  <span class="keyword">while</span>(user_input!=<span class="string">'D'</span> <span class="keyword">and</span> user_input!=<span class="string">'E'</span>):<span class="comment">#输入合法性检测</span></span><br><span class="line">    print(<span class="string">"输入有误!请重新输入:"</span>)</span><br><span class="line">    user_input=input()</span><br><span class="line"></span><br><span class="line">  print(<span class="string">'请输入密钥，密钥由英文字母组成:'</span>)</span><br><span class="line">  key=input()</span><br><span class="line">  Create_Matrix(key)  <span class="comment">#建立密码表</span></span><br><span class="line">  <span class="keyword">if</span> user_input==<span class="string">'D'</span>: <span class="comment">#加密</span></span><br><span class="line">    print(<span class="string">'请输入明文:'</span>)</span><br><span class="line">    plaintext=input()</span><br><span class="line">    print(<span class="string">"密文为:\n%s"</span> % Encrypt(plaintext,T_letter))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span>:               <span class="comment">#解密</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'请输入密文:'</span>)</span><br><span class="line">    ciphertext=input()</span><br><span class="line">    print(<span class="string">'明文为:\n%s'</span> % Decrypt(ciphertext,T_letter))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Caesar</title>
      <link href="/ie/posts/fecd7f2.html"/>
      <url>/ie/posts/fecd7f2.html</url>
      
        <content type="html"><![CDATA[<p>Python Caesar</p><a id="more"></a><p>Caesar.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encryption</span><span class="params">()</span>:</span></span><br><span class="line">    str_raw = input(<span class="string">"请输入明文："</span>)</span><br><span class="line">    k = int(input(<span class="string">"请输入位移值："</span>))</span><br><span class="line">    str_change = str_raw.lower()</span><br><span class="line">    str_list = list(str_change)</span><br><span class="line">    str_list_encry = str_list</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(str_list):</span><br><span class="line">        <span class="keyword">if</span> ord(str_list[i]) &lt; <span class="number">123</span>-k:</span><br><span class="line">            str_list_encry[i] = chr(ord(str_list[i]) + k)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            str_list_encry[i] = chr(ord(str_list[i]) + k - <span class="number">26</span>)</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"加密结果为："</span>+<span class="string">""</span>.join(str_list_encry))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">()</span>:</span></span><br><span class="line">    str_raw = input(<span class="string">"请输入密文："</span>)</span><br><span class="line">    k = int(input(<span class="string">"请输入位移值：(-1代表穷举)"</span>))</span><br><span class="line">    <span class="keyword">if</span> k==<span class="number">-1</span>:</span><br><span class="line">        print(<span class="string">"解密结果为："</span>)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">            str_change = str_raw.lower()</span><br><span class="line">            str_list = list(str_change)</span><br><span class="line">            str_list_decry = str_list</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; len(str_list):</span><br><span class="line">                <span class="keyword">if</span> ord(str_list[i]) &gt;= <span class="number">97</span>+k:</span><br><span class="line">                    str_list_decry[i] = chr(ord(str_list[i]) - k)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    str_list_decry[i] = chr(ord(str_list[i]) + <span class="number">26</span> - k)</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="string">""</span>.join(str_list_decry))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"解密结果为："</span>)</span><br><span class="line">        str_change = str_raw.lower()</span><br><span class="line">        str_list = list(str_change)</span><br><span class="line">        str_list_decry = str_list</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(str_list):</span><br><span class="line">            <span class="keyword">if</span> ord(str_list[i]) &gt;= <span class="number">97</span>+k:</span><br><span class="line">                str_list_decry[i] = chr(ord(str_list[i]) - k)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                str_list_decry[i] = chr(ord(str_list[i]) + <span class="number">26</span> - k)</span><br><span class="line">            i = i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">""</span>.join(str_list_decry))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">u"1. 加密"</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">u"2. 解密"</span>)</span><br><span class="line">    choice = input(<span class="string">"请选择："</span>)</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">"1"</span>:</span><br><span class="line">        encryption()</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">"2"</span>:</span><br><span class="line">        decryption()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">u"您的输入有误！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            caesar()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python BinaryConversion</title>
      <link href="/ie/posts/1601d925.html"/>
      <url>/ie/posts/1601d925.html</url>
      
        <content type="html"><![CDATA[<p>Python BinaryConversion</p><a id="more"></a><p>Binary.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">import re</span><br><span class="line">import argparse</span><br><span class="line">  </span><br><span class="line">def bintostr(text):</span><br><span class="line">    text = text.replace(&apos; &apos;,&apos;&apos;)</span><br><span class="line">    text = re.findall(r&apos;.&#123;8&#125;&apos;,text)</span><br><span class="line">    s = map(lambda x:chr(int(x,2)),text) #批量二进制转十进制</span><br><span class="line">    flag = &apos;&apos;.join(s)</span><br><span class="line">    return (flag)</span><br><span class="line">  </span><br><span class="line">def asciitostr(text):</span><br><span class="line">    if &apos; &apos; in text:</span><br><span class="line">        text = text.split(&apos; &apos;)</span><br><span class="line">    elif &apos;,&apos; in text:</span><br><span class="line">        text = text.split(&apos;,&apos;)</span><br><span class="line">    s = map(lambda x:chr(int(x)),text)</span><br><span class="line">    flag = &apos;&apos;.join(s)</span><br><span class="line">    return flag</span><br><span class="line">  </span><br><span class="line">def hextostr(text):</span><br><span class="line">    text = re.findall(r&apos;.&#123;2&#125;&apos;,text)</span><br><span class="line">    #print text</span><br><span class="line">    s = map(lambda x:chr(int(x,16)),text)</span><br><span class="line">    #print s</span><br><span class="line">    flag = &apos;&apos;.join(s)</span><br><span class="line">    return flag</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(&quot;-b&quot;)</span><br><span class="line">    parser.add_argument(&quot;-a&quot;)</span><br><span class="line">    parser.add_argument(&quot;-x&quot;)</span><br><span class="line">    argv = parser.parse_args()</span><br><span class="line">    #print argv</span><br><span class="line">    if argv.b:</span><br><span class="line">        res = bintostr(argv.b)</span><br><span class="line">        print (res)</span><br><span class="line">    elif argv.a:</span><br><span class="line">        res = asciitostr(argv.a)</span><br><span class="line">        print (res)</span><br><span class="line">    elif argv.x:</span><br><span class="line">        res = hextostr(argv.x)</span><br><span class="line">        print (res)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Morse</title>
      <link href="/ie/posts/a2af0ea3.html"/>
      <url>/ie/posts/a2af0ea3.html</url>
      
        <content type="html"><![CDATA[<p>Python Morse</p><a id="more"></a><p>Morse.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Morse</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = input()</span><br><span class="line">        codebook = &#123;</span><br><span class="line">            <span class="string">'A'</span>:<span class="string">".-"</span>,</span><br><span class="line">            <span class="string">'B'</span>:<span class="string">"-..."</span>,</span><br><span class="line">            <span class="string">'C'</span>:<span class="string">"-.-."</span>,</span><br><span class="line">            <span class="string">'D'</span>:<span class="string">"-.."</span>,</span><br><span class="line">            <span class="string">'E'</span>:<span class="string">"."</span>,</span><br><span class="line">            <span class="string">'F'</span>:<span class="string">"..-."</span>,</span><br><span class="line">            <span class="string">'G'</span>:<span class="string">"--."</span>,</span><br><span class="line">            <span class="string">'H'</span>:<span class="string">"...."</span>,</span><br><span class="line">            <span class="string">'I'</span>:<span class="string">".."</span>,</span><br><span class="line">            <span class="string">'J'</span>:<span class="string">".---"</span>,</span><br><span class="line">            <span class="string">'K'</span>:<span class="string">"-.-"</span>,</span><br><span class="line">            <span class="string">'L'</span>:<span class="string">".-.."</span>,</span><br><span class="line">            <span class="string">'M'</span>:<span class="string">"--"</span>,</span><br><span class="line">            <span class="string">'N'</span>:<span class="string">"-."</span>,</span><br><span class="line">            <span class="string">'O'</span>:<span class="string">"---"</span>,</span><br><span class="line">            <span class="string">'P'</span>:<span class="string">".--."</span>,</span><br><span class="line">            <span class="string">'Q'</span>:<span class="string">"--.-"</span>,</span><br><span class="line">            <span class="string">'R'</span>:<span class="string">".-."</span>,</span><br><span class="line">            <span class="string">'S'</span>:<span class="string">"..."</span>,</span><br><span class="line">            <span class="string">'T'</span>:<span class="string">"-"</span>,</span><br><span class="line">            <span class="string">'U'</span>:<span class="string">"..-"</span>,</span><br><span class="line">            <span class="string">'V'</span>:<span class="string">".--"</span>,</span><br><span class="line">            <span class="string">'W'</span>:<span class="string">".--"</span>,</span><br><span class="line">            <span class="string">'X'</span>:<span class="string">"-..-"</span>,</span><br><span class="line">            <span class="string">'Y'</span>:<span class="string">"-.--"</span>,</span><br><span class="line">            <span class="string">'Z'</span>:<span class="string">"--.."</span>,</span><br><span class="line">            <span class="string">'1'</span>:<span class="string">".----"</span>,</span><br><span class="line">            <span class="string">'2'</span>:<span class="string">"..---"</span>,</span><br><span class="line">            <span class="string">'3'</span>:<span class="string">"...---"</span>,</span><br><span class="line">            <span class="string">'4'</span>:<span class="string">"....-"</span>,</span><br><span class="line">            <span class="string">'5'</span>:<span class="string">"....."</span>,</span><br><span class="line">            <span class="string">'6'</span>:<span class="string">"-...."</span>,</span><br><span class="line">            <span class="string">'7'</span>:<span class="string">"--..."</span>,</span><br><span class="line">            <span class="string">'8'</span>:<span class="string">"---.."</span>,</span><br><span class="line">            <span class="string">'9'</span>:<span class="string">"----."</span>,</span><br><span class="line">            <span class="string">'0'</span>:<span class="string">"-----"</span>,</span><br><span class="line">            <span class="string">'.'</span>:<span class="string">".━.━.━"</span>,</span><br><span class="line">            <span class="string">'?'</span>:<span class="string">"..--.."</span>,</span><br><span class="line">            <span class="string">'!'</span>:<span class="string">"-.-.--"</span>,</span><br><span class="line">            <span class="string">'('</span>:<span class="string">"-.--."</span>,</span><br><span class="line">            <span class="string">'@'</span>:<span class="string">".--.-."</span>,</span><br><span class="line">            <span class="string">':'</span>:<span class="string">"---..."</span>,</span><br><span class="line">            <span class="string">'='</span>:<span class="string">"-...-"</span>,</span><br><span class="line">            <span class="string">'-'</span>:<span class="string">"-....-"</span>,</span><br><span class="line">            <span class="string">')'</span>:<span class="string">"-.--.-"</span>,</span><br><span class="line">            <span class="string">'+'</span>:<span class="string">".-.-."</span>,</span><br><span class="line">            <span class="string">','</span>:<span class="string">"--..--"</span>,</span><br><span class="line">            <span class="string">'\''</span>:<span class="string">".----."</span>,</span><br><span class="line">            <span class="string">'_'</span>:<span class="string">"..--.-"</span>,</span><br><span class="line">            <span class="string">'$'</span>:<span class="string">"...-..-"</span>,</span><br><span class="line">            <span class="string">';'</span>:<span class="string">"-.-.-."</span>,</span><br><span class="line">            <span class="string">'/'</span>:<span class="string">"-..-."</span>,</span><br><span class="line">            <span class="string">'\"'</span>:<span class="string">".-..-."</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        clear = <span class="string">""</span></span><br><span class="line">        cipher = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            ss = s.split(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> ss:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> codebook.keys():</span><br><span class="line">                    <span class="keyword">if</span> codebook[k] == c:</span><br><span class="line">                        cipher+=k</span><br><span class="line">            print(cipher)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            Morse()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python MD5</title>
      <link href="/ie/posts/53ab8d74.html"/>
      <url>/ie/posts/53ab8d74.html</url>
      
        <content type="html"><![CDATA[<p>Python MD5</p><a id="more"></a><p>MD5.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MD5</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">str</span><span class="params">()</span>:</span></span><br><span class="line">        str=input()</span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(str.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        <span class="keyword">print</span> (m.hexdigest())</span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filebin</span><span class="params">()</span>:</span></span><br><span class="line">        src=input()</span><br><span class="line">        f = open(src, <span class="string">'rb'</span>)</span><br><span class="line">        f_md5 = hashlib.md5()</span><br><span class="line">        f_md5.update(f.read())</span><br><span class="line">        <span class="keyword">print</span> (f_md5.hexdigest())</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file</span><span class="params">()</span>:</span></span><br><span class="line">        src=input()</span><br><span class="line">        f = open(src, <span class="string">'r'</span>)</span><br><span class="line">        f_md5 = hashlib.md5()</span><br><span class="line">        f_md5.update(f.read().encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        <span class="keyword">print</span> (f_md5.hexdigest())</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            MD5.filebin()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Base</title>
      <link href="/ie/posts/7827182c.html"/>
      <url>/ie/posts/7827182c.html</url>
      
        <content type="html"><![CDATA[<p>Python Base</p><a id="more"></a><p>Base.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64codes</span><span class="params">()</span>:</span></span><br><span class="line">    s = input()</span><br><span class="line">    b64encode = base64.b64encode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    b32encode = base64.b32encode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    b16encode = base64.b16encode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    print(b64encode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    print(b32encode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    print(b16encode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    print(<span class="string">'---------------------------------'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        b64decode = base64.b64decode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">        print(b64decode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        b32decode = base64.b32decode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">        print(b32decode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        b16decode = base64.b16decode(s.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">        print(b16decode.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            base64codes()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Baconian</title>
      <link href="/ie/posts/5efb0a25.html"/>
      <url>/ie/posts/5efb0a25.html</url>
      
        <content type="html"><![CDATA[<p>Python Baconian</p><a id="more"></a><p>Baconian.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">alphabet = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>]</span><br><span class="line">first_cipher = [<span class="string">"aaaaa"</span>,<span class="string">"aaaab"</span>,<span class="string">"aaaba"</span>,<span class="string">"aaabb"</span>,<span class="string">"aabaa"</span>,<span class="string">"aabab"</span>,<span class="string">"aabba"</span>,<span class="string">"aabbb"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaab"</span>,<span class="string">"ababa"</span>,<span class="string">"ababb"</span>,<span class="string">"abbaa"</span>,<span class="string">"abbab"</span>,<span class="string">"abbba"</span>,<span class="string">"abbbb"</span>,<span class="string">"baaaa"</span>,<span class="string">"baaab"</span>,<span class="string">"baaba"</span>,<span class="string">"baabb"</span>,<span class="string">"babaa"</span>,<span class="string">"babab"</span>,<span class="string">"babba"</span>,<span class="string">"babbb"</span>,<span class="string">"bbaaa"</span>,<span class="string">"bbaab"</span>]</span><br><span class="line">second_cipher = [<span class="string">"aaaaa"</span>,<span class="string">"aaaab"</span>,<span class="string">"aaaba"</span>,<span class="string">"aaabb"</span>,<span class="string">"aabaa"</span>,<span class="string">"aabab"</span>,<span class="string">"aabba"</span>,<span class="string">"aabbb"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaab"</span>,<span class="string">"ababa"</span>,<span class="string">"ababb"</span>,<span class="string">"abbaa"</span>,<span class="string">"abbab"</span>,<span class="string">"abbba"</span>,<span class="string">"abbbb"</span>,<span class="string">"baaaa"</span>,<span class="string">"baaab"</span>,<span class="string">"baaba"</span>,<span class="string">"baabb"</span>,<span class="string">"baabb"</span>,<span class="string">"babaa"</span>,<span class="string">"babab"</span>,<span class="string">"babba"</span>,<span class="string">"babbb"</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">()</span>:</span></span><br><span class="line">    upper_flag = <span class="literal">False</span> <span class="comment"># 用于判断输入是否为大写</span></span><br><span class="line">    string = input(<span class="string">"please input string to encode:\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> string.isupper():</span><br><span class="line">        upper_flag = <span class="literal">True</span></span><br><span class="line">        string = string.lower()</span><br><span class="line">    e_string1 = <span class="string">""</span></span><br><span class="line">    e_string2 = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> string:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> index == alphabet[i]:</span><br><span class="line">                e_string1 += first_cipher[i]</span><br><span class="line">                e_string2 += second_cipher[i]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> upper_flag:</span><br><span class="line">        e_string1 = e_string1.upper()</span><br><span class="line">        e_string2 = e_string2.upper()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"first encode method result is:\n"</span>+e_string1)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"second encode method result is:\n"</span>+e_string2)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">()</span>:</span></span><br><span class="line">    upper_flag = <span class="literal">False</span>  <span class="comment"># 用于判断输入是否为大写</span></span><br><span class="line">    e_string = input(<span class="string">"please input string to decode:\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> e_string.isupper():</span><br><span class="line">        upper_flag = <span class="literal">True</span></span><br><span class="line">        e_string = e_string.lower()</span><br><span class="line">    e_array = re.findall(<span class="string">".&#123;5&#125;"</span>,e_string)</span><br><span class="line">    d_string1 = <span class="string">""</span></span><br><span class="line">    d_string2 = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> e_array:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> index == first_cipher[i]:</span><br><span class="line">                d_string1 += alphabet[i]</span><br><span class="line">            <span class="keyword">if</span> index == second_cipher[i]:</span><br><span class="line">                d_string2 += alphabet[i]</span><br><span class="line">    <span class="keyword">if</span> upper_flag:</span><br><span class="line">        d_string1 = d_string1.upper()</span><br><span class="line">        d_string2 = d_string2.upper()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"first decode method result is:\n"</span>+d_string1)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"second decode method result is:\n"</span>+d_string2)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"\t*******Bacon Encode_Decode System*******"</span>)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"input should be only lowercase or uppercase,cipher just include a,b(or A,B)"</span>)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"1.encode\n2.decode\n3.exit"</span>)</span><br><span class="line">        s_number = input(<span class="string">"please input number to choose\n"</span>)</span><br><span class="line">        <span class="keyword">if</span> s_number == <span class="string">"1"</span>:</span><br><span class="line">            encode()</span><br><span class="line">            input()</span><br><span class="line">        <span class="keyword">elif</span> s_number == <span class="string">"2"</span>:</span><br><span class="line">            decode()</span><br><span class="line">            input()</span><br><span class="line">        <span class="keyword">elif</span> s_number == <span class="string">"3"</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>decode .py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Baconian</span><span class="params">()</span>:</span></span><br><span class="line">    alphabet = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>,</span><br><span class="line">                <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>]</span><br><span class="line"></span><br><span class="line">    first_cipher = [<span class="string">"aaaaa"</span>, <span class="string">"aaaab"</span>, <span class="string">"aaaba"</span>, <span class="string">"aaabb"</span>, <span class="string">"aabaa"</span>, <span class="string">"aabab"</span>, <span class="string">"aabba"</span>, <span class="string">"aabbb"</span>, <span class="string">"abaaa"</span>, <span class="string">"abaab"</span>, <span class="string">"ababa"</span>,</span><br><span class="line">                    <span class="string">"ababb"</span>, <span class="string">"abbaa"</span>, <span class="string">"abbab"</span>, <span class="string">"abbba"</span>, <span class="string">"abbbb"</span>, <span class="string">"baaaa"</span>, <span class="string">"baaab"</span>, <span class="string">"baaba"</span>, <span class="string">"baabb"</span>, <span class="string">"babaa"</span>, <span class="string">"babab"</span>,</span><br><span class="line">                    <span class="string">"babba"</span>, <span class="string">"babbb"</span>, <span class="string">"bbaaa"</span>, <span class="string">"bbaab"</span>]</span><br><span class="line"></span><br><span class="line">    second_cipher = [<span class="string">"aaaaa"</span>, <span class="string">"aaaab"</span>, <span class="string">"aaaba"</span>, <span class="string">"aaabb"</span>, <span class="string">"aabaa"</span>, <span class="string">"aabab"</span>, <span class="string">"aabba"</span>, <span class="string">"aabbb"</span>, <span class="string">"abaaa"</span>, <span class="string">"abaaa"</span>, <span class="string">"abaab"</span>,</span><br><span class="line">                     <span class="string">"ababa"</span>, <span class="string">"ababb"</span>, <span class="string">"abbaa"</span>, <span class="string">"abbab"</span>, <span class="string">"abbba"</span>, <span class="string">"abbbb"</span>, <span class="string">"baaaa"</span>, <span class="string">"baaab"</span>, <span class="string">"baaba"</span>, <span class="string">"baabb"</span>, <span class="string">"baabb"</span>,</span><br><span class="line">                     <span class="string">"babaa"</span>, <span class="string">"babab"</span>, <span class="string">"babba"</span>, <span class="string">"babbb"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, str)</span>:</span></span><br><span class="line">        self.str = str</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(self)</span>:</span></span><br><span class="line">        str = self.str.lower()</span><br><span class="line">        str_array = re.findall(<span class="string">".&#123;5&#125;"</span>, str)</span><br><span class="line">        decode_str1 = <span class="string">""</span></span><br><span class="line">        decode_str2 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> str_array:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">                <span class="keyword">if</span> key == Baconian.first_cipher[i]:</span><br><span class="line">                    decode_str1 += Baconian.alphabet[i]</span><br><span class="line">                <span class="keyword">if</span> key == Baconian.second_cipher[i]:</span><br><span class="line">                    decode_str2 += Baconian.alphabet[i]</span><br><span class="line"></span><br><span class="line">        print(decode_str1)</span><br><span class="line">        print(decode_str2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    str = input()</span><br><span class="line">    bacon = Baconian(str)</span><br><span class="line">    bacon.decode()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python ASCII 字符串 转换</title>
      <link href="/ie/posts/2ffb45fa.html"/>
      <url>/ie/posts/2ffb45fa.html</url>
      
        <content type="html"><![CDATA[<p>Python ASCII 字符串 转换</p><a id="more"></a><p>ASCII转字符.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ASCIItostr</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = input()</span><br><span class="line">        s=s.split()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            print(chr(int(i)),end=<span class="string">""</span>)</span><br><span class="line">        print()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            ASCIItostr()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><p>字符转ASCII.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strtoASCII</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = input()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            print(ord(str(i)),end=<span class="string">" "</span>)</span><br><span class="line">        print()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            strtoASCII()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 加解密 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
