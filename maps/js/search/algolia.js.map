{"version":3,"sources":["js/search/algolia.js"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","SearchService","search","algolia","timerId","fn","queryText","template","init","div","document","createElement","innerHTML","body","append","volantis","GLOBAL_CONFIG","appId","apiKey","indexName","event","setAlgolia","querySelector","style","textAlign","maxHeight","addEventListener","close","querySelectorAll","forEach","e","onSubmit","target","_volantis$dark","instantsearch","searchClient","algoliasearch","searchFunction","helper","state","query","configure","widgets","hitsPerPage","searchBox","container","autofocus","showReset","showSubmit","showLoadingIndicator","searchAsYouType","placeholder","templates","queryHook","refine","clearTimeout","setTimeout","hits","item","data","keyword","concat","link","permalink","root","path","result","_highlightResult","content","contentStripTruncate","cutContent","contentStrip","title","empty","languages","hits_empty","replace","stats","text","hits_stats","nbHits","processingTimeMS","powerBy","poweredBy","theme","dark","mode","pagination","totalPages","first","last","previous","next","addWidgets","start","window","pjax","on","refresh","getElementById","setQueryText","_search","setUiState","display","code","once","preventDefault","firstOccur","indexOf","end","pre","post","length","substring","freeze"],"mappings":"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","file":"../../../js/search/algolia.js","sourcesContent":["let SearchService = (() => {\n  const fn = {};\n  let search, algolia, timerId; \n  fn.queryText = null;\n  fn.template = `<div id=\"u-search\">\n  <div class=\"modal\">\n    <header class=\"modal-header\" class=\"clearfix\">\n      <button type=\"submit\" id=\"u-search-modal-btn-submit\" class=\"u-search-btn-submit\">\n        <span class=\"fa-solid fa-search\"></span>\n      </button>\n      <div id=\"algolia-search-input\"></div>\n      <a id=\"u-search-btn-close\" class=\"btn-close\"> <span class=\"fa-solid fa-times\"></span> </a>\n    </header>\n    <main class=\"modal-body\">\n      <div id=\"algolia-search-results\">\n        <div id=\"algolia-hits\">\n          <div class=\"search-icon\"><i class=\"fa-sharp fa-solid fa-telescope\"></i></i></div>\n        </div>\n      </div>\n    </main>\n    <footer>\n      <div id=\"algolia-pagination\"></div>\n      <hr>\n      <div id=\"algolia-info\">\n        <div class=\"algolia-stats\"></div>\n        <div class=\"algolia-poweredBy\"></div>\n      </div>\n    </footer>\n  </div>\n  <div id=\"modal-overlay\" class=\"modal-overlay\"></div>\n  </div>\n  `;\n\n  fn.init = () => {\n    let div = document.createElement(\"div\");\n    div.innerHTML += fn.template;\n    document.body.append(div);\n\n    algolia = volantis.GLOBAL_CONFIG.search;\n    if (algolia.appId && algolia.apiKey && algolia.indexName) {\n      fn.event();\n      fn.setAlgolia();\n    } else {\n      document.querySelector('#u-search main.modal-body').innerHTML = 'Algolia setting is invalid!';\n      document.querySelector('#u-search main.modal-body').style.textAlign = 'center';\n      document.querySelector('#u-search .modal').style.maxHeight = '128px';\n    }\n  }\n\n  fn.event = () => {\n    document\n      .querySelector(\"#u-search-btn-close\")\n      .addEventListener(\"click\", fn.close, false);\n    document\n      .querySelector(\"#modal-overlay\")\n      .addEventListener(\"click\", fn.close, false);\n    document.querySelectorAll(\".u-search-form\").forEach((e) => {\n      e.addEventListener(\"submit\", fn.onSubmit, false);\n    });\n    document.querySelector(\"#algolia-search-input\").addEventListener(\"input\", event => {\n      let input = event.target.querySelector(\".ais-SearchBox-input\");\n      if (input) {\n        fn.queryText = input.value;\n      } else {\n        fn.queryText = event.target.value;\n      }\n    })\n  }\n\n  fn.setAlgolia = () => {\n    search = instantsearch({\n      indexName: algolia.indexName,\n      searchClient: algoliasearch(algolia.appId, algolia.apiKey),\n      searchFunction(helper) {\n        helper.state.query && helper.search()\n      },\n    })\n\n    const configure = instantsearch.widgets.configure({\n      hitsPerPage: algolia.hitsPerPage\n    })\n\n    const searchBox = instantsearch.widgets.searchBox({\n      container: '#algolia-search-input',\n      autofocus: true,\n      showReset: false,\n      showSubmit: false,\n      showLoadingIndicator: false,\n      searchAsYouType: algolia.searchAsYouType,\n      placeholder: algolia.placeholder,\n      templates: {\n        input: 'algolia-input'\n      },\n      queryHook(query, refine) {\n        clearTimeout(timerId)\n        timerId = setTimeout(() => refine(query), 500)\n      }\n    })\n\n    const hits = instantsearch.widgets.hits({\n      container: '#algolia-hits',\n      templates: {\n        item(data) {\n          const keyword = !!fn.queryText ? `?keyword=${fn.queryText}` : ''\n          const link = data.permalink ? data.permalink : `${volantis.GLOBAL_CONFIG.root}${data.path}`\n          const result = data._highlightResult\n          const content = result.contentStripTruncate\n            ? fn.cutContent(result.contentStripTruncate.value)\n            : result.contentStrip\n              ? fn.cutContent(result.contentStrip.value)\n              : result.content\n                ? fn.cutContent(result.content.value)\n                : ''\n          return `\n            <a href=\"${link}${keyword}\" class=\"result\">\n            <span class=\"title\">${result.title.value || 'no-title'}</span>\n            <span class=\"digest\">${content}</span>\n            </a>`\n        },\n        empty: function (data) {\n          return (\n            `<div id=\"resule-hits-empty\"><i class=\"fa-solid fa-box-open\"></i><p>${volantis.GLOBAL_CONFIG.languages.search.hits_empty.replace(/\\$\\{query}/, data.query)}</p></div>`\n          )\n        }\n      }\n    })\n\n    const stats = instantsearch.widgets.stats({\n      container: '#algolia-info > .algolia-stats',\n      templates: {\n        text: function (data) {\n          const stats = volantis.GLOBAL_CONFIG.languages.search.hits_stats\n            .replace(/\\$\\{hits}/, data.nbHits)\n            .replace(/\\$\\{time}/, data.processingTimeMS)\n          return (\n            `${stats}`\n          )\n        }\n      }\n    })\n\n    const powerBy = instantsearch.widgets.poweredBy({\n      container: '#algolia-info > .algolia-poweredBy',\n      theme: volantis.dark?.mode === 'dark' ? 'dark' : 'light'\n    })\n\n    const pagination = instantsearch.widgets.pagination({\n      container: '#algolia-pagination',\n      totalPages: 5,\n      templates: {\n        first: '<i class=\"fas fa-angle-double-left\"></i>',\n        last: '<i class=\"fas fa-angle-double-right\"></i>',\n        previous: '<i class=\"fas fa-angle-left\"></i>',\n        next: '<i class=\"fas fa-angle-right\"></i>'\n      }\n    })\n\n    search.addWidgets([configure, searchBox, hits, stats, powerBy, pagination])\n\n    search.start()\n\n    window.pjax && search.on('render', () => {\n      window.pjax.refresh(document.getElementById('algolia-hits'))\n    })\n  }\n\n  fn.setQueryText = queryText => {\n    fn.queryText = queryText;\n    if (!search) {\n      fn.init()\n    }\n    search?.setUiState({\n      [algolia.indexName]: {\n        query: queryText\n      }\n    })\n  }\n\n  fn.search = () => {\n    document.querySelector(\"#u-search\").style.display = \"block\";\n    document.addEventListener(\"keydown\", event => {\n      if (event.code === \"Escape\") {\n        fn.close();\n      }\n    }, { once: true })\n  }\n\n  fn.onSubmit = (event) => {\n    event.preventDefault();\n    let input = event.target.querySelector(\".u-search-input\");\n    fn.setQueryText(input?.value ? input.value : event.target.value)\n    fn.search();\n  };\n\n  fn.cutContent = content => {\n    if (content === '') return ''\n\n    const firstOccur = content.indexOf('<mark>')\n\n    let start = firstOccur - 30\n    let end = firstOccur + 120\n    let pre = ''\n    let post = ''\n\n    if (start <= 0) {\n      start = 0\n      end = 140\n    } else {\n      pre = '...'\n    }\n\n    if (end > content.length) {\n      end = content.length\n    } else {\n      post = '...'\n    }\n\n    let matchContent = pre + content.substring(start, end) + post\n    return matchContent\n  }\n\n  fn.close = () => {\n    document.querySelector(\"#u-search\").style.display = \"none\";\n  };\n\n  return {\n    init: fn.init,\n    setQueryText: queryText => {\n      fn.setQueryText(queryText);\n    },\n    search: fn.search,\n    close: fn.close\n  }\n})()\n\nObject.freeze(SearchService);\n\nSearchService.init();\ndocument.addEventListener(\"pjax:send\", SearchService.close);\n"]}