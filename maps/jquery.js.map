{"version":3,"sources":["jquery.js"],"names":["prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","location","hostname","handleFetch","async","event","url","request","test","NetworkOnly","CacheFirst","CacheAlways","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","mhuig","combine","npm","eleme","unpkg","cdn_match_list","type","key","push","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","arr","fi","length","first","other","concat","createlog","util","args","log","apply","creategroup","groupCollapsed","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","name","firstToUpperCase","strArr","createChalkBg","createChalkGroup","chalk","group","end","groupEnd","bg","Object","keys","forEach","toLowerCase","replace","L","toUpperCase","i","logger","generate_uuid","c","r","Math","random","toString","self","db","read","config","Promise","resolve","reject","caches","open","then","cache","match","Request","encodeURIComponent","res","text","catch","write","value","put","Response","compareVersion","a","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","setNewestVersion","fetchAny","json","version","stack","setInterval","setTimeout","installFunction","index","response","addEventListener","skipWaiting","waitUntil","all","map","includes","delete","clients","claim","respondWith","URL","pathname","fetch","resp","CacheRuntime","matchCache","matchCDN","method","protocol","clone","req","nav","navigator","saveData","effectiveType","connection","mozConnection","webkitConnection","urls","urlObj","pathType","RegExp","origin","endsWith","list","indexOf","item","arrayBuffer","buffer","headers","progress","status","createPromiseAny","any","promises","Array","isArray","errs","AggregateError","p","err","controller","AbortController","signal","PromiseAll","abort"],"mappings":"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","file":"../jquery.js","sourcesContent":["const prefix = 'MHuiG-Blog';\nconst cacheSuffixVersion = '00000003-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/blog\";\nlet NPMPackageVersion = \"1.0.1655432043257\";\nlet debug = false;\nlocation.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/api\\.mhuig\\.top/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/captcha/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/token/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/static\\.mhuig\\.top/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n    mhuig: 'https://static.mhuig.top/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    eleme: 'https://npm.elemecdn.com',\n    unpkg: 'https://unpkg.com',\n    mhuig: 'https://static.mhuig.top/npm',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nlogger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  v1 = a.split('.');\n  v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  return fetchAny(mirrors)\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = url.split('?')[0].split('#')[0]\n      if (url.endsWith('/')) {\n        url += 'index.html'\n      } else {\n        const list = url.split('/')\n        const last = list[list.length - 1]\n        if (last.indexOf('.') === -1) {\n          url += '.html'\n        }\n      }\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + urlObj.pathname.replace('/' + pathType, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = fetchAny(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": \"text/html;charset=utf-8\"\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(urls) {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const PromiseAll = urls.map((url) => {\n    return new Promise((resolve, reject) => {\n      fetch(url, { signal })\n        .then(progress)\n        .then((res) => {\n          const r = res.clone()\n          if (r.status !== 200) reject(null)\n          controller.abort()\n          resolve(r)\n        })\n        .catch(() => reject(null))\n    })\n  })\n\n  if (!Promise.any) createPromiseAny()\n\n  return Promise.any(PromiseAll)\n    .then((res) => res)\n    .catch(() => null)\n}\n\n"]}