{"version":3,"sources":["jquery.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","minLen","n","toString","slice","name","from","test","len","i","arr2","iter","_regeneratorRuntime","hasOwnProperty","a","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","return","throw","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","npm_package_name","npm_package_version","status_npm_mirror","status_npm_tarball","debug","location","hostname","tarball","concat","cors_anywhere","uuid","setUUID","id","handleFetch","_ref","_callee","event","request","url","_context","fetch","NetworkOnly","OnlyCacheAlways","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","mhuig","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","db","read","config","caches","open","cache","match","Request","encodeURIComponent","text","write","put","Response","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","first","other","createlog","util","fun","log","_len","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","warn","ready","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","Math","random","compareVersion","b","v1","split","v2","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","FetchEngine","json","_ref6","_callee3","localVersion","_context3","version","dist","getNpmTarball","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee15","_context15","_ref17","_callee14","_context14","t1","RegExp","origin","_x10","_x9","_ref18","_callee16","_context16","_x11","matchCache","_ref19","_callee17","_context17","_x12","_x13","_CacheRuntime","_callee25","MatchCDN","_args25","_context25","matchCDN","protocol","clone","_ref20","_callee18","req","nav","_ref21","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context18","navigator","connection","mozConnection","webkitConnection","t2","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x14","endsWith","list","indexOf","progress","_x15","_progress","_callee26","_context26","status","createPromiseAny","any","promises","errs","AggregateError","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref22","_callee19","tagged","_context19","dispatchEvent","_x16","putNpmSource","_ref23","_callee20","_context20","_x17","_x18","importScripts","_ref24","_callee24","tgz","source","_context24","_ref25","_callee22","_context22","FetchUntgz","_ref26","_callee21","fs","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context21","_x20","_x19","_ref27","_callee23","_context23","_x21"],"mappings":"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","file":"../jquery.js","sourcesContent":["const prefix = 'MHuiG-Blog';\nconst cacheSuffixVersion = '00000019-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nconst npm_package_name = \"@mhg/blog\";\nlet npm_package_version = \"1.0.1732783533065\";\nlet status_npm_mirror = true;\nlet status_npm_tarball = true;\nlet debug = false;\nlocation.hostname == 'localhost' && (debug = true) && (status_npm_mirror = false);\nlet tarball = `https://registry.npmjs.org/@mhg/blog/-/blog-${npm_package_version}.tgz`;\nconst cors_anywhere = \"https://cors.mhuig.top?url=\"\nlet uuid = null\n\nconst setUUID = (id) => {\n  if (!uuid) {\n    uuid = id\n  }\n  return uuid\n}\n\nconst handleFetch = async (event) => {\n  const request = event.request;\n  const url = event.request.url;\n  if (request.method !== \"GET\") {\n    return fetch(request);\n  }\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/cdn-cgi/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/vues/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/api\\.mhuig\\.top/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/captcha/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/token/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/music-Archive/.test(url)) {\n    return OnlyCacheAlways(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdn\\.bootcdn\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/lib\\.baomitu\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/static\\.mhuig\\.top/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3|pdf)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n    mhuig: 'https://static.mhuig.top/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n    mhuig: 'https://static.mhuig.top/npm',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n    mhuig: 'https://static.mhuig.top/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${npm_package_name}/latest`,\n  `https://registry.npmmirror.com/${npm_package_name}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${npm_package_name}/latest`\n]\nconst getLocalVersion = async () => {\n  npm_package_version = await db.read('npm_package_version') || npm_package_version\n  logger.bg.info(`Local Version: ${npm_package_name}@${npm_package_version}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!status_npm_mirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      const localVersion = await db.read('npm_package_version') || npm_package_version\n      npm_package_version = compareVersion(res.version, localVersion)\n      logger.bg.ready(`${npm_package_name}@${npm_package_version}`)\n      if (localVersion !== npm_package_version) {\n        await db.write('status_npm_mirror', \"true\")\n        await db.write('status_npm_tarball', \"false\")\n        tarball = res.dist.tarball\n        await db.write('tarball', tarball)\n        logger.bg.ready(\"[CacheAlways] NPM Mirror Enabled!\")\n        caches.delete(CACHE_NAME + \"-npmtarball\");\n        logger.ready(\"deleted cache npmtarball\")\n      }\n      await getNpmTarball();\n      await db.write('npm_package_version', npm_package_version)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', setUUID(generate_uuid()))\n      }\n      if (!await db.read('status_npm_mirror')) {\n        await db.write('status_npm_mirror', status_npm_mirror)\n      }\n      if (!await db.read('status_npm_tarball')) {\n        await db.write('status_npm_tarball', \"false\")\n      }\n      if (await db.read('tarball')) {\n        tarball = await db.read('tarball')\n      }\n      await db.write('status_downloading_npm_tarball', \"false\")\n      await db.write('status_worker_channel', \"false\")\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion) && prefix !== key) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst OnlyCacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('OnlyCacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request, false)\n    }\n  })\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(async (resp) => {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      if ((await db.read('status_npm_mirror') === \"false\") && new RegExp(location.origin).test(event.request.url)) {\n        logger.ready(\"[CacheAlways] NPM Tarball Source Enabled! NPM Mirror Disabled!\")\n      } else {\n        event.waitUntil(CacheRuntime(event.request))\n      }\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request, MatchCDN = true) {\n  const url = new URL(request.url);\n  let response = null;\n  if (MatchCDN) {\n    response = await matchCDN(request);\n  }\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (status_npm_mirror && (await db.read('status_npm_mirror') === \"true\") && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + npm_package_name + \"@\" + npm_package_version + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && status_npm_mirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpeg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\nconst putNpmSource = async (cache, f) => {\n  const name = f.name.replace(/^package/, location.origin)\n  const ext = name.split('.').pop()\n  const url = name.replace(/index.html$/, \"\").replace(/.html$/, \"\")\n  const contentType = getContentType(ext)\n  cache.put(new Request(url), new Response(f.buffer, {\n    headers: {\n      \"Content-Type\": contentType\n    }\n  }));\n}\nimportScripts(\"/untgz.js\");\nconst getNpmTarball = async () => {\n  if (!status_npm_tarball) {\n    return\n  }\n  if (await db.read('status_npm_tarball') === \"true\") {\n    return\n  }\n  if (!tarball) {\n    return\n  }\n  if (await db.read('status_downloading_npm_tarball') === \"true\") {\n    return\n  }\n  await db.write('status_downloading_npm_tarball', \"true\")\n  logger.wait(\"Downloading NPM Source: \" + tarball);\n  const tgz = tarball.replace(\"https://registry.npmmirror.com/\", \"https://registry.npmjs.org/\")\n  const source = cors_anywhere + tgz\n  caches.open(CACHE_NAME + \"-npmtarball\").then(async (cache) => {\n    await FetchUntgz(source).then(async (fs) => {\n      for await (const f of fs) {\n        console.log(f);\n        await putNpmSource(cache, f)\n      }\n      await db.write('status_npm_mirror', \"false\")\n      await db.write('status_npm_tarball', \"true\")\n      await db.write('status_downloading_npm_tarball', \"false\")\n      logger.bg.ready(\"[CacheAlways] NPM Mirror Disabled!\")\n    })\n  }).catch(async (error) => {\n    await db.write('status_downloading_npm_tarball', \"false\")\n    logger.error('[Cache Npm Tarball Source] ' + (error.stack || error));\n  })\n}\n\n\n"]}