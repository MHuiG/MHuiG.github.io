{"version":3,"sources":["jquery.js"],"names":["importScripts","workbox","setConfig","modulePathPrefix","core","precaching","routing","strategies","expiration","cacheableResponse","backgroundSync","CacheFirst","NetworkFirst","NetworkOnly","StaleWhileRevalidate","ExpirationPlugin","CacheableResponsePlugin","cacheSuffixVersion","maxEntries","self","addEventListener","event","waitUntil","caches","keys","then","Promise","all","map","key","includes","delete","setCacheNameDetails","prefix","suffix","skipWaiting","clientsClaim","cleanupOutdatedCaches","precacheAndRoute","url","revision","registerRoute","cacheName","fetchOptions","mode","credentials","plugins","maxAgeSeconds","purgeOnQuotaError","setDefaultHandler","networkTimeoutSeconds"],"mappings":"AAAAA,cAAc,wEAEdC,QAAQC,UAAU,CACdC,iBAAkB,4DAGtB,MAAMC,KAAEA,KAAIC,WAAEA,WAAUC,QAAEA,QAAOC,WAAEA,WAAUC,WAAEA,WAAUC,kBAAEA,kBAAiBC,eAAEA,gBAAmBT,SAC3FU,WAAEA,WAAUC,aAAEA,aAAYC,YAAEA,YAAWC,qBAAEA,sBAAyBP,YAClEQ,iBAAEA,kBAAqBP,YACvBQ,wBAAEA,yBAA4BP,kBAE9BQ,mBAAqB,yBAGvBC,WAAa,IAEjBC,KAAKC,iBAAiB,YAAaC,IAC/BA,EAAMC,UACFC,OAAOC,OAAOC,MAAMD,GACTE,QAAQC,IAAIH,EAAKI,KAAKC,IACzB,IAAKA,EAAIC,SAASb,oBAAqB,OAAOM,OAAOQ,OAAOF,aAO5EzB,KAAK4B,oBAAoB,CACrBC,OAAQ,aACRC,OAAQjB,qBAGZb,KAAK+B,cACL/B,KAAKgC,eACL/B,WAAWgC,wBAMXhC,WAAWiC,iBACP,CACI,CAAEC,IAAK,iBAAkBC,SAAU,MACnC,CAAED,IAAK,aAAcC,SAAU,MAC/B,CAAED,IAAK,qBAAsBC,SAAU,QAS/ClC,QAAQmC,cACJ,cACA,IAAI5B,aAYRP,QAAQmC,cACJ,uBACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAOnC1C,QAAQmC,cACJ,2BACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAOnC1C,QAAQmC,cACN,uBACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAOjC1C,QAAQmC,cACN,uBACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAQjC1C,QAAQmC,cACJ,wBACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAOnC1C,QAAQmC,cACJ,6BACA,IAAI9B,WAAW,CACX+B,UAAW,mBAAqBzB,mBAChC0B,aAAc,CACVC,KAAM,OACNC,YAAa,QAEjBC,QAAS,CACL,IAAI/B,iBAAiB,CACjBgC,cAAe,OACfC,mBAAmB,QAUnC1C,QAAQmC,cACJ,sBACA,IAAI5B,aAERP,QAAQmC,cACJ,cACA,IAAI5B,aAERP,QAAQmC,cACJ,YACA,IAAI5B,aAORP,QAAQmC,cAEJ,+DACA,IAAI3B,sBAORR,QAAQmC,cAEJ,eAEA,IAAI3B,sBAORR,QAAQmC,cACJ,aACA,IAAI3B,sBAORR,QAAQ2C,kBACJ,IAAIrC,aAAa,CACbsC,sBAAuB","file":"../jquery.js","sourcesContent":["importScripts('https://static.mhuig.top/npm/workbox-cdn@5.1.4/workbox/workbox-sw.js');\n\nworkbox.setConfig({\n    modulePathPrefix: 'https://static.mhuig.top/npm/workbox-cdn@5.1.4/workbox/'\n});\n\nconst { core, precaching, routing, strategies, expiration, cacheableResponse, backgroundSync } = workbox;\nconst { CacheFirst, NetworkFirst, NetworkOnly, StaleWhileRevalidate } = strategies;\nconst { ExpirationPlugin } = expiration;\nconst { CacheableResponsePlugin } = cacheableResponse;\n\nconst cacheSuffixVersion = '::cacheSuffixVersion::',\n    // precacheCacheName = core.cacheNames.precache,\n    // runtimeCacheName = core.cacheNames.runtime,\n    maxEntries = 100;\n\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        caches.keys().then((keys) => {\n            return Promise.all(keys.map((key) => {\n                if (!key.includes(cacheSuffixVersion)) return caches.delete(key);\n            }));\n        })\n    );\n});\n\n\ncore.setCacheNameDetails({\n    prefix: 'mhuig-blog',\n    suffix: cacheSuffixVersion\n});\n\ncore.skipWaiting();\ncore.clientsClaim();\nprecaching.cleanupOutdatedCaches();\n\n/*\n * Precache\n * - Static Assets\n */\nprecaching.precacheAndRoute(\n    [\n        { url: '/css/style.css', revision: null },\n        { url: '/js/app.js', revision: null },\n        { url: '/js/search/hexo.js', revision: null },\n    ],\n);\n\n/*\n *  No Cache\n *\n * Method: networkOnly\n */\nrouting.registerRoute(\n    /.*nocache.*/,\n    new NetworkOnly()\n);\n\n/*\n * Cache File From CDN\n *\n * Method: CacheFirst\n * cacheName: static-immutable\n * cacheTime: 30d\n */\n\n// cdn.jsdelivr.net - cors enabled\nrouting.registerRoute(\n    /.*cdn\\.jsdelivr\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// cdnjs.cloudflare.com - cors enabled\nrouting.registerRoute(\n    /.*cdnjs\\.cloudflare\\.com/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// npm.elemecdn.com - cors enabled\nrouting.registerRoute(\n  /.*npm\\.elemecdn\\.com/,\n  new CacheFirst({\n      cacheName: 'static-immutable' + cacheSuffixVersion,\n      fetchOptions: {\n          mode: 'cors',\n          credentials: 'omit'\n      },\n      plugins: [\n          new ExpirationPlugin({\n              maxAgeSeconds: 30 * 24 * 60 * 60,\n              purgeOnQuotaError: true\n          })\n      ]\n  })\n);\n\n// static.mhuig.top - cors enabled\nrouting.registerRoute(\n  /.*static\\.mhuig\\.top/,\n  new CacheFirst({\n      cacheName: 'static-immutable' + cacheSuffixVersion,\n      fetchOptions: {\n          mode: 'cors',\n          credentials: 'omit'\n      },\n      plugins: [\n          new ExpirationPlugin({\n              maxAgeSeconds: 30 * 24 * 60 * 60,\n              purgeOnQuotaError: true\n          })\n      ]\n  })\n);\n\n\n// m7.music.126.net - cors enabled\nrouting.registerRoute(\n    /.*m7\\.music\\.126\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// stream.qqmusic.qq.com - cors enabled\nrouting.registerRoute(\n    /.*stream\\.qqmusic\\.qq\\.com/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n/*\n *  No Cache\n *\n * Method: networkOnly\n */\nrouting.registerRoute(\n    /.*api\\.mhuig\\.top.*/,\n    new NetworkOnly()\n);\nrouting.registerRoute(\n    /.*captcha.*/,\n    new NetworkOnly()\n);\nrouting.registerRoute(\n    /.*token.*/,\n    new NetworkOnly()\n);\n\n/*\n * Others img fonts\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache image fonts files\n    /.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)/,\n    new StaleWhileRevalidate()\n);\n\n/*\n * Static Assets\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache CSS files\n    /.*\\.(css|js)/,\n    // Use cache but update in the background ASAP\n    new StaleWhileRevalidate()\n);\n\n/*\n * sw.js - Revalidate every time\n * staleWhileRevalidate\n */\nrouting.registerRoute(\n    '/jquery.js',\n    new StaleWhileRevalidate()\n);\n\n/*\n * Default - Serve as it is\n * networkFirst\n */\nrouting.setDefaultHandler(\n    new NetworkFirst({\n        networkTimeoutSeconds: 3\n    })\n);\n"]}