{"version":3,"sources":["jquery.js"],"names":["prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","npm_package_name","npm_package_version","status_npm_mirror","status_npm_tarball","debug","tarball","location","hostname","cors_anywhere","broadcast","BroadcastChannel","broadcastPostMessage","data","setTimeout","postMessage","onmessage","async","event","type","zuid","console","log","db","write","handleFetch","url","request","test","NetworkOnly","CacheFirst","CacheAlways","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","mhuig","combine","npm","eleme","unpkg","cdn_match_list","key","push","_console","color","black","red","green","yellow","blue","magenta","cyan","white","add","arr","fi","length","first","other","concat","createlog","util","args","apply","creategroup","groupCollapsed","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","name","firstToUpperCase","strArr","createChalkBg","createChalkGroup","chalk","group","end","groupEnd","bg","Object","keys","forEach","toLowerCase","replace","L","toUpperCase","i","logger","generate_uuid","c","r","Math","random","toString","self","read","config","Promise","resolve","reject","caches","open","then","cache","match","Request","encodeURIComponent","res","text","catch","value","put","Response","compareVersion","a","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","mirror_time","setNewestVersion","f","fetch","fetchAny","json","version","dist","localVersion","delete","getNpmSource","stack","setInterval","installFunction","index","response","addEventListener","skipWaiting","waitUntil","all","map","includes","clients","claim","respondWith","URL","pathname","resp","RegExp","origin","CacheRuntime","matchCache","matchCDN","method","protocol","clone","req","nav","navigator","saveData","effectiveType","connection","mozConnection","webkitConnection","urls","urlObj","pathType","fullPath","item","ext","pop","contentType","getContentType","arrayBuffer","buffer","headers","endsWith","list","indexOf","progress","status","createPromiseAny","any","promises","Array","isArray","errs","AggregateError","p","err","controller","AbortController","signal","PromiseAll","abort","putNpmSource","importScripts","tgz","source","FetchUntgz","fs"],"mappings":"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","file":"../jquery.js","sourcesContent":["const prefix = 'MHuiG-Blog';\nconst cacheSuffixVersion = '00000007-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nconst npm_package_name = \"@mhg/blog\";\nlet npm_package_version = \"1.0.1655692678475\";\nlet status_npm_mirror = true;\nlet status_npm_tarball = true;\nlet debug = false;\nlet tarball = null;\nlocation.hostname == 'localhost' && (debug = true) && (status_npm_mirror = false);\nconst cors_anywhere = \"https://cors.mhuig.top?url=\"\n\nconst broadcast = new BroadcastChannel('Worker Channel');\nbroadcast.onmessage = async (event) => {\n  if (event.data.type === 'ZUID') {\n    const zuid = event.data.zuid;\n    if (!zuid) {\n      broadcastPostMessage({ type: \"ZUID\" })\n    } else {\n      console.log(`zuid: [${zuid}]`);\n      await db.write('zuid', zuid)\n    }\n  }\n};\nfunction broadcastPostMessage(data) {\n  setTimeout(() => {\n    broadcast.postMessage(data)\n  }, 1000);\n}\nbroadcastPostMessage({ type: \"ZUID\" })\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/api\\.mhuig\\.top/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/captcha/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/token/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/static\\.mhuig\\.top/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n    mhuig: 'https://static.mhuig.top/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    eleme: 'https://npm.elemecdn.com',\n    unpkg: 'https://unpkg.com',\n    mhuig: 'https://static.mhuig.top/npm',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nlogger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  v1 = a.split('.');\n  v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${npm_package_name}/latest`,\n  `https://registry.npmmirror.com/${npm_package_name}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${npm_package_name}/latest`\n]\nconst getLocalVersion = async () => {\n  npm_package_version = await db.read('npm_package_version') || npm_package_version\n  logger.bg.info(`Local Version: ${npm_package_name}@${npm_package_version}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!status_npm_mirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = fetchAny(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      tarball = res.dist.tarball\n      await db.write('tarball', tarball)\n      const localVersion = await db.read('npm_package_version') || npm_package_version\n      npm_package_version = compareVersion(res.version, localVersion)\n      logger.bg.ready(`${npm_package_name}@${npm_package_version}`)\n      if (localVersion !== npm_package_version) {\n        if (status_npm_mirror) {\n          await db.write('status_npm_mirror', \"true\")\n          await db.write('status_npm_tarball', \"false\")\n          logger.bg.ready(\"[CacheAlways] NPM Mirror Enabled!\")\n          caches.delete(CACHE_NAME + \"-npmtarball\");\n          logger.ready(\"deleted cache npmtarball\")\n        }\n      }\n      await getNpmSource();\n      await db.write('npm_package_version', npm_package_version)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (!await db.read('status_npm_mirror')) {\n        await db.write('status_npm_mirror', status_npm_mirror)\n      }\n      if (!await db.read('status_npm_tarball')) {\n        await db.write('status_npm_tarball', \"false\")\n      }\n      tarball = await db.read('tarball')\n      await db.write('status_downloading_npm_tarball', \"false\")\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(async (resp) => {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      if ((await db.read('status_npm_mirror') === \"false\") && new RegExp(location.origin).test(event.request.url)) {\n        logger.ready(\"[CacheAlways] NPM Tarball Source Enabled! NPM Mirror Disabled!\")\n      } else {\n        event.waitUntil(CacheRuntime(event.request))\n      }\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n\n  if (status_npm_mirror && (await db.read('status_npm_mirror') === \"true\") && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + npm_package_name + \"@\" + npm_package_version + req.url.replace(location.origin, '')\n      url = fullPath(url)\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + urlObj.pathname.replace('/' + pathType, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = fetchAny(urls)\n  else\n    res = fetch(req)\n  if (res && status_npm_mirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(req.url).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(urls) {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const PromiseAll = urls.map((url) => {\n    return new Promise((resolve, reject) => {\n      fetch(url, { signal })\n        .then(progress)\n        .then((res) => {\n          const r = res.clone()\n          if (r.status !== 200) reject(null)\n          controller.abort()\n          resolve(r)\n        })\n        .catch(() => reject(null))\n    })\n  })\n\n  if (!Promise.any) createPromiseAny()\n\n  return Promise.any(PromiseAll)\n    .then((res) => res)\n    .catch(() => null)\n}\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpeg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\nconst putNpmSource = async (cache, f) => {\n  const name = f.name.replace(/^package/, location.origin)\n  const ext = name.split('.').pop()\n  const url = name.replace(/index.html$/, \"\").replace(/.html$/, \"\")\n  const contentType = getContentType(ext)\n  cache.put(new Request(url), new Response(f.buffer, {\n    headers: {\n      \"Content-Type\": contentType\n    }\n  }));\n}\nimportScripts(\"/untgz.js\");\nconst getNpmSource = async () => {\n  if (!status_npm_tarball) {\n    return\n  }\n  if (await db.read('status_npm_tarball') === \"true\") {\n    return\n  }\n  if (!tarball) {\n    return\n  }\n  if (await db.read('status_downloading_npm_tarball') === \"true\") {\n    return\n  }\n  await db.write('status_downloading_npm_tarball', \"true\")\n  logger.wait(\"Downloading NPM Source: \" + tarball);\n  const tgz = tarball.replace(\"https://registry.npmmirror.com/\", \"https://registry.npmjs.org/\")\n  const source = cors_anywhere + tgz\n  caches.open(CACHE_NAME + \"-npmtarball\").then(async (cache) => {\n    await FetchUntgz(source).then(async (fs) => {\n      for await (const f of fs) {\n        console.log(f);\n        await putNpmSource(cache, f)\n      }\n      await db.write('status_npm_mirror', \"false\")\n      await db.write('status_npm_tarball', \"true\")\n      await db.write('status_downloading_npm_tarball', \"false\")\n      logger.bg.ready(\"[CacheAlways] NPM Mirror Disabled!\")\n    })\n  }).catch(async (error) => {\n    await db.write('status_downloading_npm_tarball', \"false\")\n    logger.error('[Cache Npm Tarball Source] ' + (error.stack || error));\n  })\n}\n\n\n"]}