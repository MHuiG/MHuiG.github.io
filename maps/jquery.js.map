{"version":3,"sources":["jquery.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","a","toString","slice","name","from","test","n","_regenerator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","d","bind","l","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","this","setPrototypeOf","__proto__","displayName","w","m","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_asyncIterator","asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","reject","s","next","return","throw","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","npm_package_name","npm_package_version","status_npm_mirror","status_npm_tarball","debug","location","hostname","tarball","concat","cors_anywhere","uuid","setUUID","id","handleFetch","_ref","_callee","event","request","url","_context","method","fetch","NetworkOnly","OnlyCacheAlways","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","mhuig","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","sustech","cdn_match_list","type","key","self","db","read","config","caches","open","cache","match","Request","encodeURIComponent","res","text","write","put","Response","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","undefined","first","other","createlog","util","fun","log","_len","args","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","Math","random","compareVersion","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_t","_context2","mirror_time","setNewestVersion","_ref5","_callee4","_context4","FetchEngine","json","_ref6","_callee3","localVersion","_t2","_context3","version","dist","getNpmTarball","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref0","_callee7","index","_context7","response","_x3","addEventListener","_ref1","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref10","_callee0","_t3","_context0","all","map","includes","clients","claim","_x5","_ref11","_callee1","_context1","respondWith","_x6","_ref12","_callee10","_context10","URL","pathname","_x7","_ref13","_callee11","_context11","resp","CacheRuntime","_x8","_ref14","_callee13","_context13","_ref15","_callee12","_t4","_t5","_context12","RegExp","origin","_x0","_x9","_ref16","_callee14","_context14","_x1","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee23","MatchCDN","_args23","_context23","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_t6","_t7","_t8","_context16","navigator","connection","mozConnection","webkitConnection","fullPath","exec","pop","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee24","_t10","_t11","_t12","_context24","status","createPromiseAny","any","promises","errs","AggregateError","err","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14","putNpmSource","_ref21","_callee18","_context18","_x15","_x16","importScripts","_ref22","_callee22","tgz","source","_context22","_ref23","_callee20","_context20","FetchUntgz","_ref24","_callee19","fs","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_t9","_context19","_x18","_x17","_ref25","_callee21","_context21","_x19"],"mappings":"AAAA,aAEA,SAASA,QAAQC,EAAGC,GAAK,IAAIC,EAAIC,OAAOC,KAAKJ,GAAI,GAAIG,OAAOE,sBAAuB,CAAE,IAAIC,EAAIH,OAAOE,sBAAsBL,GAAIC,IAAMK,EAAIA,EAAEC,QAAO,SAAUN,GAAK,OAAOE,OAAOK,yBAAyBR,EAAGC,GAAGQ,UAAY,KAAKP,EAAEQ,KAAKC,MAAMT,EAAGI,EAAI,CAAE,OAAOJ,CAAG,CAC9P,SAASU,cAAcZ,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIY,UAAUC,OAAQb,IAAK,CAAE,IAAIC,EAAI,MAAQW,UAAUZ,GAAKY,UAAUZ,GAAK,CAAC,EAAGA,EAAI,EAAIF,QAAQI,OAAOD,IAAI,GAAIa,SAAQ,SAAUd,GAAKe,gBAAgBhB,EAAGC,EAAGC,EAAED,GAAK,IAAKE,OAAOc,0BAA4Bd,OAAOe,iBAAiBlB,EAAGG,OAAOc,0BAA0Bf,IAAMH,QAAQI,OAAOD,IAAIa,SAAQ,SAAUd,GAAKE,OAAOgB,eAAenB,EAAGC,EAAGE,OAAOK,yBAAyBN,EAAGD,GAAK,GAAI,CAAE,OAAOD,CAAG,CACtb,SAASgB,gBAAgBhB,EAAGC,EAAGC,GAAK,OAAQD,EAAImB,eAAenB,MAAOD,EAAIG,OAAOgB,eAAenB,EAAGC,EAAG,CAAEoB,MAAOnB,EAAGO,YAAY,EAAIa,cAAc,EAAIC,UAAU,IAAQvB,EAAEC,GAAKC,EAAGF,CAAG,CACnL,SAASoB,eAAelB,GAAK,IAAIsB,EAAIC,aAAavB,EAAG,UAAW,MAAO,UAAYwB,QAAQF,GAAKA,EAAIA,EAAI,EAAI,CAC5G,SAASC,aAAavB,EAAGD,GAAK,GAAI,UAAYyB,QAAQxB,KAAOA,EAAG,OAAOA,EAAG,IAAIF,EAAIE,EAAEyB,OAAOC,aAAc,QAAI,IAAW5B,EAAG,CAAE,IAAIwB,EAAIxB,EAAE6B,KAAK3B,EAAGD,GAAK,WAAY,GAAI,UAAYyB,QAAQF,GAAI,OAAOA,EAAG,MAAM,IAAIM,UAAU,+CAAiD,CAAE,OAAQ,WAAa7B,EAAI8B,OAASC,QAAQ9B,EAAI,CAC3T,SAAS+B,mBAAmBhC,GAAK,OAAOiC,mBAAmBjC,IAAMkC,iBAAiBlC,IAAMmC,4BAA4BnC,IAAMoC,oBAAsB,CAChJ,SAASA,qBAAuB,MAAM,IAAIP,UAAU,uIAAyI,CAC7L,SAASI,mBAAmBjC,GAAK,GAAIqC,MAAMC,QAAQtC,GAAI,OAAOuC,kBAAkBvC,EAAI,CACpF,SAASyB,QAAQpB,GAAgC,OAAOoB,QAAU,mBAAqBC,QAAU,iBAAmBA,OAAOc,SAAW,SAAUnC,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBqB,QAAUrB,EAAEoC,cAAgBf,QAAUrB,IAAMqB,OAAOgB,UAAY,gBAAkBrC,CAAG,EAAGoB,QAAQpB,EAAI,CAC7T,SAASsC,SAAS3C,GAAK,OAAO4C,gBAAgB5C,IAAMkC,iBAAiBlC,IAAMmC,4BAA4BnC,IAAM6C,kBAAoB,CACjI,SAASA,mBAAqB,MAAM,IAAIhB,UAAU,4IAA8I,CAChM,SAASM,4BAA4BnC,EAAG8C,GAAK,GAAI9C,EAAG,CAAE,GAAI,iBAAmBA,EAAG,OAAOuC,kBAAkBvC,EAAG8C,GAAI,IAAI7C,EAAI,CAAC,EAAE8C,SAASnB,KAAK5B,GAAGgD,MAAM,GAAI,GAAI,MAAO,WAAa/C,GAAKD,EAAEyC,cAAgBxC,EAAID,EAAEyC,YAAYQ,MAAO,QAAUhD,GAAK,QAAUA,EAAIoC,MAAMa,KAAKlD,GAAK,cAAgBC,GAAK,2CAA2CkD,KAAKlD,GAAKsC,kBAAkBvC,EAAG8C,QAAK,CAAQ,CAAE,CACzX,SAASP,kBAAkBvC,EAAG8C,IAAM,MAAQA,GAAKA,EAAI9C,EAAEa,UAAYiC,EAAI9C,EAAEa,QAAS,IAAK,IAAId,EAAI,EAAGqD,EAAIf,MAAMS,GAAI/C,EAAI+C,EAAG/C,IAAKqD,EAAErD,GAAKC,EAAED,GAAI,OAAOqD,CAAG,CACnJ,SAASlB,iBAAiBlC,GAAK,GAAI,oBAAsB0B,QAAU,MAAQ1B,EAAE0B,OAAOc,WAAa,MAAQxC,EAAE,cAAe,OAAOqC,MAAMa,KAAKlD,EAAI,CAChJ,SAAS4C,gBAAgB5C,GAAK,GAAIqC,MAAMC,QAAQtC,GAAI,OAAOA,CAAG,CAC9D,SAASqD,eAhBT,IAAAtD,EAAAE,EAAAD,EAAA,mBAAA0B,OAAAA,OAAA,CAAA,EAAA0B,EAAApD,EAAAwC,UAAA,aAAAnC,EAAAL,EAAAsD,aAAA,gBAAA,SAAA/B,EAAAvB,EAAAoD,EAAA/C,EAAAkB,GAAA,IAAAgC,EAAAH,GAAAA,EAAAV,qBAAAc,EAAAJ,EAAAI,EAAAC,EAAAvD,OAAAwD,OAAAH,EAAAb,WAAA,OAAAiB,oBAAAF,EAAA,UAAA,SAAAzD,EAAAoD,EAAA/C,GAAA,IAAAkB,EAAAgC,EAAAE,EAAAG,EAAA,EAAAC,EAAAxD,GAAA,GAAAyD,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAT,EAAA,EAAAY,EAAAjE,EAAA+C,EAAAmB,EAAAL,EAAAK,EAAAC,KAAAnE,EAAA,GAAAkE,EAAA,SAAAhE,EAAAD,GAAA,OAAAuB,EAAAtB,EAAAsD,EAAA,EAAAE,EAAA1D,EAAAgE,EAAAX,EAAApD,EAAA8C,CAAA,GAAA,SAAAmB,EAAAjE,EAAAoD,GAAA,IAAAG,EAAAvD,EAAAyD,EAAAL,EAAAnD,EAAA,GAAA6D,GAAAF,IAAAvD,GAAAJ,EAAA4D,EAAAhD,OAAAZ,IAAA,CAAA,IAAAI,EAAAkB,EAAAsC,EAAA5D,GAAAgE,EAAAF,EAAAF,EAAAM,EAAA5C,EAAA,GAAAvB,EAAA,GAAAK,EAAA8D,IAAAf,KAAAK,EAAAlC,GAAAgC,EAAAhC,EAAA,IAAA,GAAAgC,EAAA,EAAA,IAAAhC,EAAA,GAAAA,EAAA,GAAAxB,GAAAwB,EAAA,IAAA0C,KAAA5D,EAAAL,EAAA,GAAAiE,EAAA1C,EAAA,KAAAgC,EAAA,EAAAQ,EAAAC,EAAAZ,EAAAW,EAAAX,EAAA7B,EAAA,IAAA0C,EAAAE,IAAA9D,EAAAL,EAAA,GAAAuB,EAAA,GAAA6B,GAAAA,EAAAe,KAAA5C,EAAA,GAAAvB,EAAAuB,EAAA,GAAA6B,EAAAW,EAAAX,EAAAe,EAAAZ,EAAA,GAAA,CAAA,GAAAlD,GAAAL,EAAA,EAAA,OAAA8C,EAAA,MAAAgB,GAAA,EAAAV,CAAA,CAAA,OAAA,SAAA/C,EAAAwD,EAAAM,GAAA,GAAAP,EAAA,EAAA,MAAA/B,UAAA,gCAAA,IAAAiC,GAAA,IAAAD,GAAAI,EAAAJ,EAAAM,GAAAZ,EAAAM,EAAAJ,EAAAU,GAAAlE,EAAAsD,EAAA,EAAAxD,EAAA0D,KAAAK,GAAA,CAAAvC,IAAAgC,EAAAA,EAAA,GAAAA,EAAA,IAAAQ,EAAAX,GAAA,GAAAa,EAAAV,EAAAE,IAAAM,EAAAX,EAAAK,EAAAM,EAAAC,EAAAP,GAAA,IAAA,GAAAG,EAAA,EAAArC,EAAA,CAAA,GAAAgC,IAAAlD,EAAA,QAAAJ,EAAAsB,EAAAlB,GAAA,CAAA,KAAAJ,EAAAA,EAAA2B,KAAAL,EAAAkC,IAAA,MAAA5B,UAAA,oCAAA,IAAA5B,EAAAmE,KAAA,OAAAnE,EAAAwD,EAAAxD,EAAAmB,MAAAmC,EAAA,IAAAA,EAAA,EAAA,MAAA,IAAAA,IAAAtD,EAAAsB,EAAA,YAAAtB,EAAA2B,KAAAL,GAAAgC,EAAA,IAAAE,EAAA5B,UAAA,oCAAAxB,EAAA,YAAAkD,EAAA,GAAAhC,EAAAxB,CAAA,MAAA,IAAAE,GAAA6D,EAAAC,EAAAX,EAAA,GAAAK,EAAAzD,EAAA4B,KAAAwB,EAAAW,MAAAjB,EAAA,KAAA,CAAA,MAAA7C,GAAAsB,EAAAxB,EAAAwD,EAAA,EAAAE,EAAAxD,CAAA,CAAA,QAAA2D,EAAA,CAAA,CAAA,CAAA,MAAA,CAAAxC,MAAAnB,EAAAmE,KAAAN,EAAA,CAAA,CAAA,CAAA9D,EAAAK,EAAAkB,IAAA,GAAAkC,CAAA,CAAA,IAAAX,EAAA,CAAA,EAAA,SAAAU,IAAA,CAAA,SAAAa,IAAA,CAAA,SAAAC,IAAA,CAAArE,EAAAC,OAAAqE,eAAA,IAAAhB,EAAA,GAAAH,GAAAnD,EAAAA,EAAA,GAAAmD,QAAAO,oBAAA1D,EAAA,CAAA,EAAAmD,GAAA,WAAA,OAAAoB,IAAA,IAAAvE,GAAAwD,EAAAa,EAAA5B,UAAAc,EAAAd,UAAAxC,OAAAwD,OAAAH,GAAA,SAAAK,EAAA7D,GAAA,OAAAG,OAAAuE,eAAAvE,OAAAuE,eAAA1E,EAAAuE,IAAAvE,EAAA2E,UAAAJ,EAAAX,oBAAA5D,EAAAM,EAAA,sBAAAN,EAAA2C,UAAAxC,OAAAwD,OAAAD,GAAA1D,CAAA,CAAA,OAAAsE,EAAA3B,UAAA4B,EAAAX,oBAAAF,EAAA,cAAAa,GAAAX,oBAAAW,EAAA,cAAAD,GAAAA,EAAAM,YAAA,oBAAAhB,oBAAAW,EAAAjE,EAAA,qBAAAsD,oBAAAF,GAAAE,oBAAAF,EAAApD,EAAA,aAAAsD,oBAAAF,EAAAL,GAAA,WAAA,OAAAoB,IAAA,IAAAb,oBAAAF,EAAA,YAAA,WAAA,MAAA,oBAAA,KAAAJ,aAAA,WAAA,MAAA,CAAAuB,EAAArD,EAAAsD,EAAAjB,EAAA,IAAA,CAAA,SAAAD,oBAAA5D,EAAAC,EAAAoD,EAAAnD,GAAA,IAAAsB,EAAArB,OAAAgB,eAAA,IAAAK,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,CAAA,MAAAxB,GAAAwB,EAAA,CAAA,CAAAoC,oBAAA,SAAA5D,EAAAC,EAAAoD,EAAAnD,GAAA,SAAAI,EAAAL,EAAAoD,GAAAO,oBAAA5D,EAAAC,GAAA,SAAAD,GAAA,OAAAyE,KAAAM,QAAA9E,EAAAoD,EAAArD,EAAA,GAAA,CAAAC,EAAAuB,EAAAA,EAAAxB,EAAAC,EAAA,CAAAoB,MAAAgC,EAAA5C,YAAAP,EAAAoB,cAAApB,EAAAqB,UAAArB,IAAAF,EAAAC,GAAAoD,GAAA/C,EAAA,OAAA,GAAAA,EAAA,QAAA,GAAAA,EAAA,SAAA,GAAA,EAAAsD,oBAAA5D,EAAAC,EAAAoD,EAAAnD,EAAA,CAAA,SAAA8E,mBAAA3B,EAAAnD,EAAAF,EAAAC,EAAAK,EAAAyC,EAAAS,GAAA,IAAA,IAAAhC,EAAA6B,EAAAN,GAAAS,GAAAE,EAAAlC,EAAAH,KAAA,CAAA,MAAAgC,GAAA,YAAArD,EAAAqD,EAAA,CAAA7B,EAAA6C,KAAAnE,EAAAwD,GAAAuB,QAAAC,QAAAxB,GAAAyB,KAAAlF,EAAAK,EAAA,CAAA,SAAA8E,kBAAA/B,GAAA,OAAA,WAAA,IAAAnD,EAAAuE,KAAAzE,EAAAa,UAAA,OAAA,IAAAoE,SAAA,SAAAhF,EAAAK,GAAA,IAAAyC,EAAAM,EAAA1C,MAAAT,EAAAF,GAAA,SAAAqF,EAAAhC,GAAA2B,mBAAAjC,EAAA9C,EAAAK,EAAA+E,EAAAC,EAAA,OAAAjC,EAAA,CAAA,SAAAiC,EAAAjC,GAAA2B,mBAAAjC,EAAA9C,EAAAK,EAAA+E,EAAAC,EAAA,QAAAjC,EAAA,CAAAgC,OAAA,EAAA,GAAA,CAAA,CAAA,SAAAE,eAAAtF,GAAA,IAAAoD,EAAAnD,EAAAI,EAAAN,EAAA,EAAA,IAAA,oBAAA2B,SAAAzB,EAAAyB,OAAA6D,cAAAlF,EAAAqB,OAAAc,UAAAzC,KAAA,CAAA,GAAAE,GAAA,OAAAmD,EAAApD,EAAAC,IAAA,OAAAmD,EAAAxB,KAAA5B,GAAA,GAAAK,GAAA,OAAA+C,EAAApD,EAAAK,IAAA,OAAA,IAAAmF,sBAAApC,EAAAxB,KAAA5B,IAAAC,EAAA,kBAAAI,EAAA,YAAA,CAAA,MAAA,IAAAwB,UAAA,+BAAA,CAAA,SAAA2D,sBAAAxF,GAAA,SAAAyF,EAAAzF,GAAA,GAAAE,OAAAF,KAAAA,EAAA,OAAAgF,QAAAU,OAAA,IAAA7D,UAAA7B,EAAA,uBAAA,IAAAoD,EAAApD,EAAAoE,KAAA,OAAAY,QAAAC,QAAAjF,EAAAoB,OAAA8D,MAAA,SAAAlF,GAAA,MAAA,CAAAoB,MAAApB,EAAAoE,KAAAhB,EAAA,GAAA,CAAA,OAAAoC,sBAAA,SAAAxF,GAAAwE,KAAAmB,EAAA3F,EAAAwE,KAAApB,EAAApD,EAAA4F,IAAA,EAAAJ,sBAAA9C,UAAA,CAAAiD,EAAA,KAAAvC,EAAA,KAAAwC,KAAA,WAAA,OAAAH,EAAAjB,KAAApB,EAAA1C,MAAA8D,KAAAmB,EAAA/E,WAAA,EAAAiF,SAAA,SAAA7F,GAAA,IAAAoD,EAAAoB,KAAAmB,EAAA,UAAA,YAAA,IAAAvC,EAAA4B,QAAAC,QAAA,CAAA7D,MAAApB,EAAAoE,MAAA,IAAAqB,EAAArC,EAAA1C,MAAA8D,KAAAmB,EAAA/E,WAAA,EAAAkF,QAAA,SAAA9F,GAAA,IAAAoD,EAAAoB,KAAAmB,EAAA,UAAA,YAAA,IAAAvC,EAAA4B,QAAAU,OAAA1F,GAAAyF,EAAArC,EAAA1C,MAAA8D,KAAAmB,EAAA/E,WAAA,GAAA,IAAA4E,sBAAAxF,EAAA,CADA,IAAM+F,OAAS,aACTC,mBAAqB,kCACrBC,WAAaF,OAAS,KAAOC,mBAC7BE,YAAc,CAClB,iBACA,aACA,sBAEIC,iBAAmB,YACrBC,oBAAsB,oBACtBC,mBAAoB,EACpBC,oBAAqB,EACrBC,OAAQ,EACS,aAArBC,SAASC,WAA4BF,OAAQ,KAAUF,mBAAoB,GAC3E,IAAIK,QAAO,+CAAAC,OAAkDP,oBAAmB,QAC1EQ,cAAgB,8BAClBC,KAAO,KAELC,QAAU,SAACC,GAIf,OAHKF,OACHA,KAAOE,GAEFF,IACT,EAEMG,YAAW,WAAA,IAAAC,EAAA9B,kBAAA9B,eAAAwB,GAAG,SAAAqC,EAAOC,GAAK,IAAAC,EAAAC,EAAA,OAAAhE,eAAAuB,GAAA,SAAA0C,GAAA,cAAAA,EAAAlE,GAAA,KAAA,EAED,GADvBgE,EAAUD,EAAMC,QAChBC,EAAMF,EAAMC,QAAQC,IACH,QAAnBD,EAAQG,OAAgB,CAAAD,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACnB0E,MAAMJ,IAAQ,KAAA,EAAA,IAEnB,UAAUjE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACd2E,YAAYN,IAAM,KAAA,EAAA,IAChB,UAAUhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACrB2E,YAAYN,IAAM,KAAA,EAAA,IAChB,OAAOhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAClB2E,YAAYN,IAAM,KAAA,EAAA,IAChB,kBAAkBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC7B2E,YAAYN,IAAM,KAAA,EAAA,IAChB,UAAUhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACrB2E,YAAYN,IAAM,KAAA,EAAA,IAChB,QAAQhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACnB2E,YAAYN,IAAM,KAAA,EAAA,IAChB,gBAAgBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC3B4E,gBAAgBP,IAAM,KAAA,EAAA,IACpB,UAAUhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,EAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACrB6E,WAAWR,IAAM,KAAA,EAAA,IACf,oBAAoBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC/B8E,YAAYT,IAAM,KAAA,GAAA,IAChB,oBAAoBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC/B8E,YAAYT,IAAM,KAAA,GAAA,IAChB,yBAAyBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACpC8E,YAAYT,IAAM,KAAA,GAAA,IAChB,kBAAkBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC7B8E,YAAYT,IAAM,KAAA,GAAA,IAChB,mBAAmBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC9B8E,YAAYT,IAAM,KAAA,GAAA,IAChB,gBAAgBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC3B8E,YAAYT,IAAM,KAAA,GAAA,IAChB,qBAAqBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAChC8E,YAAYT,IAAM,KAAA,GAAA,IAChB,qBAAqBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAChC8E,YAAYT,IAAM,KAAA,GAAA,IAChB,aAAahE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EACxB8E,YAAYT,IAAM,KAAA,GAAA,IAChB,oEAAoEhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC/E8E,YAAYT,IAAM,KAAA,GAAA,IAChB,gBAAgBhE,KAAKkE,GAAI,CAAAC,EAAAlE,EAAA,GAAA,KAAA,CAAA,OAAAkE,EAAAxE,EAAA,EAC3B8E,YAAYT,IAAM,KAAA,GAAA,OAAAG,EAAAxE,EAAA,EAElB6E,WAAWR,IAAM,KAAA,GAAA,OAAAG,EAAAxE,EAAA,GAAA,GAAAoE,EAAA,KAE3B,OAAA,SA/CgBW,GAAA,OAAAZ,EAAAvG,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAgDXkH,IAAM,CACVC,GAAI,CACFC,SAAU,8BACVC,OAAQ,iCACRC,MAAO,gCACPC,UAAW,oCACXC,MAAO,gCACPC,MAAO,+BAETC,QAAS,CACPN,SAAU,mCACVC,OAAQ,sCACRC,MAAO,qCACPC,UAAW,yCACXC,MAAO,sCAETG,IAAK,CACHP,SAAU,+BACVC,OAAQ,kCACRC,MAAO,iCACPC,UAAW,qCACXC,MAAO,iCACPI,MAAO,oBACPC,MAAO,2BACPJ,MAAO,gCAETK,MAAO,CACLA,MAAO,yCACPC,QAAS,0BACTC,QAAS,oCACTC,QAAS,iDACTR,MAAO,uCAGLS,eAAiB,GACvB,IAAK,IAAMC,QAAQjB,IACjB,IAAK,IAAMkB,OAAOlB,IAAIiB,MACpBD,eAAerI,KAAK,CAAEsI,KAAYC,IAAKlB,IAAIiB,MAAMC,OAGrDC,KAAKC,GAAK,CACRC,KAAM,SAACH,EAAKI,GAEV,OADKA,IAAUA,EAAS,CAAEL,KAAM,SACzB,IAAI/D,SAAQ,SAACC,EAASS,GAC3B2D,OAAOC,KAAKvD,QAAQb,MAAK,SAAAqE,GACvBA,EAAMC,MAAM,IAAIC,QAAO,sBAAA9C,OAAuB+C,mBAAmBV,MAAS9D,MAAK,SAAUyE,GAClFA,GAAK1E,EAAQ,MAClB0E,EAAIC,OAAO1E,MAAK,SAAA0E,GAAI,OAAI3E,EAAQ2E,EAAK,GACvC,IAAE,UAAO,WACP3E,EAAQ,KACV,GACF,GACF,GACF,EACA4E,MAAO,SAACb,EAAK5H,GACX,OAAO,IAAI4D,SAAQ,SAACC,EAASS,GAC3B2D,OAAOC,KAAKvD,QAAQb,MAAK,SAAUqE,GACjCA,EAAMO,IAAI,IAAIL,QAAO,sBAAA9C,OAAuB+C,mBAAmBV,KAAS,IAAIe,SAAS3I,IACrF6D,GACF,IAAE,UAAO,WACPS,GACF,GACF,GACF,GAEF,IAAMsE,SAAWC,QACXC,MAAQ,CACZC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,WAEHC,IAAM,WAIV,IAHA,IAAIC,EAAK,CACP,IAEO5B,EAAM,EAAGA,EAAMpI,UAAIC,OAAQmI,IAAO,CACzC,IAAiC6B,EAAAlI,SAAHqG,EAAG,GAAApI,UAAAC,QAAHmI,EAAG8B,UAAAlK,UAAHoI,IAAvB+B,EAAKF,EAAA,GAAKG,EAAKzI,kBAAAsI,GAAA7H,MAAA,GACtB4H,EAAG,IAAMG,EACTH,EAAKA,EAAGjE,OAAOqE,EACjB,CACA,OAAOJ,CACT,EACMK,UAAY,SAACC,GAAI,OAAK,WAEkC,IAA5D,IAAMC,EAAc,SAARD,EAAkBlB,SAASkB,GAAQlB,SAASoB,IAAIC,EAAAzK,UAAAC,OAF9ByK,EAAI,IAAAjJ,MAAAgJ,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA3K,UAAA2K,GAGlCJ,EAAIzK,WAAM,EAAQ4K,EACpB,CAAC,EACKE,YAAc,SAACN,GAAI,OAAK,WACQ,IAApC,IAAMC,EAAMnB,SAASyB,eAAeC,EAAA9K,UAAAC,OADJyK,EAAI,IAAAjJ,MAAAqJ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJL,EAAIK,GAAA/K,UAAA+K,GAEpCR,EAAIzK,WAAM,EAAQ4K,EACpB,CAAC,EACKM,WAAa,CACjBC,KAAM,SAACC,GACL,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAA,GAAAnF,OAAUmF,EAAG,uBAEf,IAAK,IAAI9C,EAAM,EAAGA,EAAM8C,EAAIjL,OAAQmI,IAClC8C,EAAI9C,IAAI,sBAEV,OAAO8C,CACT,GAEIC,UAAY,CAChBX,IAAK,QACLY,KAAM,OACNC,MAAO,MACPC,KAAM,SACNC,MAAO,QACPC,KAAM,OACNjF,MAAO,WAEHkF,YAAc,SAACpJ,GAAI,OAAK,WAAY,IAAA,IAAAqJ,EAAA1L,UAAAC,OAARiL,EAAG,IAAAzJ,MAAAiK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHT,EAAGS,GAAA3L,UAAA2L,GACnC,GAAsB,WAAlB9K,QAAOqK,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU9I,IAAO6I,IAEvCb,UAAUhI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAIiB,WAAWC,KAAKD,WAAWG,UAAU9I,IAAM,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,QAAQuJ,IALrG,MAFEvB,UAAUhI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAGjK,WAAA,EAAA,CAACkL,WAAWC,KAAKD,WAAWG,UAAU9I,IAAM,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,SAAM0D,OAAKmF,KAQ5G,CAAC,EACKY,cAAgB,SAACzJ,GAAI,OAAK,WAAY,IAAA,IAAA0J,EAAA/L,UAAAC,OAARiL,EAAG,IAAAzJ,MAAAsK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHd,EAAGc,GAAAhM,UAAAgM,GACrC,GAAsB,WAAlBnL,QAAOqK,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU9I,IAAO6I,IAEvCb,UAAUhI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAIiB,WAAWC,KAAKD,WAAU,KAAAjF,OAAM8F,iBAAiBV,UAAU9I,MAAS,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,QAAQuJ,IAL9H,MAFEvB,UAAUhI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAGjK,WAAA,EAAA,CAACkL,WAAWC,KAAKD,WAAU,KAAAjF,OAAM8F,iBAAiBV,UAAU9I,MAAS,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,SAAM0D,OAAKmF,KAQrI,CAAC,EACKe,iBAAmB,SAAC5J,GAAI,OAAK,WAAY,IAAA,IAAA6J,EAAAlM,UAAAC,OAARiL,EAAG,IAAAzJ,MAAAyK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHjB,EAAGiB,GAAAnM,UAAAmM,GACxC,GAAsB,WAAlBtL,QAAOqK,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU9I,IAAO6I,IAEvCN,YAAYvI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAIiB,WAAWC,KAAKD,WAAWG,UAAU9I,IAAM,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,QAAQuJ,IALvG,MAFEhB,YAAYvI,GAAKvC,WAAA,EAAAsB,mBAAI2I,IAAGjK,WAAA,EAAA,CAACkL,WAAWC,KAAKD,WAAWG,UAAU9I,IAAM,IAAA0D,OAAK8F,iBAAiBxJ,GAAK,SAAM0D,OAAKmF,KAQ9G,CAAC,EACKkB,MAAQ,CACZC,MAAO,CACLC,IAAKlD,SAASmD,UAEhBC,GAAI,CAAC,GAEPlN,OAAOC,KAAK4L,WAAWjL,SAAQ,SAAAkI,GAC7BgE,MAAMhE,GAAOqD,YAAYrD,GACzBgE,MAAMC,MAAMjE,GAAO6D,iBAAiB7D,GACpCgE,MAAMI,GAAGpE,GAAO0D,cAAc1D,EAChC,IACA,IAAMyD,iBAAmB,SAACX,GAAG,OAAKA,EAAIuB,cAAcC,QAAQ,eAAe,SAACC,GAAC,OAAKA,EAAEC,aAAa,GAAC,EAClGtN,OAAOC,KAAK+J,OAAOpJ,SAAQ,SAAAkI,GACzB4C,WAAW5C,GAAO,SAAC8C,GACjB,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAnF,OAAMmF,GAAG,SAAAnF,OAAauD,MAAMlB,KAErC,IAAK,IAAIzH,EAAI,EAAGA,EAAIuK,EAAIjL,OAAQU,IAC9BuK,EAAIvK,IAAE,UAAAoF,OAAcuD,MAAMlB,IAE5B,OAAO8C,CACT,EACAF,WAAU,KAAAjF,OAAM8F,iBAAiBzD,KAAU,SAAC8C,GAC1C,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAnF,OAAMmF,GAAG,gDAAAnF,OAA4D,UAARqC,EAAkB,OAAS,OAAM,oCAAArC,OAAmCuD,MAAMlB,GAAI,MAEpJ,IAAK,IAAIzH,EAAI,EAAGA,EAAIuK,EAAIjL,OAAQU,IAC9BuK,EAAIvK,IAAE,wEAAAoF,OAA4EuD,MAAMlB,GAAI,KAE9F,OAAO8C,CACT,CACF,IACA7C,KAAKwE,OAAM9M,cAAAA,cAAA,CACTgK,KACGqC,OACApB,YAGArF,QACHkH,OAAS,CACPrC,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdjF,MAAO,WAAQ,EACf8F,MAAO,CACL7B,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdjF,MAAO,WAAQ,EACf+F,IAAK,WAAQ,GAEfE,GAAI,CACFhC,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdjF,MAAO,WAAQ,IAGnB8C,QAAQmB,IAAM,WAAQ,GAGxB,IAAMsC,cAAgB,WACpB,MAAO,uCAAuCJ,QAAQ,SAAS,SAAU/J,GACvE,IAAIvD,EAAoB,GAAhB2N,KAAKC,SAAgB,EAC7B,OADyC,KAALrK,EAAWvD,EAAS,EAAJA,EAAU,GACrD+C,SAAS,GACpB,GACF,EACM8K,eAAiB,SAAC/K,EAAGgL,GAIzB,IAHA,IAAIC,EAAKjL,EAAEkL,MAAM,KACbC,EAAKH,EAAEE,MAAM,KACXE,EAAMP,KAAKQ,IAAIJ,EAAGlN,OAAQoN,EAAGpN,QAC5BkN,EAAGlN,OAASqN,GACjBH,EAAGtN,KAAK,KAEV,KAAOwN,EAAGpN,OAASqN,GACjBD,EAAGxN,KAAK,KAEV,IAAK,IAAIc,EAAI,EAAGA,EAAI2M,EAAK3M,IAAK,CAC5B,IAAM6M,EAAOC,SAASN,EAAGxM,IACnB+M,EAAOD,SAASJ,EAAG1M,IACzB,GAAI6M,EAAOE,EACT,OAAOxL,EACF,GAAIsL,EAAOE,EAChB,OAAOR,CAEX,CACA,OAAOhL,CACT,EAEMyL,QAAU,CACd3H,cAAa,8BAAAD,OAA+BR,iBAAgB,mBAC5DS,cAAa,kCAAAD,OAAmCR,iBAAgB,mBAChES,cAAa,yCAAAD,OAA0CR,iBAAgB,oBAEnEqI,gBAAe,WAAA,IAAAC,EAAAtJ,kBAAA9B,eAAAwB,GAAG,SAAA6J,IAAA,IAAAC,EAAA,OAAAtL,eAAAuB,GAAA,SAAAgK,GAAA,cAAAA,EAAAxL,GAAA,KAAA,EAAA,OAAAwL,EAAAxL,EAAA,EACM8F,GAAGC,KAAK,uBAAsB,KAAA,EAAA,GAAAwF,EAAAC,EAAA5K,EAAA,CAAA4K,EAAAxL,EAAA,EAAA,KAAA,CAAAuL,EAAIvI,oBAAmB,KAAA,EAAjFA,oBAAmBuI,EACnBlB,OAAOL,GAAGhB,KAAI,kBAAAzF,OAAmBR,iBAAgB,KAAAQ,OAAIP,sBAAsB,KAAA,EAAA,OAAAwI,EAAA9L,EAAA,GAAA,GAAA4L,EAAA,KAC5E,OAAA,WAHoB,OAAAD,EAAA/N,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAIjBiO,YAAc,EACZC,iBAAgB,WAAA,IAAAC,EAAA5J,kBAAA9B,eAAAwB,GAAG,SAAAmK,IAAA,IAAApL,EAAA,OAAAP,eAAAuB,GAAA,SAAAqK,GAAA,cAAAA,EAAA7L,GAAA,KAAA,EAAA,KACnByL,YAAY,GAAC,CAAAI,EAAA7L,EAAA,EAAA,KAAA,CAAA,OAAA6L,EAAAnM,EAAA,GAAA,KAAA,EAAA,GAGZuD,kBAAiB,CAAA4I,EAAA7L,EAAA,EAAA,KAAA,CAAA,OAAA6L,EAAAnM,EAAA,GAAA,KAAA,EASR,OANVc,EAAI,KAINA,EAHIiL,aAAeN,QAAQ1N,OAAS,GAGhC2G,MAAM+G,QAASM,aAAeN,QAAQ1N,OAAS,GAAM,IAFrDqO,YAAYX,SAIlBM,cAAcI,EAAAnM,EAAA,EACPc,EACJsB,MAAK,SAAAyE,GAAG,OAAIA,EAAIwF,MAAM,IACtBjK,KAAI,WAAA,IAAAkK,EAAAjK,kBAAA9B,eAAAwB,GAAC,SAAAwK,EAAM1F,GAAG,IAAA2F,EAAAC,EAAA,OAAAlM,eAAAuB,GAAA,SAAA4K,GAAA,cAAAA,EAAApM,GAAA,KAAA,EAAA,GACRuG,EAAI8F,QAAO,CAAAD,EAAApM,EAAA,EAAA,KAAA,CAAA,KAAS,oBAAmB,KAAA,EAAA,OAAAoM,EAAApM,EAAA,EACjB8F,GAAGC,KAAK,uBAAsB,KAAA,EAAA,GAAAoG,EAAAC,EAAAxL,EAAA,CAAAwL,EAAApM,EAAA,EAAA,KAAA,CAAAmM,EAAInJ,oBAAmB,KAAA,EAEnB,GAFvDkJ,EAAYC,EAClBnJ,oBAAsByH,eAAelE,EAAI8F,QAASH,GAClD7B,OAAOL,GAAGjB,MAAK,GAAAxF,OAAIR,iBAAgB,KAAAQ,OAAIP,sBACnCkJ,IAAiBlJ,oBAAmB,CAAAoJ,EAAApM,EAAA,EAAA,KAAA,CAAA,OAAAoM,EAAApM,EAAA,EAChC8F,GAAGW,MAAM,oBAAqB,QAAO,KAAA,EAAA,OAAA2F,EAAApM,EAAA,EACrC8F,GAAGW,MAAM,qBAAsB,SAAQ,KAAA,EACnB,OAA1BnD,QAAUiD,EAAI+F,KAAKhJ,QAAO8I,EAAApM,EAAA,EACpB8F,GAAGW,MAAM,UAAWnD,SAAQ,KAAA,EAClC+G,OAAOL,GAAGjB,MAAM,qCAChB9C,OAAM,UAAQpD,WAAa,eAC3BwH,OAAOtB,MAAM,4BAA2B,KAAA,EAAA,OAAAqD,EAAApM,EAAA,EAEpCuM,gBAAe,KAAA,EAAA,OAAAH,EAAApM,EAAA,EACf8F,GAAGW,MAAM,sBAAuBzD,qBAAoB,KAAA,EAAA,OAAAoJ,EAAA1M,EAAA,GAAA,GAAAuM,EAAA,KAC3D,OAAA,SAAAO,GAAA,OAAAR,EAAA1O,MAAA8D,KAAA5D,UAAA,CAAA,CAhBI,IAgBH,UACK,SAAAqL,GACLwB,OAAOxB,MAAM,yBAA2BA,EAAM4D,OAAS5D,GACzD,KAAE,GAAA+C,EAAA,KACL,OAAA,WApCqB,OAAAD,EAAArO,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAqCtBkP,YAAW3K,kBAAA9B,eAAAwB,GAAC,SAAAkL,IAAA,OAAA1M,eAAAuB,GAAA,SAAAoL,GAAA,cAAAA,EAAA5M,GAAA,KAAA,EAAA,OAAA4M,EAAA5M,EAAA,EACJ0L,mBAAkB,KAAA,EAAA,OAAAkB,EAAAlN,EAAA,GAAA,GAAAiN,EAAA,KACvB,KACHE,WAAU9K,kBAAA9B,eAAAwB,GAAC,SAAAqL,IAAA,OAAA7M,eAAAuB,GAAA,SAAAuL,GAAA,cAAAA,EAAA/M,GAAA,KAAA,EAAA,OAAA+M,EAAA/M,EAAA,EACH0L,mBAAkB,KAAA,EAAA,OAAAqB,EAAArN,EAAA,GAAA,GAAAoN,EAAA,KACvB,KACH,IAAME,gBAAe,WAAA,IAAAC,EAAAlL,kBAAA9B,eAAAwB,GAAG,SAAAyL,IAAA,OAAAjN,eAAAuB,GAAA,SAAA2L,GAAA,cAAAA,EAAAnN,GAAA,KAAA,EAAA,OAAAmN,EAAAnN,EAAA,EAChBoL,kBAAiB,KAAA,EAAA,OAAA+B,EAAAzN,EAAA,EAChBuG,OAAOC,KAAKrD,WAAa,aAC7Bf,KAAI,WAAA,IAAAsL,EAAArL,kBAAA9B,eAAAwB,GAAC,SAAA4L,EAAgBlH,GAAK,IAAAmH,EAAA,OAAArN,eAAAuB,GAAA,SAAA+L,GAAA,cAAAA,EAAAvN,GAAA,KAAA,EAAA,OAAAuN,EAAAvN,EAAA,EACd8F,GAAGC,KAAK,QAAO,KAAA,EAAA,GAAAwH,EAAA3M,EAAA,CAAA2M,EAAAvN,EAAA,EAAA,KAAA,CAAA,OAAAuN,EAAAvN,EAAA,EAClB8F,GAAGW,MAAM,OAAQ/C,QAAQ4G,kBAAiB,KAAA,EAAA,OAAAiD,EAAAvN,EAAA,EAEvC8F,GAAGC,KAAK,qBAAoB,KAAA,EAAA,GAAAwH,EAAA3M,EAAA,CAAA2M,EAAAvN,EAAA,EAAA,KAAA,CAAA,OAAAuN,EAAAvN,EAAA,EAC/B8F,GAAGW,MAAM,oBAAqBxD,mBAAkB,KAAA,EAAA,OAAAsK,EAAAvN,EAAA,EAE7C8F,GAAGC,KAAK,sBAAqB,KAAA,EAAA,GAAAwH,EAAA3M,EAAA,CAAA2M,EAAAvN,EAAA,EAAA,KAAA,CAAA,OAAAuN,EAAAvN,EAAA,EAChC8F,GAAGW,MAAM,qBAAsB,SAAQ,KAAA,EAAA,OAAA8G,EAAAvN,EAAA,EAErC8F,GAAGC,KAAK,WAAU,KAAA,EAAA,IAAAwH,EAAA3M,EAAA,CAAA2M,EAAAvN,EAAA,EAAA,KAAA,CAAA,OAAAuN,EAAAvN,EAAA,EACV8F,GAAGC,KAAK,WAAU,KAAA,EAAlCzC,QAAOiK,EAAA3M,EAAA,KAAA,EAAA,OAAA2M,EAAAvN,EAAA,GAEH8F,GAAGW,MAAM,iCAAkC,SAAQ,KAAA,GAAA,OAAA8G,EAAAvN,EAAA,GACnD8F,GAAGW,MAAM,wBAAyB,SAAQ,KAAA,GAC5C3D,YAAYrF,SACd4M,OAAOR,MAAM9F,MAAK,cAAAR,OAAeT,YAAYrF,OAAM,YAC/C6P,EAAQ,EACZxK,YAAYpF,SAAQ,SAAUuG,GAC5BkC,EAAMC,MAAM,IAAIC,QAAQpC,IAAMnC,MAAK,SAAU0L,GACvCA,EACFnD,OAAOtB,MAAK,cAAAxF,OAAeU,KAE3BoG,OAAOzB,KAAI,cAAArF,OAAeU,IAC1BkC,EAAMoB,IAAI,IAAIlB,QAAQpC,OAExBqJ,IACcxK,YAAYrF,SACxB4M,OAAOtB,MAAK,aAAAxF,OAAcT,YAAYrF,OAAM,YAC5C4M,OAAOR,MAAMC,MAEjB,GACF,KACD,KAAA,GAAA,OAAAyD,EAAA7N,EAAA,GAAA,GAAA2N,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAA9P,MAAA8D,KAAA5D,UAAA,CAAA,CAlCI,IAkCH,UAAO,SAACqL,GACRwB,OAAOxB,MAAM,cAAgBA,EAAM4D,OAAS5D,GAC9C,KAAE,GAAAqE,EAAA,KACL,OAAA,WAxCoB,OAAAD,EAAA3P,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAyCrBqI,KAAK6H,iBAAiB,UAAS,WAAA,IAAAC,EAAA5L,kBAAA9B,eAAAwB,GAAE,SAAAmM,EAAgB7J,GAAK,OAAA9D,eAAAuB,GAAA,SAAAqM,GAAA,cAAAA,EAAA7N,GAAA,KAAA,EACpDqK,OAAOL,GAAGjG,MAAM,0CAChB,IACE8B,KAAKiI,cACL/J,EAAMgK,UAAUf,mBAChB3C,OAAOL,GAAGjB,MAAM,iCAClB,CAAE,MAAOF,GACPwB,OAAOxB,MAAM,cAAgBA,EAAM4D,OAAS5D,GAC9C,CAAC,KAAA,EAAA,OAAAgF,EAAAnO,EAAA,GAAA,GAAAkO,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAArQ,MAAA8D,KAAA5D,UAAA,CAAA,CAT8B,IAU/BqI,KAAK6H,iBAAiB,WAAU,WAAA,IAAAO,EAAAlM,kBAAA9B,eAAAwB,GAAE,SAAAyM,EAAMnK,GAAK,IAAAoK,EAAA,OAAAlO,eAAAuB,GAAA,SAAA4M,GAAA,cAAAA,EAAA3N,EAAA2N,EAAApO,GAAA,KAAA,EAcvC,OAbJqK,OAAOL,GAAGjG,MAAM,2CAA2CqK,EAAA3N,EAAA,EAEzDsD,EAAMgK,UACJ9H,OAAOlJ,OAAO+E,MAAK,SAAC/E,GAClB,OAAO6E,QAAQyM,IAAItR,EAAKuR,KAAI,SAAC1I,GACtBA,EAAI2I,SAAS3L,qBAAuBD,SAAWiD,IAClDK,OAAM,UAAQL,GACdyE,OAAOL,GAAGjB,MAAM,2BAA6BnD,GAEjD,IACF,IAAE,UAAO,SAACiD,GACRwB,OAAOxB,MAAM,eAAiBA,EAAM4D,OAAS5D,GAC/C,KACAuF,EAAApO,EAAA,EACI6F,KAAK2I,QAAQC,QAAO,KAAA,EAC1BpE,OAAOL,GAAGjB,MAAM,mCAAmCqF,EAAApO,EAAA,EAAA,MAAA,KAAA,EAAAoO,EAAA3N,EAAA,EAAA0N,EAAAC,EAAAxN,EAEnDyJ,OAAOxB,MAAM,eAAiBsF,EAAM1B,OAAK0B,IAAY,KAAA,EAAA,OAAAC,EAAA1O,EAAA,GAAA,GAAAwO,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,KAExD,OAAA,SAAAQ,GAAA,OAAAT,EAAA3Q,MAAA8D,KAAA5D,UAAA,CAAA,CApB+B,IAqBhCqI,KAAK6H,iBAAiB,QAAO,WAAA,IAAAiB,EAAA5M,kBAAA9B,eAAAwB,GAAE,SAAAmN,EAAM7K,GAAK,OAAA9D,eAAAuB,GAAA,SAAAqN,GAAA,cAAAA,EAAA7O,GAAA,KAAA,EACxC+D,EAAM+K,YACJlL,YAAYG,GAAM,UAAO,SAAC8E,GACxBwB,OAAOxB,MAAM,WAAa9E,EAAMC,QAAQC,IAAM,cAAgB4E,EAAM4D,OAAS5D,GAC/E,KACD,KAAA,EAAA,OAAAgG,EAAAnP,EAAA,GAAA,GAAAkP,EAAA,KACF,OAAA,SAAAG,GAAA,OAAAJ,EAAArR,MAAA8D,KAAA5D,UAAA,CAAA,CAN4B,IAS7B,IAAM6G,YAAW,WAAA,IAAA2K,EAAAjN,kBAAA9B,eAAAwB,GAAG,SAAAwN,EAAOlL,GAAK,OAAA9D,eAAAuB,GAAA,SAAA0N,GAAA,UAAA,IAAAA,EAAAlP,EAGX,OAFnBqK,OAAOR,MAAMb,KAAK,gBAAkB,IAAImG,IAAIpL,EAAMC,QAAQC,KAAKmL,UAC/D/E,OAAOzB,KAAK,yBAA2B7E,EAAMC,QAAQC,KACrDoG,OAAOR,MAAMC,MAAMoF,EAAAxP,EAAA,EACZ0E,MAAML,EAAMC,SAAQ,GAAAiL,EAAA,KAC5B,OAAA,SALgBI,GAAA,OAAAL,EAAA1R,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAMX8G,gBAAe,WAAA,IAAAgL,EAAAvN,kBAAA9B,eAAAwB,GAAG,SAAA8N,EAAOxL,GAAK,OAAA9D,eAAAuB,GAAA,SAAAgO,GAAA,UAAA,IAAAA,EAAAxP,EAAA,OAAAwP,EAAA9P,EAAA,EAC3BuG,OAAOG,MAAMrC,EAAMC,SAASlC,MAAK,SAAU2N,GAGhD,OAFApF,OAAOR,MAAMb,KAAK,oBAAsB,IAAImG,IAAIpL,EAAMC,QAAQC,KAAKmL,UACnE/E,OAAOzB,KAAK,yBAA2B7E,EAAMC,QAAQC,KACjDwL,GACFpF,OAAOR,MAAMd,MAAK,aAClBlC,QAAQmB,IAAIyH,GACZpF,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACN2F,IAEPpF,OAAOvB,KAAI,cACXuB,OAAOR,MAAMC,MACN4F,aAAa3L,EAAMC,SAAS,GAEvC,IAAE,GAAAuL,EAAA,KACH,OAAA,SAhBoBI,GAAA,OAAAL,EAAAhS,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAiBf+G,WAAU,WAAA,IAAAqL,EAAA7N,kBAAA9B,eAAAwB,GAAG,SAAAoO,EAAO9L,GAAK,OAAA9D,eAAAuB,GAAA,SAAAsO,GAAA,UAAA,IAAAA,EAAA9P,EAAA,OAAA8P,EAAApQ,EAAA,EACtBuG,OAAOG,MAAMrC,EAAMC,SAASlC,KAAI,WAAA,IAAAiO,EAAAhO,kBAAA9B,eAAAwB,GAAC,SAAAuO,EAAOP,GAAI,IAAAQ,EAAAC,EAAA,OAAAjQ,eAAAuB,GAAA,SAAA2O,GAAA,cAAAA,EAAAnQ,GAAA,KAAA,EAEQ,GADzDqK,OAAOR,MAAMb,KAAK,eAAiB,IAAImG,IAAIpL,EAAMC,QAAQC,KAAKmL,UAC9D/E,OAAOzB,KAAK,yBAA2B7E,EAAMC,QAAQC,MACjDwL,EAAI,CAAAU,EAAAnQ,EAAA,EAAA,KAAA,CAIa,OAHnBqK,OAAOR,MAAMd,MAAK,aAClBlC,QAAQmB,IAAIyH,GACZpF,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MAAMqG,EAAAnQ,EAAA,EACR8F,GAAGC,KAAK,qBAAoB,KAAA,EAAY,GAAZmK,EAAAC,EAAAvP,IAAAqP,EAAK,UAALC,GAAY,CAAAC,EAAAnQ,EAAA,EAAA,KAAA,CAAAiQ,EAAK,IAAIG,OAAOhN,SAASiN,QAAQtQ,KAAKgE,EAAMC,QAAQC,KAAI,KAAA,EAAA,IAAAgM,EAAA,CAAAE,EAAAnQ,EAAA,EAAA,KAAA,CACzGqK,OAAOtB,MAAM,kEAAiEoH,EAAAnQ,EAAA,EAAA,MAAA,KAAA,EAE9E+D,EAAMgK,UAAU2B,aAAa3L,EAAMC,UAAS,KAAA,EAAA,OAAAmM,EAAAzQ,EAAA,EAEvC+P,GAAI,KAAA,EAGQ,OADnBpF,OAAOvB,KAAI,cACXuB,OAAOR,MAAMC,MAAMqG,EAAAzQ,EAAA,EACZgQ,aAAa3L,EAAMC,UAAQ,KAAA,EAAA,OAAAmM,EAAAzQ,EAAA,GAAA,GAAAsQ,EAAA,KAErC,OAAA,SAAAM,GAAA,OAAAP,EAAAzS,MAAA8D,KAAA5D,UAAA,CAAA,CAnBsC,IAmBrC,GAAAqS,EAAA,KACH,OAAA,SArBeU,GAAA,OAAAX,EAAAtS,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAsBVgH,YAAW,WAAA,IAAAgM,EAAAzO,kBAAA9B,eAAAwB,GAAG,SAAAgP,EAAO1M,GAAK,OAAA9D,eAAAuB,GAAA,SAAAkP,GAAA,UAAA,IAAAA,EAAA1Q,EAAA,OAAA0Q,EAAAhR,EAAA,EACvBuG,OAAOG,MAAMrC,EAAMC,SAASlC,MAAK,SAAU2N,GAGhD,OAFApF,OAAOR,MAAMb,KAAK,gBAAkB,IAAImG,IAAIpL,EAAMC,QAAQC,KAAKmL,UAC/D/E,OAAOzB,KAAK,yBAA2B7E,EAAMC,QAAQC,KACjDwL,GACFpF,OAAOR,MAAMd,MAAK,aAClBlC,QAAQmB,IAAIyH,GACZpF,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACN2F,IAEPpF,OAAOvB,KAAI,cACXuB,OAAOR,MAAMC,MACN4F,aAAa3L,EAAMC,SAE9B,IAAE,GAAAyM,EAAA,KACH,OAAA,SAhBgBE,GAAA,OAAAH,EAAAlT,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAkBXoT,WAAU,WAAA,IAAAC,EAAA9O,kBAAA9B,eAAAwB,GAAG,SAAAqP,EAAO/M,GAAK,OAAA9D,eAAAuB,GAAA,SAAAuP,GAAA,UAAA,IAAAA,EAAA/Q,EAAA,OAAA+Q,EAAArR,EAAA,EACtBuG,OAAOG,MAAMrC,EAAMC,SAASlC,MAAK,SAAU2N,GAEhD,OADApF,OAAOR,MAAMb,KAAK,yBAA2BjF,EAAMC,QAAQC,KACvDwL,GACFpF,OAAOR,MAAMd,MAAK,aAClBlC,QAAQmB,IAAIyH,GACZpF,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACN2F,IAEPpF,OAAOvB,KAAI,cACXuB,OAAOR,MAAMC,MACN4F,aAAa3L,EAAMC,SAE9B,IAAE,GAAA8M,EAAA,KACH,OAAA,SAfeE,GAAA,OAAAH,EAAAvT,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAef,SACckS,aAAYuB,GAAA,OAAAC,cAAA5T,MAAA8D,KAAA5D,UAAA,CAAA,SAAA0T,gBA4B1B,OA5B0BA,cAAAnP,kBAAA9B,eAAAwB,GAA3B,SAAA0P,EAA4BnN,GAAO,IAAAoN,EAAAnN,EAAAuJ,EAAA6D,EAAA7T,UAAA,OAAAyC,eAAAuB,GAAA,SAAA8P,GAAA,cAAAA,EAAAtR,GAAA,KAAA,EAEd,GAFgBoR,IAAQC,EAAA5T,OAAA,GAAA4T,EAAA,KAAA3J,YAAA2J,EAAA,GACrCpN,EAAM,IAAIkL,IAAInL,EAAQC,KACxBuJ,EAAW,MACX4D,EAAQ,CAAAE,EAAAtR,EAAA,EAAA,KAAA,CAAA,OAAAsR,EAAAtR,EAAA,EACOuR,SAASvN,GAAQ,KAAA,EAAlCwJ,EAAQ8D,EAAA1Q,EAAA,KAAA,EAAA,GAEL4M,EAAQ,CAAA8D,EAAAtR,EAAA,EAAA,KAAA,CAAA,OAAAsR,EAAAtR,EAAA,EACMoE,MAAMJ,GAAQ,UAAO,WAAA,OAAM,IAAI,IAAC,KAAA,EAAjDwJ,EAAQ8D,EAAA1Q,EAAA,KAAA,EAIY,GAFtByJ,OAAOR,MAAM9F,MAAK,iBAAAR,OAAkBU,EAAImL,WACxC/E,OAAOzB,KAAI,gBAAArF,OAAiBS,EAAQC,MACpC4C,QAAQmB,IAAIwF,GAEW,QAAnBxJ,EAAQG,QAAqC,UAAhBF,EAAIuN,SAAqB,CAAAF,EAAAtR,EAAA,EAAA,KAAA,CAAA,OAAAsR,EAAAtR,EAAA,EACpCiG,OAAOC,KAAKrD,WAAa,YAAW,KAAA,EAA7CyO,EAAA1Q,EACL8F,IAAI1C,EAASwJ,EAASiE,SAAQ,UAAO,SAAA5I,GACzCwB,OAAOxB,MAAM,oBAAsBA,EAAM4D,OAAS5D,IAC/B,uBAAfA,EAAMhJ,OACRoG,OAAM,UAAQpD,WAAa,YAC3BwH,OAAOtB,MAAM,iBAEjB,IACAsB,OAAOtB,MAAK,eAAAxF,OAAgBS,EAAQC,MAAOqN,EAAAtR,EAAA,EAAA,MAAA,KAAA,EAE3CqK,OAAOvB,KAAI,mBAAAvF,OAAoBS,EAAQC,MAAO,KAAA,EAE7B,OAAnBoG,OAAOR,MAAMC,MAAMwH,EAAA5R,EAAA,EACZ8N,GAAQ,GAAA2D,EAAA,KAChBD,cAAA5T,MAAA8D,KAAA5D,UAAA,CAED,IAAM+T,SAAQ,WAAA,IAAAG,EAAA3P,kBAAA9B,eAAAwB,GAAG,SAAAkQ,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApO,EAAAqO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApM,EAAAqM,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/S,eAAAuB,GAAA,SAAAyR,GAAA,cAAAA,EAAAjT,GAAA,KAAA,EAEM,GADzB6R,EAAMqB,UAASpB,EACeD,EAAIsB,YAActB,EAAIuB,eAAiBvB,EAAIwB,kBAAoB,CAAC,EAA5FtB,EAAQD,EAARC,SAAUC,EAAaF,EAAbE,eACdD,IAAY,KAAKhS,KAAKiS,GAAc,CAAAiB,EAAAjT,EAAA,EAAA,KAAA,CACS,OAA/CqK,OAAOvB,KAAK,mCAAmCmK,EAAAvT,EAAA,EACxC0E,MAAMwN,IAAI,KAAA,EAOE,GALfK,EAAO,GACTC,EAAS,IAAI/C,IAAIyC,EAAI3N,KACrBkO,EAAWD,EAAO9C,SAASxE,MAAM,KAAK,GACtCwH,EAAc,KAAEW,EAEhB9P,mBAAiB,CAAAgQ,EAAAjT,EAAA,EAAA,KAAA,CAAA,OAAAiT,EAAAjT,EAAA,EAAW8F,GAAGC,KAAK,qBAAoB,KAAA,EAAAiN,EAAAC,EAAArS,EAAAmS,EAAK,SAALC,EAAW,KAAA,EAAA,KAAAF,EAAAC,GAAA,CAAAE,EAAAjT,EAAA,EAAA,KAAA,CAAA8S,EAAK,IAAI1C,OAAOhN,SAASiN,QAAQtQ,KAAK6R,EAAI3N,KAAI,KAAA,EAAA,IAAA6O,EAAA,CAAAG,EAAAjT,EAAA,EAAA,KAAA,CAEnH,IAAW4F,KADXyE,OAAOR,MAAMd,MAAM,qBAAuB6I,EAAI3N,KAC5BS,IAAIS,IAChBlB,EAAMS,IAAIS,IAAIS,GAAO,IAAM7C,iBAAmB,IAAMC,oBAAsB4O,EAAI3N,IAAIiG,QAAQ9G,SAASiN,OAAQ,IAC/GpM,EAAMqP,SAASA,SAASrP,IACxB4C,QAAQmB,IAAI/D,GACZgO,EAAK5U,KAAK4G,GAEZoG,OAAOR,MAAMC,MAAK,KAAA,EAAA,GAEfmI,EAAKxU,OAAM,CAAAwV,EAAAjT,EAAA,EAAA,KAAA,CAAAsS,EAAA,EAAAC,EACK7M,eAAc,KAAA,EAAA,KAAA4M,EAAAC,EAAA9U,QAAA,CAAAwV,EAAAjT,EAAA,EAAA,KAAA,CAAlB,GAAJwS,EAAID,EAAAD,IACT,IAAIlC,OAAOoC,EAAK5M,KAAK7F,KAAK6R,EAAI3N,KAAI,CAAAgP,EAAAjT,EAAA,EAAA,KAAA,CAEe,OADnDmS,EAAWK,EAAK7M,KAChByM,EAAc,IAAIhC,OAAOoC,EAAK5M,KAAK2N,KAAK3B,EAAI3N,KAAK,GAAEgP,EAAAvT,EAAA,EAAA,GAAA,KAAA,EAAA4S,IAAAW,EAAAjT,EAAA,EAAA,MAAA,KAAA,EAIvD,IAAW2F,KAAQjB,IACjB,GAAIiB,IAASwM,EAAU,CAErB,IAAWvM,KADXyE,OAAOR,MAAMd,MAAM,aAAAxF,OAAa4O,EAAQ,MAAOP,EAAI3N,KACjCS,IAAIiB,GACd1B,EAAMS,IAAIiB,GAAMC,GAAOgM,EAAI3N,IAAIiG,QAAQkI,EAAa,IAC1DvL,QAAQmB,IAAI/D,GACZgO,EAAK5U,KAAK4G,GAEZoG,OAAOR,MAAMC,KACf,CACD,KAAA,EAmBF,OAdCvD,EADE0L,EAAKxU,OACDqO,YAAYmG,GAEZ7N,MAAMwN,KACH3O,mBAAqB,IAAImN,OAAOhN,SAASiN,QAAQtQ,KAAK6R,EAAI3N,OAC7D2O,EAAMU,SAASA,SAAS1B,EAAI3N,MAAM2G,MAAM,KAAK4I,MAC7CX,EAAcY,eAAeb,GACnCrM,EAAMA,EACHzE,MAAK,SAAAyE,GAAG,OAAIA,EAAImN,aAAa,IAC7B5R,MAAK,SAAA6R,GAAM,OAAI,IAAIhN,SAASgN,EAAQ,CACnCC,QAAS,CACP,eAAgBf,IAElB,IAAC,UACI,WAAA,OAAM,IAAI,KACpBI,EAAAvT,EAAA,EACM6G,GAAG,GAAAoL,EAAA,KACX,OAAA,SA7DakC,GAAA,OAAAnC,EAAApU,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GA+DR8V,SAAW,SAACrP,GAEhB,IADAA,EAAMA,EAAI2G,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC3BkJ,SAAS,KACf7P,GAAO,iBACF,CACL,IAAM8P,EAAO9P,EAAI2G,MAAM,MAEI,IADdmJ,EAAKA,EAAKtW,OAAS,GACvBuW,QAAQ,OACf/P,GAAO,QAEX,CACA,OAAOA,CACT,EAAC,SACcgQ,SAAQC,GAAA,OAAAC,UAAA7W,MAAA8D,KAAA5D,UAAA,CAAA,SAAA2W,YAKtB,OALsBA,UAAApS,kBAAA9B,eAAAwB,GAAvB,SAAA2S,EAAwB7N,GAAG,IAAA8N,EAAAC,EAAAC,EAAA,OAAAtU,eAAAuB,GAAA,SAAAgT,GAAA,cAAAA,EAAAxU,GAAA,KAAA,EACN,OADMqU,EACd1N,SAAQ6N,EAAAxU,EAAA,EAAOuG,EAAImN,cAAa,KAAA,EAG1C,OAH0CY,EAAAE,EAAA5T,EAAA2T,EAAE,CAC3CE,OAAQlO,EAAIkO,OACZb,QAASrN,EAAIqN,SACdY,EAAA9U,EAAA,EAAA,IAAA2U,EAAAC,EAAAC,IAAA,GAAAH,EAAA,MACF9W,MAAA8D,KAAA5D,UAAA,CAED,SAASkX,mBACP9S,QAAQ+S,IAAM,SAAUC,GACtB,OAAO,IAAIhT,SAAQ,SAACC,EAASS,GAE3B,IAAIwI,GADJ8J,EAAW3V,MAAMC,QAAQ0V,GAAYA,EAAW,IAC7BnX,OACfoX,EAAO,GACX,GAAY,IAAR/J,EAAW,OAAOxI,EAAO,IAAIwS,eAAe,+BAChDF,EAASlX,SAAQ,SAAC+C,GACZA,aAAamB,QACfnB,EAAEqB,MACA,SAACyE,GAAG,OAAK1E,EAAQ0E,EAAI,IACrB,SAACwO,GACCjK,IACA+J,EAAKxX,KAAK0X,GACE,IAARjK,GAAWxI,EAAO,IAAIwS,eAAeD,GAC3C,IAGFvS,EAAO7B,EAEX,GACF,GACF,CACF,CAEA,SAASuU,SAASC,GAChB,IAAMC,EAAa,IAAIC,gBAEvB,OAAOF,EAAK3G,KAAI,SAAAsD,GACd,OAAO,IAAIhQ,SAAQ,SAACC,EAASS,GAC3B8B,MAAMwN,EAAK,CACTwD,OAAQF,EAAWE,SAElBtT,KAAKmS,UACLnS,MAAK,SAAAyE,GACJ2O,EAAWG,QACQ,MAAf9O,EAAIkO,OACNnS,EAAO,MAEPT,EAAQ0E,EACZ,IAAE,UACK,WAAA,OAAMjE,EAAO,KAAK,GAC7B,GACF,GACF,CAEA,SAASgT,cAAcL,GACrB,IAAMM,EAAa,IAAIC,MAAM,sBACvBC,EAAc,IAAIC,YAExB,OAAOT,EAAK3G,IAAG,WAAA,IAAAqH,EAAA5T,kBAAA9B,eAAAwB,GAAC,SAAAmU,EAAMhE,GAAG,IAAAsD,EAAAW,EAAA,OAAA5V,eAAAuB,GAAA,SAAAsU,GAAA,UAAA,IAAAA,EAAA9V,EAKrB,OAJIkV,EAAa,IAAIC,gBACnBU,GAAS,EACbJ,EAAY/H,iBAAiB6H,EAAW5P,MAAM,WACvCkQ,GAAQX,EAAWG,OAC1B,IAAES,EAAApW,EAAA,EACK,IAAIkC,SAAQ,SAACC,EAASS,GAC3B8B,MAAMwN,EAAK,CACTwD,OAAQF,EAAWE,SAClBtT,MAAK,SAAAyE,GACNsP,GAAS,EACTJ,EAAYM,cAAcR,GACP,MAAfhP,EAAIkO,OACNnS,EAAO,MAEPT,EAAQ0E,EACZ,IAAE,UAAO,WAAA,OAAMjE,EAAO,KAAK,GAC7B,IAAE,GAAAsT,EAAA,KACH,OAAA,SAAAI,GAAA,OAAAL,EAAArY,MAAA8D,KAAA5D,UAAA,CAAA,CAlBc,GAmBjB,CAEA,IAAMsO,YAAc,SAACmJ,GAEnB,OADKrT,QAAQ+S,KAAKD,mBACX9S,QAAQ+S,IAAIW,cAAcL,IAAOnT,MAAK,SAAAyE,GAAG,OAAIA,CAAG,IAAC,UAC/C,SAAC5J,GACN,MAAS,8CAALA,EACKiF,QAAQ+S,IAAIK,SAASC,IACzBnT,MAAK,SAACyE,GAAG,OAAKA,CAAG,IAAC,UACZ,WAAA,OAAM,IAAI,IAEd,IACT,GACJ,EAEMkN,eAAiB,SAACb,GACtB,OAAQA,GACN,IAAK,KACH,MAAO,kBACT,IAAK,OACH,MAAO,YACT,IAAK,MACH,MAAO,WACT,IAAK,OAkBL,IAAK,MACH,MAAO,mBAjBT,IAAK,OACH,MAAO,aACT,IAAK,MAEL,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MAEL,IAAK,MACH,MAAO,WACT,IAAK,cACH,MAAO,mBAGT,IAAK,QAEL,IAAK,OACH,MAAO,qBACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,2BACT,IAAK,OAEL,IAAK,MACH,MAAO,aACT,IAAK,MAEL,IAAK,OACH,MAAO,gBACT,IAAK,OACH,MAAO,wBACT,IAAK,QACH,MAAO,yBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,gCACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,oBACT,IAAK,KACH,MAAO,mBACT,IAAK,MACH,MAAO,sBACT,IAAK,MACH,MAAO,+BACT,IAAK,KACH,MAAO,8BACT,IAAK,MACH,MAAO,qBACT,IAAK,OACH,MAAO,0EACT,IAAK,MACH,MAAO,2BACT,IAAK,OACH,MAAO,oEACT,IAAK,MACH,MAAO,gCACT,IAAK,OACH,MAAO,4EACT,IAAK,MACH,MAAO,kBACT,IAAK,MAkEL,QACE,MAAO,aAjET,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,iBACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,gCACT,IAAK,MAEL,IAAK,OAEL,IAAK,MAEL,IAAK,MAEL,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,kBACT,IAAK,OACH,MAAO,gCACT,IAAK,MACH,MAAO,gBACT,IAAK,MACH,MAAO,oBACT,IAAK,MACH,MAAO,iBACT,IAAK,OACH,MAAO,aACT,IAAK,MAEL,IAAK,OAEL,IAAK,OACH,MAAO,eACT,IAAK,KAEL,IAAK,MACH,MAAO,cACT,IAAK,MAEL,IAAK,OAEL,IAAK,MACH,MAAO,aAIb,EACMqD,aAAY,WAAA,IAAAC,EAAAnU,kBAAA9B,eAAAwB,GAAG,SAAA0U,EAAOhQ,EAAO3F,GAAC,IAAAX,EAAA+S,EAAA3O,EAAA4O,EAAA,OAAA5S,eAAAuB,GAAA,SAAA4U,GAAA,cAAAA,EAAApW,GAAA,KAAA,EAC5BH,EAAOW,EAAEX,KAAKqK,QAAQ,WAAY9G,SAASiN,QAC3CuC,EAAM/S,EAAK+K,MAAM,KAAK4I,MACtBvP,EAAMpE,EAAKqK,QAAQ,cAAe,IAAIA,QAAQ,SAAU,IACxD2I,EAAcY,eAAeb,GACnCzM,EAAMO,IAAI,IAAIL,QAAQpC,GAAM,IAAI0C,SAASnG,EAAEmT,OAAQ,CACjDC,QAAS,CACP,eAAgBf,MAEhB,KAAA,EAAA,OAAAuD,EAAA1W,EAAA,GAAA,GAAAyW,EAAA,KACL,OAAA,SAViBE,EAAAC,GAAA,OAAAJ,EAAA5Y,MAAA8D,KAAA5D,UAAA,CAAA,CAAA,GAWlB+Y,cAAc,aACd,IAAMhK,cAAa,WAAA,IAAAiK,EAAAzU,kBAAA9B,eAAAwB,GAAG,SAAAgV,IAAA,IAAAC,EAAAC,EAAA,OAAA1W,eAAAuB,GAAA,SAAAoV,GAAA,cAAAA,EAAA5W,GAAA,KAAA,EAAA,GACfkD,mBAAkB,CAAA0T,EAAA5W,EAAA,EAAA,KAAA,CAAA,OAAA4W,EAAAlX,EAAA,GAAA,KAAA,EAAA,OAAAkX,EAAA5W,EAAA,EAGb8F,GAAGC,KAAK,sBAAqB,KAAA,EAAA,GAAK,SAAL6Q,EAAAhW,EAAW,CAAAgW,EAAA5W,EAAA,EAAA,KAAA,CAAA,OAAA4W,EAAAlX,EAAA,GAAA,KAAA,EAAA,GAG7C4D,QAAO,CAAAsT,EAAA5W,EAAA,EAAA,KAAA,CAAA,OAAA4W,EAAAlX,EAAA,GAAA,KAAA,EAAA,OAAAkX,EAAA5W,EAAA,EAGF8F,GAAGC,KAAK,kCAAiC,KAAA,EAAA,GAAK,SAAL6Q,EAAAhW,EAAW,CAAAgW,EAAA5W,EAAA,EAAA,KAAA,CAAA,OAAA4W,EAAAlX,EAAA,GAAA,KAAA,EAAA,OAAAkX,EAAA5W,EAAA,EAGxD8F,GAAGW,MAAM,iCAAkC,QAAO,KAAA,EACxD4D,OAAOzB,KAAK,2BAA6BtF,SACnCoT,EAAMpT,QAAQ4G,QAAQ,kCAAmC,+BACzDyM,EAASnT,cAAgBkT,EAC/BzQ,OAAOC,KAAKrD,WAAa,eAAef,KAAI,WAAA,IAAA+U,EAAA9U,kBAAA9B,eAAAwB,GAAC,SAAAqV,EAAO3Q,GAAK,OAAAlG,eAAAuB,GAAA,SAAAuV,GAAA,cAAAA,EAAA/W,GAAA,KAAA,EAAA,OAAA+W,EAAA/W,EAAA,EACjDgX,WAAWL,GAAQ7U,KAAI,WAAA,IAAAmV,EAAAlV,kBAAA9B,eAAAwB,GAAC,SAAAyV,EAAOC,GAAE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhX,EAAAiX,EAAA,OAAAxX,eAAAuB,GAAA,SAAAkW,GAAA,cAAAA,EAAAjX,EAAAiX,EAAA1X,GAAA,KAAA,EAAAoX,GAAA,EAAAC,GAAA,EAAAK,EAAAjX,EAAA,EAAA8W,EAAArV,eACfiV,GAAE,KAAA,EAAA,OAAAO,EAAA1X,EAAA,EAAAuX,EAAA/U,OAAA,KAAA,EAAA,KAAA4U,IAAAI,EAAAE,EAAA9W,GAAAI,MAAA,CAAA0W,EAAA1X,EAAA,EAAA,KAAA,CACP,OADAQ,EAACgX,EAAAxZ,MAChB6I,QAAQmB,IAAIxH,GAAGkX,EAAA1X,EAAA,EACTiW,aAAa9P,EAAO3F,GAAE,KAAA,EAAA4W,GAAA,EAAAM,EAAA1X,EAAA,EAAA,MAAA,KAAA,EAAA0X,EAAA1X,EAAA,EAAA,MAAA,KAAA,EAAA0X,EAAAjX,EAAA,EAAAgX,EAAAC,EAAA9W,EAAAyW,GAAA,EAAAC,EAAAG,EAAA,KAAA,EAAA,GAAAC,EAAAjX,EAAA,EAAAiX,EAAAjX,EAAA,GAAA2W,GAAA,MAAAG,EAAA,UAAA,CAAAG,EAAA1X,EAAA,EAAA,KAAA,CAAA,OAAA0X,EAAA1X,EAAA,EAAAuX,EAAA,YAAA,KAAA,EAAA,GAAAG,EAAAjX,EAAA,GAAA4W,EAAA,CAAAK,EAAA1X,EAAA,GAAA,KAAA,CAAA,MAAAsX,EAAA,KAAA,GAAA,OAAAI,EAAAlX,EAAA,GAAA,KAAA,GAAA,OAAAkX,EAAAlX,EAAA,GAAA,KAAA,GAAA,OAAAkX,EAAA1X,EAAA,GAExB8F,GAAGW,MAAM,oBAAqB,SAAQ,KAAA,GAAA,OAAAiR,EAAA1X,EAAA,GACtC8F,GAAGW,MAAM,qBAAsB,QAAO,KAAA,GAAA,OAAAiR,EAAA1X,EAAA,GACtC8F,GAAGW,MAAM,iCAAkC,SAAQ,KAAA,GACzD4D,OAAOL,GAAGjB,MAAM,sCAAqC,KAAA,GAAA,OAAA2O,EAAAhY,EAAA,GAAA,GAAAwX,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,KAAA,KACtD,OAAA,SAAAS,GAAA,OAAAV,EAAA3Z,MAAA8D,KAAA5D,UAAA,CAAA,CAT4B,IAS3B,KAAA,EAAA,OAAAuZ,EAAArX,EAAA,GAAA,GAAAoX,EAAA,KACH,OAAA,SAAAc,GAAA,OAAAf,EAAAvZ,MAAA8D,KAAA5D,UAAA,CAAA,CAX2C,IAW1C,SAAM,WAAA,IAAAqa,EAAA9V,kBAAA9B,eAAAwB,GAAC,SAAAqW,EAAOjP,GAAK,OAAA5I,eAAAuB,GAAA,SAAAuW,GAAA,cAAAA,EAAA/X,GAAA,KAAA,EAAA,OAAA+X,EAAA/X,EAAA,EACb8F,GAAGW,MAAM,iCAAkC,SAAQ,KAAA,EACzD4D,OAAOxB,MAAM,+BAAiCA,EAAM4D,OAAS5D,IAAQ,KAAA,EAAA,OAAAkP,EAAArY,EAAA,GAAA,GAAAoY,EAAA,KACtE,OAAA,SAAAE,GAAA,OAAAH,EAAAva,MAAA8D,KAAA5D,UAAA,CAAA,CAHO,IAGN,KAAA,EAAA,OAAAoZ,EAAAlX,EAAA,GAAA,GAAA+W,EAAA,KACH,OAAA,WAhCkB,OAAAD,EAAAlZ,MAAA8D,KAAA5D,UAAA,CAAA,CAAA","file":"../jquery.js","sourcesContent":["const prefix = 'MHuiG-Blog';\nconst cacheSuffixVersion = '00000020-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nconst npm_package_name = \"@mhg/blog\";\nlet npm_package_version = \"1.0.1761302019951\";\nlet status_npm_mirror = true;\nlet status_npm_tarball = true;\nlet debug = false;\nlocation.hostname == 'localhost' && (debug = true) && (status_npm_mirror = false);\nlet tarball = `https://registry.npmjs.org/@mhg/blog/-/blog-${npm_package_version}.tgz`;\nconst cors_anywhere = \"https://cors.mhuig.top?url=\"\nlet uuid = null\n\nconst setUUID = (id) => {\n  if (!uuid) {\n    uuid = id\n  }\n  return uuid\n}\n\nconst handleFetch = async (event) => {\n  const request = event.request;\n  const url = event.request.url;\n  if (request.method !== \"GET\") {\n    return fetch(request);\n  }\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/cdn-cgi/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/vues/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/api\\.mhuig\\.top/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/captcha/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/token/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/music-Archive/.test(url)) {\n    return OnlyCacheAlways(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdn\\.bootcdn\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/lib\\.baomitu\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/static\\.mhuig\\.top/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3|pdf)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n    mhuig: 'https://static.mhuig.top/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n    mhuig: 'https://static.mhuig.top/npm',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n    mhuig: 'https://static.mhuig.top/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  cors_anywhere+`https://registry.npmjs.org/${npm_package_name}/latest?nocache`,\n  cors_anywhere+`https://registry.npmmirror.com/${npm_package_name}/latest?nocache`,\n  cors_anywhere+`https://mirrors.cloud.tencent.com/npm/${npm_package_name}/latest?nocache`\n]\nconst getLocalVersion = async () => {\n  npm_package_version = await db.read('npm_package_version') || npm_package_version\n  logger.bg.info(`Local Version: ${npm_package_name}@${npm_package_version}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (mirror_time>6) {\n    return\n  }\n  if (!status_npm_mirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      const localVersion = await db.read('npm_package_version') || npm_package_version\n      npm_package_version = compareVersion(res.version, localVersion)\n      logger.bg.ready(`${npm_package_name}@${npm_package_version}`)\n      if (localVersion !== npm_package_version) {\n        await db.write('status_npm_mirror', \"true\")\n        await db.write('status_npm_tarball', \"false\")\n        tarball = res.dist.tarball\n        await db.write('tarball', tarball)\n        logger.bg.ready(\"[CacheAlways] NPM Mirror Enabled!\")\n        caches.delete(CACHE_NAME + \"-npmtarball\");\n        logger.ready(\"deleted cache npmtarball\")\n      }\n      await getNpmTarball();\n      await db.write('npm_package_version', npm_package_version)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000 );\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', setUUID(generate_uuid()))\n      }\n      if (!await db.read('status_npm_mirror')) {\n        await db.write('status_npm_mirror', status_npm_mirror)\n      }\n      if (!await db.read('status_npm_tarball')) {\n        await db.write('status_npm_tarball', \"false\")\n      }\n      if (await db.read('tarball')) {\n        tarball = await db.read('tarball')\n      }\n      await db.write('status_downloading_npm_tarball', \"false\")\n      await db.write('status_worker_channel', \"false\")\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion) && prefix !== key) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst OnlyCacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('OnlyCacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request, false)\n    }\n  })\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(async (resp) => {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      if ((await db.read('status_npm_mirror') === \"false\") && new RegExp(location.origin).test(event.request.url)) {\n        logger.ready(\"[CacheAlways] NPM Tarball Source Enabled! NPM Mirror Disabled!\")\n      } else {\n        event.waitUntil(CacheRuntime(event.request))\n      }\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request, MatchCDN = true) {\n  const url = new URL(request.url);\n  let response = null;\n  if (MatchCDN) {\n    response = await matchCDN(request);\n  }\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (status_npm_mirror && (await db.read('status_npm_mirror') === \"true\") && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + npm_package_name + \"@\" + npm_package_version + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && status_npm_mirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpeg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\nconst putNpmSource = async (cache, f) => {\n  const name = f.name.replace(/^package/, location.origin)\n  const ext = name.split('.').pop()\n  const url = name.replace(/index.html$/, \"\").replace(/.html$/, \"\")\n  const contentType = getContentType(ext)\n  cache.put(new Request(url), new Response(f.buffer, {\n    headers: {\n      \"Content-Type\": contentType\n    }\n  }));\n}\nimportScripts(\"/untgz.js\");\nconst getNpmTarball = async () => {\n  if (!status_npm_tarball) {\n    return\n  }\n  if (await db.read('status_npm_tarball') === \"true\") {\n    return\n  }\n  if (!tarball) {\n    return\n  }\n  if (await db.read('status_downloading_npm_tarball') === \"true\") {\n    return\n  }\n  await db.write('status_downloading_npm_tarball', \"true\")\n  logger.wait(\"Downloading NPM Source: \" + tarball);\n  const tgz = tarball.replace(\"https://registry.npmmirror.com/\", \"https://registry.npmjs.org/\")\n  const source = cors_anywhere + tgz\n  caches.open(CACHE_NAME + \"-npmtarball\").then(async (cache) => {\n    await FetchUntgz(source).then(async (fs) => {\n      for await (const f of fs) {\n        console.log(f);\n        await putNpmSource(cache, f)\n      }\n      await db.write('status_npm_mirror', \"false\")\n      await db.write('status_npm_tarball', \"true\")\n      await db.write('status_downloading_npm_tarball', \"false\")\n      logger.bg.ready(\"[CacheAlways] NPM Mirror Disabled!\")\n    })\n  }).catch(async (error) => {\n    await db.write('status_downloading_npm_tarball', \"false\")\n    logger.error('[Cache Npm Tarball Source] ' + (error.stack || error));\n  })\n}\n\n\n"]}