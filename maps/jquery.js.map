{"version":3,"sources":["jquery.js"],"names":["prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","npm_package_name","npm_package_version","status_npm_mirror","status_npm_tarball","debug","location","hostname","tarball","cors_anywhere","wss","status_ws","uuid","setUUID","id","self","ws","init","wsc","WebSocket","onerror","onclose","setTimeout","send","data","handleFetch","async","event","request","url","method","fetch","test","NetworkOnly","CacheFirst","CacheAlways","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","mhuig","combine","npm","unpkg","cdn_match_list","type","key","push","db","read","config","Promise","resolve","reject","caches","open","then","cache","match","Request","encodeURIComponent","res","text","catch","write","value","put","Response","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","arr","fi","length","first","other","concat","createlog","util","args","log","apply","creategroup","groupCollapsed","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","name","firstToUpperCase","strArr","createChalkBg","createChalkGroup","chalk","group","end","groupEnd","bg","Object","keys","forEach","toLowerCase","replace","L","toUpperCase","i","logger","generate_uuid","c","r","Math","random","toString","compareVersion","a","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","mirror_time","setNewestVersion","f","fetchAny","json","version","localVersion","dist","delete","getNpmTarball","stack","setInterval","installFunction","index","response","addEventListener","skipWaiting","waitUntil","all","map","includes","clients","claim","respondWith","URL","pathname","resp","RegExp","origin","CacheRuntime","matchCache","matchCDN","protocol","clone","req","nav","navigator","saveData","effectiveType","connection","mozConnection","webkitConnection","urls","urlObj","pathType","fullPath","item","ext","pop","contentType","getContentType","arrayBuffer","buffer","headers","endsWith","list","indexOf","progress","status","createPromiseAny","any","promises","Array","isArray","errs","AggregateError","p","err","controller","AbortController","signal","PromiseAll","abort","putNpmSource","importScripts","tgz","source","FetchUntgz","fs"],"mappings":"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","file":"../jquery.js","sourcesContent":["const prefix = 'MHuiG-Blog';\nconst cacheSuffixVersion = '00000015-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nconst npm_package_name = \"@mhg/blog\";\nlet npm_package_version = \"1.0.1660975713569\";\nlet status_npm_mirror = true;\nlet status_npm_tarball = true;\nlet debug = false;\nlocation.hostname == 'localhost' && (debug = true) && (status_npm_mirror = false);\nlet tarball = `https://registry.npmjs.org/@mhg/blog/-/blog-${npm_package_version}.tgz`;\nconst cors_anywhere = \"https://cors.mhuig.top?url=\"\nconst wss = \"wss://blog.mhuig.top/ws\"\nlet status_ws = false;\nlet uuid = null;\n// let zuid = null;\n\nconst setUUID = (id) => {\n  if (!uuid) {\n    uuid = id\n  }\n  return uuid\n}\n// const setZUID = (id) => {\n//   if (!zuid) {\n//     zuid = id\n//   }\n//   return zuid\n// }\n// const broadcast = new BroadcastChannel('Worker Channel');\n// broadcast.onmessage = async (event) => {\n//   const data = event.data;\n//   const type = data.type;\n//   const data_ = data.data;\n//   if (type === 'ANS') {\n//     await saveWebLog(data_);\n//   }\n// };\n// const saveWebLog = async (data) => {\n//   try {\n//     setUUID((await db.read('uuid') || generate_uuid()))\n//     setZUID((await db.read('zuid') || data.zuid))\n//     const weblog = {\n//       id: (uuid || await db.read('uuid') || generate_uuid()) + \"-\" + (zuid || await db.read('zuid') || data.zuid || \"unknown\"),\n//       uuid: (uuid || await db.read('uuid') || generate_uuid()),\n//       zuid: (zuid || await db.read('zuid') || data.zuid || \"unknown\"),\n//       info: data,\n//     }\n//     ws.send(JSON.stringify({ opt: \"weblog\", data: weblog }))\n//   } catch (error) { }\n// }\n// const status_worker_channel_interval = setInterval(async () => {\n//   const status = await db.read('status_worker_channel')\n//   if (status == \"true\") {\n//     clearInterval(status_worker_channel_interval)\n//   } else {\n//     broadcast.postMessage({ type: 'INIT' })\n//   }\n// }, 500);\nself.ws = {\n  init: () => {\n    self.wsc = new WebSocket(wss);\n    wsc.onerror = () => { };\n    wsc.onclose = () => {\n      status_ws = false;\n      setTimeout(() => {\n        ws.init()\n      }, 1000);\n    }\n    // wsc.addEventListener('message', async (event) => {\n    //   const data = JSON.parse(event.data)\n    //   console.log(data)\n    //   if (data.code == 200) {\n    //     status_ws = true;\n    //     setTimeout(() => { broadcast.postMessage({ type: 'ANS' }) }, 2000)\n    //   }\n    // })\n  },\n  send: (data) => {\n    if (!wsc) ws.init();\n    if (status_ws) {\n      wsc.send(data)\n    }\n  }\n}\nws.init()\nconst handleFetch = async (event) => {\n  const request = event.request;\n  const url = event.request.url;\n  if (request.method !== \"GET\") {\n    return fetch(request);\n  }\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/cdn-cgi/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/vues/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/api\\.mhuig\\.top/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/captcha/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/token/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/static\\.mhuig\\.top/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n    mhuig: 'https://static.mhuig.top/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    mhuig: 'https://static.mhuig.top/npm',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(prefix).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nlogger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nconst compareVersion = (a, b) => {\n  v1 = a.split('.');\n  v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${npm_package_name}/latest`,\n  `https://registry.npmmirror.com/${npm_package_name}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${npm_package_name}/latest`\n]\nconst getLocalVersion = async () => {\n  npm_package_version = await db.read('npm_package_version') || npm_package_version\n  logger.bg.info(`Local Version: ${npm_package_name}@${npm_package_version}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!status_npm_mirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = fetchAny(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      const localVersion = await db.read('npm_package_version') || npm_package_version\n      npm_package_version = compareVersion(res.version, localVersion)\n      logger.bg.ready(`${npm_package_name}@${npm_package_version}`)\n      if (localVersion !== npm_package_version) {\n        await db.write('status_npm_mirror', \"true\")\n        await db.write('status_npm_tarball', \"false\")\n        tarball = res.dist.tarball\n        await db.write('tarball', tarball)\n        logger.bg.ready(\"[CacheAlways] NPM Mirror Enabled!\")\n        caches.delete(CACHE_NAME + \"-npmtarball\");\n        logger.ready(\"deleted cache npmtarball\")\n      }\n      await getNpmTarball();\n      await db.write('npm_package_version', npm_package_version)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', setUUID(generate_uuid()))\n      }\n      if (!await db.read('status_npm_mirror')) {\n        await db.write('status_npm_mirror', status_npm_mirror)\n      }\n      if (!await db.read('status_npm_tarball')) {\n        await db.write('status_npm_tarball', \"false\")\n      }\n      if (await db.read('tarball')) {\n        tarball = await db.read('tarball')\n      }\n      await db.write('status_downloading_npm_tarball', \"false\")\n      await db.write('status_worker_channel', \"false\")\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion) && prefix !== key) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(async (resp) => {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      if ((await db.read('status_npm_mirror') === \"false\") && new RegExp(location.origin).test(event.request.url)) {\n        logger.ready(\"[CacheAlways] NPM Tarball Source Enabled! NPM Mirror Disabled!\")\n      } else {\n        event.waitUntil(CacheRuntime(event.request))\n      }\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n\n  if (status_npm_mirror && (await db.read('status_npm_mirror') === \"true\") && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + npm_package_name + \"@\" + npm_package_version + req.url.replace(location.origin, '')\n      url = fullPath(url)\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + urlObj.pathname.replace('/' + pathType, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = fetchAny(urls)\n  else\n    res = fetch(req)\n  if (res && status_npm_mirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(req.url).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(urls) {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const PromiseAll = urls.map((url) => {\n    return new Promise((resolve, reject) => {\n      fetch(url, { signal })\n        .then(progress)\n        .then((res) => {\n          const r = res.clone()\n          if (r.status !== 200) reject(null)\n          controller.abort()\n          resolve(r)\n        })\n        .catch(() => reject(null))\n    })\n  })\n\n  if (!Promise.any) createPromiseAny()\n\n  return Promise.any(PromiseAll)\n    .then((res) => res)\n    .catch(() => null)\n}\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpeg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\nconst putNpmSource = async (cache, f) => {\n  const name = f.name.replace(/^package/, location.origin)\n  const ext = name.split('.').pop()\n  const url = name.replace(/index.html$/, \"\").replace(/.html$/, \"\")\n  const contentType = getContentType(ext)\n  cache.put(new Request(url), new Response(f.buffer, {\n    headers: {\n      \"Content-Type\": contentType\n    }\n  }));\n}\nimportScripts(\"/untgz.js\");\nconst getNpmTarball = async () => {\n  if (!status_npm_tarball) {\n    return\n  }\n  if (await db.read('status_npm_tarball') === \"true\") {\n    return\n  }\n  if (!tarball) {\n    return\n  }\n  if (await db.read('status_downloading_npm_tarball') === \"true\") {\n    return\n  }\n  await db.write('status_downloading_npm_tarball', \"true\")\n  logger.wait(\"Downloading NPM Source: \" + tarball);\n  const tgz = tarball.replace(\"https://registry.npmmirror.com/\", \"https://registry.npmjs.org/\")\n  const source = cors_anywhere + tgz\n  caches.open(CACHE_NAME + \"-npmtarball\").then(async (cache) => {\n    await FetchUntgz(source).then(async (fs) => {\n      for await (const f of fs) {\n        console.log(f);\n        await putNpmSource(cache, f)\n      }\n      await db.write('status_npm_mirror', \"false\")\n      await db.write('status_npm_tarball', \"true\")\n      await db.write('status_downloading_npm_tarball', \"false\")\n      logger.bg.ready(\"[CacheAlways] NPM Mirror Disabled!\")\n    })\n  }).catch(async (error) => {\n    await db.write('status_downloading_npm_tarball', \"false\")\n    logger.error('[Cache Npm Tarball Source] ' + (error.stack || error));\n  })\n}\n\n\n"]}